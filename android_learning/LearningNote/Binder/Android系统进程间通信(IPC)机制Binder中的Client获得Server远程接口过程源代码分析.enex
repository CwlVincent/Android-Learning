<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export3.dtd">
<en-export export-date="20171124T091942Z" application="Evernote" version="Evernote Mac 6.12.2 (455489)">
<note><title>Android系统进程间通信(IPC)机制Binder中的Client获得Server远程接口过程源代码分析</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">
<en-note><div><span style="font-family: 'Helvetica Neue';">    在上一篇文章中，我们分析了Android系统进程间通信机制Binder中的Server在启动过程使用Service Manager的addService接口把自己添加到Service Manager守护过程中接受管理。在这一篇文章中，我们将深入到Binder驱动程序源代码去分析Client是如何通过Service Manager的getService接口中来获得Server远程接口的。Client只有获得了Server的远程接口之后，才能进一步调用Server提供的服务。</span></div><div><span style="font-family: 'Helvetica Neue';">    这里，我们仍然是通过Android系统中自带的多媒体播放器为例子来说明Client是如何通过IServiceManager::getService接口来获得MediaPlayerService这个Server的远程接口。假设读者已经读过前面3篇文章，即假设Service Manager和MediaPlayerService已经启动完毕，Service Manager现在等待Client的请求。</span></div><div><span style="font-family: 'Helvetica Neue';">    这里，我们要举例子说明Client便是MediaPlayer了，它声明和实现在frameworks/base/include/media/mediaplayer.h和frameworks/base/include/media/libmedia/mediaplayer.cpp文件中。MediaPlayer继承与IMediaDeathNotifier类，这个类声明和实现在frameworks/base/include/media/IMediaDeathNotifier.h和frameworks/base/include/media/libmedia/IMediaDeathNotifier.cpp文件中，里面有一个静态成员函数getMediaPlayerService，它通过IServiceManager::getService接口来获得MediaPlayerService的远程接口。</span></div><div><span style="font-family: 'Helvetica Neue';">    在介绍IMediaDeathNotifier::getMediaPlayerService函数之前，我们先了解这个函数的目标，从前面Server和Client获得Service Manager接口之路中，我们在获取Service Manager远程接口时，最终是获得了一个BpServiceManager对象的IServiceManager接口。类似的，我们要获得MediaPlayerService的远程接口，实际上就是要获得一个称为BpMediaPlayerService对象的IMediaPlayerService接口。现在我们就来看一下BpMediaPlayerService的类图。</span></div><div><en-media style="font-family: Helvetica Neue;" hash="f3ff21a69806e6ea76664a0e79f2d602" type="image/png"/><br/></div><div>    从这个类图可以看到，BpMediaPlayerService继承与BpInterface&lt;IMediaPlayerService&gt;类，即BpMediaPlayerService继承了IMediaPlayerService类和BpRefBase类，这两个又分别继承了RefBase类。BpRefBase类有一个成员变量mRemote，它的类型为IBinder实际上是一个BpBinder对象。BpBinder类使用了IPCThreadState类来与Binder驱动程序进行交互，而IPCThreadState类有一个成员变量mProcess，它的类型为ProcessState，IPCThreadState类借助ProcessState类来打开Binder设备文件/dev/binder,因此，它可以和Binder驱动程序进行交互。</div><div>    BpMediaPlayerService的构造函数有一个参数impl，它的类型为const sp&lt;IBinder&gt;&amp;，从上面的描述中，这个实际上就是BpBinder对象。这样，要创建一个BpMediaPlayerService对象，首先就要有一个BpBinder对象。再来看BpBinder类的构造函数，它有一个参数handle，类型为int32_t,这个参数的意义就是请求MediaPlayerService这个远程接口的进程对MediaPlayerService这个Binder实体的引用了。因此，获取MediaPlayerService这个远程接口的本质问题就变为从Service Manager中获得MediaPlayerService的一个句柄了。</div><div>    现在，我们就来看一下IMediaDeathNotifier::getMediaPlayerService的实现:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">// establish binder interface to MediaPlayerService</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">/*static*/const sp&lt;IMediaPlayerService&gt;&amp;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">IMediaDeathNotifier::getMediaPlayerService()</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    LOGV(&quot;getMediaPlayerService&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    Mutex::Autolock _l(sServiceLock);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (sMediaPlayerService.get() == 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        sp&lt;IServiceManager&gt; sm = defaultServiceManager();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        sp&lt;IBinder&gt; binder;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        do {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            binder = sm-&gt;getService(String16(&quot;media.player&quot;));</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (binder != 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">             }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">             LOGW(&quot;Media player service not published, waiting...&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">             usleep(500000); // 0.5 s</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } while(true);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (sDeathNotifier == NULL) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        sDeathNotifier = new DeathNotifier();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    binder-&gt;linkToDeath(sDeathNotifier);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    sMediaPlayerService = interface_cast&lt;IMediaPlayerService&gt;(binder);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    LOGE_IF(sMediaPlayerService == 0, &quot;no media player service!?&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return sMediaPlayerService;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    函数首先通过defaultServiceManager函数来获得ServiceManager的远程接口，实际上就是获得BpMediaPlayerService的IServiceManager接口，总的来说， 这个语句:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">sp&lt;IServiceManager&gt; sm = defaultServiceManager();</span></div></div><div>相当于</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">sp&lt;IServiceManager&gt; sm = new BpServiceManager(new BpBinder(0));</span></div></div><div>    这里的0表示ServiceManager的远程接口的句柄值是0.</div><div>    接下去的while循环是通过sm-&gt;getService接口来不断尝试获得名称为”media.player”的Service，即MediaPlayerService。为什么通过这个无穷的循环来获得MediaPlayerService呢？因为这时候MediaPlayerService可能还没有启动起来，所以这里如果发现取回来的binder接口为NULL，就睡眠0.5s，然后再尝试获取，这就是获取Servcie接口的标准做法。</div><div>    我们来看一下BpServiceManager::getService的实现:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">class BpServiceManager : public BpInterface&lt;IServiceManager&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    virtual sp&lt;IBinder&gt; getService(const String16&amp; name) const</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        unsigned n;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        for (n = 0; n &lt; 5; n++){</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            sp&lt;IBinder&gt; svc = checkService(name);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (svc != NULL) return svc;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            LOGI(&quot;Waiting for service %s...\n&quot;, String8(name).string());</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            sleep(1);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return NULL;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    virtual sp&lt;IBinder&gt; checkService( const String16&amp; name) const</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        Parcel data, reply;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        data.writeInterfaceToken(IServiceManager::getInterfaceDescriptor());</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        data.writeString16(name);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        remote()-&gt;transact(CHECK_SERVICE_TRANSACTION, data, &amp;reply);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return reply.readStrongBinder();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">};</span></div></div><div>    BpServiceManager::getService通过BpServiceManager::checkService执行操作。</div><div>    在BpServiceManager::checkService中，首先是通过Parcel::writeInterfaceToken往data写入一个RPC头，这个我们在Android源代码启动过程源代码分析一文已经介绍过了，就是往data里面写入一个整数和一个字符串”android.os.IServiceManager”,Service Manager来处理CHECK_SERVICE_TRANSACTION请求之前，会先验证一下这个RPC头，看看是否正确。接着再往data写入一个字符串name，这就是”media.player”了。回忆前一篇Service启动过程源代码分析，那里已经往ServiceManager中注册了一个名字”media.player”的MediaPlayerService。</div><div>    这里的remote()返回的是一个BpBinder，具体可以参考Server和Client获的Service Manager接口之路一文，于是就进行到BpBinder::transact函数了:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">status_t BpBinder::transact(</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    uint32_t code, const Parcel&amp; data, Parcel* reply, uint32_t flags)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    // Once a binder has died, it will never come back to life.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (mAlive) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        status_t status = IPCThreadState::self()-&gt;transact(</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            mHandle, code, data, reply, flags);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (status == DEAD_OBJECT) mAlive = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return status;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return DEAD_OBJECT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这里的mHandle=0，code=CHECK_SERVICE_TRANSACTION，flag=0;</div><div>    这里再进入到IPCThreadState::transact函数中:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">status_t IPCThreadState::transact(int32_t handle,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                                  uint32_t code, const Parcel&amp; data,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                                  Parcel* reply, uint32_t flags)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    status_t err = data.errorCheck();</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    flags |= TF_ACCEPT_FDS;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    IF_LOG_TRANSACTIONS() {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        TextOutput::Bundle _b(alog);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        alog &lt;&lt; &quot;BC_TRANSACTION thr &quot; &lt;&lt; (void*)pthread_self() &lt;&lt; &quot; / hand &quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            &lt;&lt; handle &lt;&lt; &quot; / code &quot; &lt;&lt; TypeCode(code) &lt;&lt; &quot;: &quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            &lt;&lt; indent &lt;&lt; data &lt;&lt; dedent &lt;&lt; endl;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (err == NO_ERROR) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        LOG_ONEWAY(&quot;&gt;&gt;&gt;&gt; SEND from pid %d uid %d %s&quot;, getpid(), getuid(),</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            (flags &amp; TF_ONE_WAY) == 0 ? &quot;READ REPLY&quot; : &quot;ONE WAY&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        err = writeTransactionData(BC_TRANSACTION, flags, handle, code, data, NULL);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (err != NO_ERROR) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (reply) reply-&gt;setError(err);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return (mLastError = err);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if ((flags &amp; TF_ONE_WAY) == 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        #if 0</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (code == 4) { // relayout</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            LOGI(&quot;&gt;&gt;&gt;&gt;&gt;&gt; CALLING transaction 4&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            LOGI(&quot;&gt;&gt;&gt;&gt;&gt;&gt; CALLING transaction %d&quot;, code);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        #endif</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (reply) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            err = waitForResponse(reply);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            Parcel fakeReply;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            err = waitForResponse(&amp;fakeReply);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        #if 0</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (code == 4) { // relayout</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            LOGI(&quot;&lt;&lt;&lt;&lt;&lt;&lt; RETURNING transaction 4&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            LOGI(&quot;&lt;&lt;&lt;&lt;&lt;&lt; RETURNING transaction %d&quot;, code);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        #endif</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        IF_LOG_TRANSACTIONS() {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            TextOutput::Bundle _b(alog);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            alog &lt;&lt; &quot;BR_REPLY thr &quot; &lt;&lt; (void*)pthread_self() &lt;&lt; &quot; / hand &quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                &lt;&lt; handle &lt;&lt; &quot;: &quot;;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (reply) alog &lt;&lt; indent &lt;&lt; *reply &lt;&lt; dedent &lt;&lt; endl;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            else alog &lt;&lt; &quot;(none requested)&quot; &lt;&lt; endl;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        err = waitForResponse(NULL, NULL);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return err;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    首先是调用函数writeTransactionData写入将要传输的数据到IPCThreadState的成员变量mOut中去:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">status_t IPCThreadState::writeTransactionData(int32_t cmd, uint32_t binderFlags,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    int32_t handle, uint32_t code, const Parcel&amp; data, status_t* statusBuffer)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    binder_transaction_data tr;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    tr.target.handle = handle;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    tr.code = code;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    tr.flags = binderFlags;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    const status_t err = data.errorCheck();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (err == NO_ERROR) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.data_size = data.ipcDataSize();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.data.ptr.buffer = data.ipcData();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.offsets_size = data.ipcObjectsCount()*sizeof(size_t);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.data.ptr.offsets = data.ipcObjects();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else if (statusBuffer) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.flags |= TF_STATUS_CODE;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        *statusBuffer = err;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.data_size = sizeof(status_t);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.data.ptr.buffer = statusBuffer;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.offsets_size = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.data.ptr.offsets = NULL;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return (mLastError = err);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    mOut.writeInt32(cmd);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    mOut.write(&amp;tr, sizeof(tr));</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return NO_ERROR;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    结构体binder_transaction_data已经介绍过了，这个结构体是用来描述要传输的参数的内容的。这里着重描述一下将要传输的参数tr里面的内容，handle=0，code=CHECK_SERVICE_TRANSACTION，cmd=BC_TRANSACTION，data里面的数据分别为：</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">writeInt32(IPCThreadState::self()-&gt;getStrictModePolicy() | STRICT_MODE_PENALTY_GATHER);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">writeString16(&quot;android.os.IServiceManager&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">writeString16(&quot;media.player&quot;);</span></div></div><div>    这是在BpServiceManager::checkService函数里面写进去的，其中前两个是RPC头，ServiceManager在接收这个请求时会验证这两个参数是否正确，这点前面也提到了。IPCThread-&gt;getStrictModePolicy默认返回0，STRICT_MODE_PENALTY_GATHER定义为:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">// Note: must be kept in sync with android/os/StrictMode.java's PENALTY_GATHER</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">#define STRICT_MODE_PENALTY_GATHER 0x100</span></div></div><div>    我们不关心这个参数的含义，这不会影响我们分析下面的源代码，有兴趣的读者可以研究一下。这里要注意的是，要传输的参数不包含有Binder对象，因此tr.offsets_size=0。要传输的参数最后写入到IPCThreadStat的成员变量mOut中，包括cmd和tr两个数据。</div><div>    回到IPCThreadState::transact函数中，由于(flags &amp; TF_ONE_WAY)为true，即这个是一个同步的请求，并且reply != NULL,最终调用:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">err = waitForResponse(reply);</span></div></div><div>    进入到waitForResponse函数中:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">status_t IPCThreadState::waitForResponse(Parcel *reply, status_t *acquireResult)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    int32_t cmd;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    int32_t err;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    while (1) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if ((err=talkWithDriver()) &lt; NO_ERROR) break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        err = mIn.errorCheck();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (err &lt; NO_ERROR) break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (mIn.dataAvail() == 0) continue;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        cmd = mIn.readInt32();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        IF_LOG_COMMANDS() {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            alog &lt;&lt; &quot;Processing waitForResponse Command: &quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                &lt;&lt; getReturnString(cmd) &lt;&lt; endl;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        switch (cmd) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        case BR_TRANSACTION_COMPLETE:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (!reply &amp;&amp; !acquireResult) goto finish;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        case BR_DEAD_REPLY:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            err = DEAD_OBJECT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            goto finish;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        case BR_FAILED_REPLY:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            err = FAILED_TRANSACTION;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            goto finish;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        case BR_ACQUIRE_RESULT:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                LOG_ASSERT(acquireResult != NULL, &quot;Unexpected brACQUIRE_RESULT&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                const int32_t result = mIn.readInt32();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                if (!acquireResult) continue;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                *acquireResult = result ? NO_ERROR : INVALID_OPERATION;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            goto finish;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        case BR_REPLY:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                binder_transaction_data tr;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                err = mIn.read(&amp;tr, sizeof(tr));</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                LOG_ASSERT(err == NO_ERROR, &quot;Not enough command data for brREPLY&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                if (err != NO_ERROR) goto finish;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                if (reply) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    if ((tr.flags &amp; TF_STATUS_CODE) == 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        reply-&gt;ipcSetDataReference(</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                            reinterpret_cast&lt;const uint8_t*&gt;(tr.data.ptr.buffer),</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                            tr.data_size,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                            reinterpret_cast&lt;const size_t*&gt;(tr.data.ptr.offsets),</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                            tr.offsets_size/sizeof(size_t),</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                            freeBuffer, this);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        err = *static_cast&lt;const status_t*&gt;(tr.data.ptr.buffer);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        freeBuffer(NULL,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                            reinterpret_cast&lt;const uint8_t*&gt;(tr.data.ptr.buffer),</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                            tr.data_size,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                            reinterpret_cast&lt;const size_t*&gt;(tr.data.ptr.offsets),</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                            tr.offsets_size/sizeof(size_t), this);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    freeBuffer(NULL,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        reinterpret_cast&lt;const uint8_t*&gt;(tr.data.ptr.buffer),</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        tr.data_size,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        reinterpret_cast&lt;const size_t*&gt;(tr.data.ptr.offsets),</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        tr.offsets_size/sizeof(size_t), this);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    continue;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            goto finish;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        default:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            err = executeCommand(cmd);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (err != NO_ERROR) goto finish;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">finish:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (err != NO_ERROR) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (acquireResult) *acquireResult = err;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (reply) reply-&gt;setError(err);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        mLastError = err;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return err;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这个函数通过IPCThreadState::talkWithDriver与驱动程序进行交互:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">status_t IPCThreadState::talkWithDriver(bool doReceive)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    LOG_ASSERT(mProcess-&gt;mDriverFD &gt;= 0, &quot;Binder driver is not opened&quot;);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    binder_write_read bwr;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    // Is the read buffer empty?</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    const bool needRead = mIn.dataPosition() &gt;= mIn.dataSize();</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    // We don't want to write anything if we are still reading</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    // from data left in the input buffer and the caller</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    // has requested to read the next data.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    const size_t outAvail = (!doReceive || needRead) ? mOut.dataSize() : 0;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bwr.write_size = outAvail;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bwr.write_buffer = (long unsigned int)mOut.data();</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    // This is what we'll read.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (doReceive &amp;&amp; needRead) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        bwr.read_size = mIn.dataCapacity();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        bwr.read_buffer = (long unsigned int)mIn.data();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        bwr.read_size = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    // Return immediately if there is nothing to do.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if ((bwr.write_size == 0) &amp;&amp; (bwr.read_size == 0)) return NO_ERROR;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bwr.write_consumed = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bwr.read_consumed = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    status_t err;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    do {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">#if defined(HAVE_ANDROID_OS)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (ioctl(mProcess-&gt;mDriverFD, BINDER_WRITE_READ, &amp;bwr) &gt;= 0)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            err = NO_ERROR;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        else</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            err = -errno;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">#else</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        err = INVALID_OPERATION;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">#endif</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } while (err == -EINTR);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (err &gt;= NO_ERROR) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (bwr.write_consumed &gt; 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (bwr.write_consumed &lt; (ssize_t)mOut.dataSize())</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                mOut.remove(0, bwr.write_consumed);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            else</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                mOut.setDataSize(0);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (bwr.read_consumed &gt; 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            mIn.setDataSize(bwr.read_consumed);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            mIn.setDataPosition(0);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return NO_ERROR;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return err;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这里的needRead为true，因此，bwr.read_size大于0；outAvail也大于0，因此，bwr.write_size也大于0。函数最后通过:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">ioctl(mProcess-&gt;mDriverFD, BINDER_WRITE_READ, &amp;bwr)</span></div></div><div>    进入到Binder驱动程序的binder_ioctl函数中。注意，这里的mProcess-&gt;mDriverFD是在我们前面调用defaultServiceManager函数获得Service Manager远程接口时，打开的设备文件/dev/binder的文件描述符，mProcess是IPCThreadState的成员变量。</div><div>    Binder驱动程序的binder_ioctl函数中，我们只关注BINDER_WRITE_READ命令相关的逻辑:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">static long binder_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    int ret;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_proc *proc = filp-&gt;private_data;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_thread *thread;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    unsigned int size = _IOC_SIZE(cmd);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    void __user *ubuf = (void __user *)arg;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    /*printk(KERN_INFO &quot;binder_ioctl: %d:%d %x %lx\n&quot;, proc-&gt;pid, current-&gt;pid, cmd, arg);*/</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ret = wait_event_interruptible(binder_user_error_wait, binder_stop_on_user_error &lt; 2);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (ret)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return ret;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    mutex_lock(&amp;binder_lock);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    thread = binder_get_thread(proc);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (thread == NULL) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ret = -ENOMEM;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        goto err;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    switch (cmd) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    case BINDER_WRITE_READ: {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        struct binder_write_read bwr;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (size != sizeof(struct binder_write_read)) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ret = -EINVAL;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            goto err;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (copy_from_user(&amp;bwr, ubuf, sizeof(bwr))) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ret = -EFAULT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            goto err;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (binder_debug_mask &amp; BINDER_DEBUG_READ_WRITE)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            printk(KERN_INFO &quot;binder: %d:%d write %ld at %08lx, read %ld at %08lx\n&quot;,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            proc-&gt;pid, thread-&gt;pid, bwr.write_size, bwr.write_buffer, bwr.read_size, bwr.read_buffer);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (bwr.write_size &gt; 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ret = binder_thread_write(proc, thread, (void __user *)bwr.write_buffer, bwr.write_size, &amp;bwr.write_consumed);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (ret &lt; 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                bwr.read_consumed = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                if (copy_to_user(ubuf, &amp;bwr, sizeof(bwr)))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    ret = -EFAULT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                goto err;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (bwr.read_size &gt; 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ret = binder_thread_read(proc, thread, (void __user *)bwr.read_buffer, bwr.read_size, &amp;bwr.read_consumed, filp-&gt;f_flags &amp; O_NONBLOCK);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (!list_empty(&amp;proc-&gt;todo))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                wake_up_interruptible(&amp;proc-&gt;wait);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (ret &lt; 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                if (copy_to_user(ubuf, &amp;bwr, sizeof(bwr)))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    ret = -EFAULT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                goto err;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (binder_debug_mask &amp; BINDER_DEBUG_READ_WRITE)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            printk(KERN_INFO &quot;binder: %d:%d wrote %ld of %ld, read return %ld of %ld\n&quot;,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            proc-&gt;pid, thread-&gt;pid, bwr.write_consumed, bwr.write_size, bwr.read_consumed, bwr.read_size);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (copy_to_user(ubuf, &amp;bwr, sizeof(bwr))) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ret = -EFAULT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            goto err;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    default:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ret = -EINVAL;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        goto err;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ret = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">err:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return ret;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这里的flip-&gt;private_data的值是在defaultServiceManager函数创建ProcessState对象时，在ProcessState构造函数通过open文件操作函数打开设备文件/dev/binder时设置好的，它表示的是调用open函数打开设备文件/dev/binder的进程上下文信息，这里将它取出来保存在proc的本地变量中。</div><div>    这里的thread本地变量表示当前线程上下文信息，通过binder_get_thread函数获得。在前面执行ProcessState构造函数时，也会通过ioctl函数进入到这个函数，那是第一次到binder_ioctl这里，因此，调用binder_get_thread时，表示当前进程上下文信息的proc变量还没有关于当前线程的上下文信息，因此，会为proc创建一个表示当前线程上下文信息的thread，会保存在proc-&gt;threads表示的红黑树结构中。这里调用binder_get_thread就可以直接从proc找到并返回了。</div><div>    进入到BINDER_WRITE_READ相关的逻辑。先看看BINDER_WRITE_READ的定义:</div><div>    </div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">#define BINDER_WRITE_READ           _IOWR('b', 1, struct binder_write_read)</span></div></div><div>    这里可以看出，BINDER_WRITE_READ命令的参数类型为struct binder_write_read:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">struct binder_write_read {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    signed long    write_size;    /* bytes to write */</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    signed long    write_consumed;    /* bytes consumed by driver */</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    unsigned long    write_buffer;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    signed long    read_size;    /* bytes to read */</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    signed long    read_consumed;    /* bytes consumed by driver */</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    unsigned long    read_buffer;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">};</span></div></div><div>    这个结构体的含义可以参考ServiceManager成为Binder守护进程之路一文。这里首先是通过copy_from_user函数把用户传进来的参数的内容拷贝到本地变量bwr中。</div><div>    从上面的调用过程，我们知道，这里bwr.write_size是大于0的，因此进入到binder_thread_write函数中，我们只关注BC_TRANSACTION相关的逻辑:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">int</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">binder_thread_write(struct binder_proc *proc, struct binder_thread *thread,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    void __user *buffer, int size, signed long *consumed)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    uint32_t cmd;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    void __user *ptr = buffer + *consumed;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    void __user *end = buffer + size;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    while (ptr &lt; end &amp;&amp; thread-&gt;return_error == BR_OK) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (get_user(cmd, (uint32_t __user *)ptr))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return -EFAULT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ptr += sizeof(uint32_t);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (_IOC_NR(cmd) &lt; ARRAY_SIZE(binder_stats.bc)) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            binder_stats.bc[_IOC_NR(cmd)]++;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            proc-&gt;stats.bc[_IOC_NR(cmd)]++;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            thread-&gt;stats.bc[_IOC_NR(cmd)]++;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        switch (cmd) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        case BC_TRANSACTION:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        case BC_REPLY: {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            struct binder_transaction_data tr;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (copy_from_user(&amp;tr, ptr, sizeof(tr)))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return -EFAULT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ptr += sizeof(tr);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            binder_transaction(proc, thread, &amp;tr, cmd == BC_REPLY);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                       }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        default:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            printk(KERN_ERR &quot;binder: %d:%d unknown command %d\n&quot;, proc-&gt;pid, thread-&gt;pid, cmd);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return -EINVAL;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        *consumed = ptr - buffer;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这里再次把用户传进来的参数拷贝到本地变量tr中，tr的类型为struct binder_transaction_data，这个就是前面我们在IPCThreadState::writeTransactionData写入的内容了。</div><div>    接着进入到binder_transaction函数中，不相关的代码我们忽略掉:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">static void</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">binder_transaction(struct binder_proc *proc, struct binder_thread *thread,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">struct binder_transaction_data *tr, int reply)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_transaction *t;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_work *tcomplete;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    size_t *offp, *off_end;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_proc *target_proc;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_thread *target_thread = NULL;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_node *target_node = NULL;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct list_head *target_list;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    wait_queue_head_t *target_wait;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_transaction *in_reply_to = NULL;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_transaction_log_entry *e;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    uint32_t return_error;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    .......</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (reply) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (tr-&gt;target.handle) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            target_node = binder_context_mgr_node;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (target_node == NULL) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return_error = BR_DEAD_REPLY;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                goto err_no_context_mgr_node;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        target_proc = target_node-&gt;proc;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (target_proc == NULL) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return_error = BR_DEAD_REPLY;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            goto err_dead_binder;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (!(tr-&gt;flags &amp; TF_ONE_WAY) &amp;&amp; thread-&gt;transaction_stack) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (target_thread) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        target_list = &amp;target_proc-&gt;todo;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        target_wait = &amp;target_proc-&gt;wait;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    /* TODO: reuse incoming transaction for reply */</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t = kzalloc(sizeof(*t), GFP_KERNEL);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (t == NULL) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return_error = BR_FAILED_REPLY;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        goto err_alloc_t_failed;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    binder_stats.obj_created[BINDER_STAT_TRANSACTION]++;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    tcomplete = kzalloc(sizeof(*tcomplete), GFP_KERNEL);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (tcomplete == NULL) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return_error = BR_FAILED_REPLY;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        goto err_alloc_tcomplete_failed;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    binder_stats.obj_created[BINDER_STAT_TRANSACTION_COMPLETE]++;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;debug_id = ++binder_last_id;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><br/></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (!reply &amp;&amp; !(tr-&gt;flags &amp; TF_ONE_WAY))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        t-&gt;from = thread;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    else</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        t-&gt;from = NULL;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;sender_euid = proc-&gt;tsk-&gt;cred-&gt;euid;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;to_proc = target_proc;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;to_thread = target_thread;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;code = tr-&gt;code;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;flags = tr-&gt;flags;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;priority = task_nice(current);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;buffer = binder_alloc_buf(target_proc, tr-&gt;data_size,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr-&gt;offsets_size, !reply &amp;&amp; (t-&gt;flags &amp; TF_ONE_WAY));</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (t-&gt;buffer == NULL) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return_error = BR_FAILED_REPLY;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        goto err_binder_alloc_buf_failed;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;buffer-&gt;allow_user_free = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;buffer-&gt;debug_id = t-&gt;debug_id;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;buffer-&gt;transaction = t;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;buffer-&gt;target_node = target_node;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (target_node)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        binder_inc_node(target_node, 1, 0, NULL);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    offp = (size_t *)(t-&gt;buffer-&gt;data + ALIGN(tr-&gt;data_size, sizeof(void *)));</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (copy_from_user(t-&gt;buffer-&gt;data, tr-&gt;data.ptr.buffer, tr-&gt;data_size)) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return_error = BR_FAILED_REPLY;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        goto err_copy_data_failed;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (reply) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else if (!(t-&gt;flags &amp; TF_ONE_WAY)) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        BUG_ON(t-&gt;buffer-&gt;async_transaction != 0);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        t-&gt;need_reply = 1;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        t-&gt;from_parent = thread-&gt;transaction_stack;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        thread-&gt;transaction_stack = t;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;work.type = BINDER_WORK_TRANSACTION;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    list_add_tail(&amp;t-&gt;work.entry, target_list);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    tcomplete-&gt;type = BINDER_WORK_TRANSACTION_COMPLETE;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    list_add_tail(&amp;tcomplete-&gt;entry, &amp;thread-&gt;todo);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (target_wait)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        wake_up_interruptible(target_wait);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    注意，这里的参数reply=0，表示这是一个BC_TRANSACTION命令。</div><div>    前面我们提到，传给驱动程序的handle值为0，即这里的tr-&gt;target.handle=0，表示请求的目标Binder对象是ServiceManager，因此有:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">target_node = binder_context_mgr_node;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">target_proc = target_node-&gt;proc;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">target_list = &amp;target_proc-&gt;todo;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">target_wait = &amp;target_proc-&gt;wait;</span></div></div><div>    其中binder_context_mgr_node是在ServiceManager通知Binder驱动程序它是守护过程时创建的。</div><div>    接着创建一个待完成事项tcomplete，它的类型为struct binder_work，这是等一会保存在当前线程的todo队列中去的，表示当前线程有一个待完成的事务。紧接着创建一个待处理的事务t，它的类型为struct binder_transaction，这是等一会要存到ServiceManager的todo队列中去的，表示SerivceManager当前有一个事务需要处理。同时，这个待处理事务t也要存放在当前线程的待完成事务transaction_stack列表中去:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">t-&gt;from_parent = thread-&gt;transaction_stack;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">thread-&gt;transaction_stack = t;</span></div></div><div>    这表明当前线程还有事务要处理:</div><div>    继续往下看，就是分别把tcomplete和t放在当前线程thread和ServiceManager进程的todo队列去了:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">t-&gt;work.type = BINDER_WORK_TRANSACTION;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">list_add_tail(&amp;t-&gt;work.entry, target_list);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">tcomplete-&gt;type = BINDER_WORK_TRANSACTION_COMPLETE;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">list_add_tail(&amp;tcomplete-&gt;entry, &amp;thread-&gt;todo);</span></div></div><div>    最后，ServiceManager有事情可以做了，就唤醒它了。</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">wake_up_interruptible(target_wait);</span></div></div><div>    前面我们提到，此时SerivceManager正在等待Client的请求，也就是ServiceManager此时正在进入到Binder驱动程序的binder_thread_read函数中，并且休眠在target-&gt;wait上，具体参数浅谈ServiceManager成为Binder守护进程之路。</div><div>    这里，我们暂时忽略ServiceManager被唤醒之后的情景，继续看当前线程的执行。</div><div>    函数binder_transaction执行完成之后，就一路返回到binder_ioctl从binder_thread_write函数调用返回后，发现bwr.read_size大于0，于是就进入到binder_thread_read函数去了:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">static int</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">binder_thread_read(struct binder_proc *proc, struct binder_thread *thread,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                   void  __user *buffer, int size, signed long *consumed, int non_block)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    void __user *ptr = buffer + *consumed;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    void __user *end = buffer + size;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    int ret = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    int wait_for_proc_work;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (*consumed == 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (put_user(BR_NOOP, (uint32_t __user *)ptr))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return -EFAULT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ptr += sizeof(uint32_t);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">retry:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    wait_for_proc_work = thread-&gt;transaction_stack == NULL &amp;&amp; list_empty(&amp;thread-&gt;todo);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (wait_for_proc_work) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (non_block) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (!binder_has_thread_work(thread))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                ret = -EAGAIN;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } else</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ret = wait_event_interruptible(thread-&gt;wait, binder_has_thread_work(thread));</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    while (1) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        uint32_t cmd;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        struct binder_transaction_data tr;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        struct binder_work *w;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        struct binder_transaction *t = NULL;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (!list_empty(&amp;thread-&gt;todo))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            w = list_first_entry(&amp;thread-&gt;todo, struct binder_work, entry);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        else if (!list_empty(&amp;proc-&gt;todo) &amp;&amp; wait_for_proc_work)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            w = list_first_entry(&amp;proc-&gt;todo, struct binder_work, entry);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (ptr - buffer == 4 &amp;&amp; !(thread-&gt;looper &amp; BINDER_LOOPER_STATE_NEED_RETURN)) /* no data added */</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                goto retry;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (end - ptr &lt; sizeof(tr) + 4)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            break;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        switch (w-&gt;type) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        case BINDER_WORK_TRANSACTION_COMPLETE: {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            cmd = BR_TRANSACTION_COMPLETE;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (put_user(cmd, (uint32_t __user *)ptr))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return -EFAULT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ptr += sizeof(uint32_t);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            binder_stat_br(proc, thread, cmd);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (binder_debug_mask &amp; BINDER_DEBUG_TRANSACTION_COMPLETE)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                printk(KERN_INFO &quot;binder: %d:%d BR_TRANSACTION_COMPLETE\n&quot;,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                proc-&gt;pid, thread-&gt;pid);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            list_del(&amp;w-&gt;entry);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            kfree(w);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            binder_stats.obj_deleted[BINDER_STAT_TRANSACTION_COMPLETE]++;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                                               } break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (!t)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            continue;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">done:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    函数首先是写入一个操作码BR_NOOP到用户传进来的缓存区中去。</div><div>    回忆一下上面的binder_transaction函数，这里的thread-&gt;transaction_stack!=NULL,并且thread-&gt;todo也不为空，所以线程不会进入休眠状态。</div><div>    进入while循环中，首先是从thread-&gt;todo队列中取回待处理事项w，w的类型为BINDER_WORK_TRANSACTION_COMPLETE，这也是在binder_transaction函数里面设置的。对BINDER_WORK_TRANSACTION_COMPLETE的处理也很简单，只是把一个操作码BR_TRANSACTION_COMPLETE写回到用户传进来的缓冲区中去。这时候，用户传进来的缓冲区就包含两个操作码了，分别是BR_NOOP和BINDER_WORK_TRANSACTION_COMPLETE。</div><div>    binder_thread_read执行完成之后，返回到binder_ioctl函数中，将操作的结果返回到用户空间中去:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">if (copy_to_user(ubuf, &amp;bwr, sizeof(bwr))) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ret = -EFAULT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    goto err;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    最后就返回到IPCThreadState::talkWithDriver函数中去了。</div><div>    IPCThreadState::talkWithDriver函数从下面语句:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">ioctl(mProcess-&gt;mDriverFD, BINDER_WRITE_READ, &amp;bwr)</span></div></div><div>    返回后，首先是清空之前写入Binder驱动程序的内容:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">if (bwr.write_consumed &gt; 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">     if (bwr.write_consumed &lt; (ssize_t)mOut.dataSize())</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">          mOut.remove(0, bwr.write_consumed);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">     else</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">          mOut.setDataSize(0);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    接着是设置从Binder驱动程序读取的内容:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">if (bwr.read_consumed &gt; 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">     mIn.setDataSize(bwr.read_consumed);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">     mIn.setDataPosition(0);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    然后就返回到IPCThreadState::waitForResponse去了。IPCThreadState::waitForResponse函数的处理很简单，就是处理刚才从Binder驱动程序读入内容了。从前面的分析中，我们知道，从Binder驱动程序读入的内容就是两个整数了，分别是BR_NOOP和BR_TRANSACTION_COMPLETE。对BR_NOOP的处理很简单，正如它的名字所示，什么也不做；而对BR_TRANSACTION_COMPLETE的处理，就分情况了，如果这个请求是异步的，那么整个BC_TRANSACTION操作就完成了，如果这个请求是同步的，即要等待回复的，也就是reply不为空，那么就还要通过IPCThreadState::talkWithDriver进入到Binder驱动程序中去等待BC_TRANSACTION操作的处理结果。</div><div>    这里属于后一种情况，于是再次通过IPCTHreadState::talkWithDriver进入到Binder驱动程序的binder_ioctl函数中。不过这一次在binder_ioctl函数中，bwr.write_size等于0，而bwr.read_size大于0，于是再次进入到binder_thread_read函数中。这时候thread-&gt;transaction_stack仍然不为NULL，不过thread-&gt;todo队列已经为空了，因为前面我们已经处理过thread-&gt;todo队列的内容了，于是就通过下面语句:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">ret = wait_event_interruptible(thread-&gt;wait, binder_has_thread_work(thread));</span></div></div><div>    进入休眠的状态了，等待ServiceManager的唤醒。</div><div>    现在，我们终于回到ServiceManager被唤醒之后的过程。前面我们说过，ServiceManager此时正在被binder_thread_read函数中休眠中:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">static int</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">binder_thread_read(struct binder_proc *proc, struct binder_thread *thread,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                   void  __user *buffer, int size, signed long *consumed, int non_block)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    void __user *ptr = buffer + *consumed;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    void __user *end = buffer + size;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    int ret = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    int wait_for_proc_work;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (*consumed == 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (put_user(BR_NOOP, (uint32_t __user *)ptr))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return -EFAULT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ptr += sizeof(uint32_t);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">retry:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    wait_for_proc_work = thread-&gt;transaction_stack == NULL &amp;&amp; list_empty(&amp;thread-&gt;todo);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (wait_for_proc_work) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (non_block) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (!binder_has_proc_work(proc, thread))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                ret = -EAGAIN;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } else</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ret = wait_event_interruptible_exclusive(proc-&gt;wait, binder_has_proc_work(proc, thread));</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    while (1) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        uint32_t cmd;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        struct binder_transaction_data tr;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        struct binder_work *w;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        struct binder_transaction *t = NULL;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (!list_empty(&amp;thread-&gt;todo))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            w = list_first_entry(&amp;thread-&gt;todo, struct binder_work, entry);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        else if (!list_empty(&amp;proc-&gt;todo) &amp;&amp; wait_for_proc_work)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            w = list_first_entry(&amp;proc-&gt;todo, struct binder_work, entry);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (ptr - buffer == 4 &amp;&amp; !(thread-&gt;looper &amp; BINDER_LOOPER_STATE_NEED_RETURN)) /* no data added */</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                goto retry;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (end - ptr &lt; sizeof(tr) + 4)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            break;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        switch (w-&gt;type) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        case BINDER_WORK_TRANSACTION: {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            t = container_of(w, struct binder_transaction, work);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                                      } break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (!t)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            continue;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        BUG_ON(t-&gt;buffer == NULL);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (t-&gt;buffer-&gt;target_node) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            struct binder_node *target_node = t-&gt;buffer-&gt;target_node;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            tr.target.ptr = target_node-&gt;ptr;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            tr.cookie =  target_node-&gt;cookie;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            t-&gt;saved_priority = task_nice(current);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (t-&gt;priority &lt; target_node-&gt;min_priority &amp;&amp;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                !(t-&gt;flags &amp; TF_ONE_WAY))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                binder_set_nice(t-&gt;priority);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            else if (!(t-&gt;flags &amp; TF_ONE_WAY) ||</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                t-&gt;saved_priority &gt; target_node-&gt;min_priority)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                binder_set_nice(target_node-&gt;min_priority);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            cmd = BR_TRANSACTION;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.code = t-&gt;code;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.flags = t-&gt;flags;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.sender_euid = t-&gt;sender_euid;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (t-&gt;from) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            struct task_struct *sender = t-&gt;from-&gt;proc-&gt;tsk;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            tr.sender_pid = task_tgid_nr_ns(sender, current-&gt;nsproxy-&gt;pid_ns);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.data_size = t-&gt;buffer-&gt;data_size;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.offsets_size = t-&gt;buffer-&gt;offsets_size;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.data.ptr.buffer = (void *)t-&gt;buffer-&gt;data + proc-&gt;user_buffer_offset;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.data.ptr.offsets = tr.data.ptr.buffer + ALIGN(t-&gt;buffer-&gt;data_size, sizeof(void *));</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (put_user(cmd, (uint32_t __user *)ptr))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return -EFAULT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ptr += sizeof(uint32_t);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (copy_to_user(ptr, &amp;tr, sizeof(tr)))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return -EFAULT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ptr += sizeof(tr);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        list_del(&amp;t-&gt;work.entry);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        t-&gt;buffer-&gt;allow_user_free = 1;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (cmd == BR_TRANSACTION &amp;&amp; !(t-&gt;flags &amp; TF_ONE_WAY)) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            t-&gt;to_parent = thread-&gt;transaction_stack;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            t-&gt;to_thread = thread;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            thread-&gt;transaction_stack = t;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">done:</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    *consumed = ptr - buffer;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这里就是从语句中唤醒了:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">ret = wait_event_interruptible_exclusive(proc-&gt;wait, binder_has_proc_work(proc, thread));</span></div></div><div>    Service Manager唤醒过来看，继续往下执行，进入到while循环中。首先是从proc-&gt;todo中取回待处理事项w。这个事项w的类型是BINDER_WORK_TRANSACTION,这是上面调用binder_transaction的时候设置的，于是通过w得到待处理事项t:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">t = container_of(w, struct binder_transaction, work);</span></div></div><div>    接下来的内容，就把cmd和t-&gt;buffer的内容拷贝到用户传进来的缓冲区去了，这里就是ServiceManager从用户空间传进来的缓冲区了:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">if (put_user(cmd, (uint32_t __user *)ptr))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return -EFAULT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">ptr += sizeof(uint32_t);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">if (copy_to_user(ptr, &amp;tr, sizeof(tr)))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return -EFAULT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">ptr += sizeof(tr);</span></div></div><div>    注意，这里先是把t-&gt;buffer的内容拷贝到本地变量tr中，再拷贝到用户空间缓冲区去。关于t-&gt;buffer内容的拷贝，请参考上一篇文章，它的一个关键地方是Binder驱动程序和ServiceManager守护进程共享了同一个物理内存的内容，拷贝是只是这个物理内存在用户空间的虚拟地址回去:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">tr.data.ptr.buffer = (void *)t-&gt;buffer-&gt;data + proc-&gt;user_buffer_offset;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">tr.data.ptr.offsets = tr.data.ptr.buffer + ALIGN(t-&gt;buffer-&gt;data_size, sizeof(void *));</span></div></div><div>    对于Binder驱动程序这次操作来说，这个事项就算是处理完了，就要从todo队列中删除了：</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">list_del(&amp;t-&gt;work.entry);</span></div></div><div>    紧接着，还不删除这个事务，因为它还要等待ServiceManager处理完成后，再进一步处理，因此，放在thread-&gt;transaction_stack队列中：</div><div>t-&gt;to_parent = thread-&gt;transaction_stack;</div><div>t-&gt;to_thread = thread;</div><div>thread-&gt;transaction_stack = t;</div><div>    还要注意的一个地方是，上面写入的cmd=BR_TRANSACTION,告诉ServiceManager守护进程，它要做上面事情，后面我们会看到相应的分析.</div><div>    这样，binder_thread_read函数就处理完了，回到binder_ioctl函数中，同样是操作结果写回到用户空间的缓冲区中去:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">if (copy_to_user(ubuf, &amp;bwr, sizeof(bwr))) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ret = -EFAULT;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    goto err;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    最后，就返回到frameworks/base/cmds/servicemanager/binder.c文件中的binder_loop函数去了:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">void binder_loop(struct binder_state *bs, binder_handler func)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    int res;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_write_read bwr;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    unsigned readbuf[32];</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bwr.write_size = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bwr.write_consumed = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bwr.write_buffer = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    readbuf[0] = BC_ENTER_LOOPER;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    binder_write(bs, readbuf, sizeof(unsigned));</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    for (;;) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        bwr.read_size = sizeof(readbuf);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        bwr.read_consumed = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        bwr.read_buffer = (unsigned) readbuf;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        res = ioctl(bs-&gt;fd, BINDER_WRITE_READ, &amp;bwr);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (res &lt; 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            LOGE(&quot;binder_loop: ioctl failed (%s)\n&quot;, strerror(errno));</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        res = binder_parse(bs, 0, readbuf, bwr.read_consumed, func);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (res == 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            LOGE(&quot;binder_loop: unexpected reply?!\n&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (res &lt; 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            LOGE(&quot;binder_loop: io error %d %s\n&quot;, res, strerror(errno));</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这里就是从下面的语句:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">res = ioctl(bs-&gt;fd, BINDER_WRITE_READ, &amp;bwr);</span></div></div><div>    返回来了。接着就进入binder_parse函数处理从Binder驱动程序里面读取出来的数据:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">int binder_parse(struct binder_state *bs, struct binder_io *bio,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                 uint32_t *ptr, uint32_t size, binder_handler func)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    int r = 1;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    uint32_t *end = ptr + (size / 4);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    while (ptr &lt; end) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        uint32_t cmd = *ptr++;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        switch(cmd) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        case BR_TRANSACTION: {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            struct binder_txn *txn = (void *) ptr;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (func) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                unsigned rdata[256/4];</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                struct binder_io msg;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                struct binder_io reply;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                int res;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                bio_init(&amp;reply, rdata, sizeof(rdata), 4);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                bio_init_from_txn(&amp;msg, txn);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                res = func(bs, txn, &amp;msg, &amp;reply);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                binder_send_reply(bs, &amp;reply, txn-&gt;data, res);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ptr += sizeof(*txn) / sizeof(uint32_t);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                             }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        default:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            LOGE(&quot;parse: OOPS %d\n&quot;, cmd);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return -1;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return r;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    前面我们说过，Binder驱动程序写入到用户空间的缓冲区中的cmd为BR_TRANSACTION，因此，这里我们只关注BR_TRANSACTION相关的逻辑。</div><div>    这里用到的两个数据结构体struct binder_txn和struct binder_io可以参考前面一篇文章</div><div>    接着往下看，函数调bio_init来初始化reply变量:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">void bio_init(struct binder_io *bio, void *data,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">              uint32_t maxdata, uint32_t maxoffs)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    uint32_t n = maxoffs * sizeof(uint32_t);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (n &gt; maxdata) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        bio-&gt;flags = BIO_F_OVERFLOW;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        bio-&gt;data_avail = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        bio-&gt;offs_avail = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bio-&gt;data = bio-&gt;data0 = data + n;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bio-&gt;offs = bio-&gt;offs0 = data;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bio-&gt;data_avail = maxdata - n;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bio-&gt;offs_avail = maxoffs;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bio-&gt;flags = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    接着又调用bio_init_from_txn来初始化msg变量</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">void bio_init_from_txn(struct binder_io *bio, struct binder_txn *txn)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bio-&gt;data = bio-&gt;data0 = txn-&gt;data;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bio-&gt;offs = bio-&gt;offs0 = txn-&gt;offs;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bio-&gt;data_avail = txn-&gt;data_size;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bio-&gt;offs_avail = txn-&gt;offs_size / 4;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bio-&gt;flags = BIO_F_SHARED;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    最后，真正进行处理的函数是从参数中传进来的函数指针func，这里就是定义在sever_manager.c文件中的svcmgr_handler函数:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">int svcmgr_handler(struct binder_state *bs,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                   struct binder_txn *txn,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                   struct binder_io *msg,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                   struct binder_io *reply)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct svcinfo *si;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    uint16_t *s;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    unsigned len;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    void *ptr;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    uint32_t strict_policy;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">//    LOGI(&quot;target=%p code=%d pid=%d uid=%d\n&quot;,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">//         txn-&gt;target, txn-&gt;code, txn-&gt;sender_pid, txn-&gt;sender_euid);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (txn-&gt;target != svcmgr_handle)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return -1;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    // Equivalent to Parcel::enforceInterface(), reading the RPC</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    // header with the strict mode policy mask and the interface name.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    // Note that we ignore the strict_policy and don't propagate it</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    // further (since we do no outbound RPCs anyway).</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    strict_policy = bio_get_uint32(msg);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    s = bio_get_string16(msg, &amp;len);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if ((len != (sizeof(svcmgr_id) / 2)) ||</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        memcmp(svcmgr_id, s, sizeof(svcmgr_id))) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        fprintf(stderr,&quot;invalid id %s\n&quot;, str8(s));</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return -1;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    switch(txn-&gt;code) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    case SVC_MGR_GET_SERVICE:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    case SVC_MGR_CHECK_SERVICE:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        s = bio_get_string16(msg, &amp;len);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ptr = do_find_service(bs, s, len);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (!ptr)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            break;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        bio_put_ref(reply, ptr);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return 0;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    default:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        LOGE(&quot;unknown code %d\n&quot;, txn-&gt;code);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return -1;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bio_put_uint32(reply, 0);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这里，ServiceManager要处理的code是SVG_MGR_CHECK_SERVICE，这是在前面的BpServiceManager::checkService函数里面设置的。</div><div>    回忆一下，在BpServiceManager::checkService时，传给Binder驱动程序的参数为:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">writeInt32(IPCThreadState::self()-&gt;getStrictModePolicy() | STRICT_MODE_PENALTY_GATHER);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">writeString16(&quot;android.os.IServiceManager&quot;);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">writeString16(&quot;media.player&quot;);  </span></div></div><div>    这里的语句:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">strict_policy = bio_get_uint32(msg);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">s = bio_get_string16(msg, &amp;len);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">s = bio_get_string16(msg, &amp;len);</span></div></div><div>    其中，会验证一下传进来的第二个参数，即”android.os.IServiceManager是否正确”，这个是验证RPC头，注释已经说得很清楚了。</div><div>    最后，就是调用do_find_service函数查找是否存在名称”media.player”的服务了。回忆一下前面一篇文章Binder中的Server启动过程源代码分析，MediaPlayerService已经把一个名称为”media.player”的服务注册到ServiceManager中，所以这里一定能找到。我们看看do_find_service这个函数:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">void *do_find_service(struct binder_state *bs, uint16_t *s, unsigned len)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct svcinfo *si;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    si = find_svc(s, len);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">//    LOGI(&quot;check_service('%s') ptr = %p\n&quot;, str8(s), si ? si-&gt;ptr : 0);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (si &amp;&amp; si-&gt;ptr) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return si-&gt;ptr;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}    </span></div></div><div>    这里又调用了find_svc函数:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">struct svcinfo *find_svc(uint16_t *s16, unsigned len)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct svcinfo *si;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    for (si = svclist; si; si = si-&gt;next) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if ((len == si-&gt;len) &amp;&amp;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            !memcmp(s16, si-&gt;name, len * sizeof(uint16_t))) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return si;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    就是在svclist列表中查找对应名称的svcinfo了。</div><div>    然后返回到do_find_service函数中。回忆一下前一篇文章，这里的si-&gt;ptr就是指MediaPlayerService这个Binder实体在ServiceManager进程中的句柄值了。</div><div>    回到svcmgr_handler函数中，调用bio_put_ref函数将这个binder引用写回到reply参数。我们看看bio_put_ref的实现：</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">void bio_put_ref(struct binder_io *bio, void *ptr)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_object *obj;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (ptr)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        obj = bio_alloc_obj(bio);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    else</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        obj = bio_alloc(bio, sizeof(*obj));</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (!obj)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    obj-&gt;flags = 0x7f | FLAT_BINDER_FLAG_ACCEPTS_FDS;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    obj-&gt;type = BINDER_TYPE_HANDLE;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    obj-&gt;pointer = ptr;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    obj-&gt;cookie = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这里很简单，就是把一个类型为BINDER_TYPE_HANDLE的binder_object写入到reply缓冲区去。这里的binder_object就是相当于是flat_binder_obj了，具体可以参考Binder中的Server启动过程源代码分析一文。</div><div>    再回到svcmgr_handler函数中，最后，还写入一个0的值到reply缓冲区中，表示操作结果码:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">bio_put_uint32(reply,0);</span></div></div><div>    最后返回到binder_parse函数中，调用binder_send_reply函数将操作结果反馈给Binder驱动程序:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">void binder_send_reply(struct binder_state *bs,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                       struct binder_io *reply,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                       void *buffer_to_free,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                       int status)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        uint32_t cmd_free;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        void *buffer;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        uint32_t cmd_reply;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        struct binder_txn txn;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } __attribute__((packed)) data;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    data.cmd_free = BC_FREE_BUFFER;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    data.buffer = buffer_to_free;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    data.cmd_reply = BC_REPLY;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    data.txn.target = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    data.txn.cookie = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    data.txn.code = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (status) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        data.txn.flags = TF_STATUS_CODE;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        data.txn.data_size = sizeof(int);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        data.txn.offs_size = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        data.txn.data = &amp;status;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        data.txn.offs = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        data.txn.flags = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        data.txn.data_size = reply-&gt;data - reply-&gt;data0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        data.txn.offs_size = ((char*) reply-&gt;offs) - ((char*) reply-&gt;offs0);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        data.txn.data = reply-&gt;data0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        data.txn.offs = reply-&gt;offs0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    binder_write(bs, &amp;data, sizeof(data));</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    注意，这里的status参数为0。从这里可以看出，binder_send_reply告诉Binder驱动程序执行BC_FREE_BUFFER和BC_REPLY命令，前者释放之前在binder_transaction分配的空间，地址为buffer_to_free，buffer_to_free这个地址是Binder驱动程序把自己在内核空间用的地址转换成用户空间的地址再传给ServiceManager的，所以Binder驱动拿到这个地址后，知道怎么样释放这个空间;后者告诉Binder驱动程序，它的SVC_MGR_CHECK_SERVICE操作已经完成了，要查询的服务的句柄值也是保存在data.txn.data，操作结果码是0，也是保存在data.txn.data中。</div><div>    再来看binder_write函数:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">int binder_write(struct binder_state *bs, void *data, unsigned len)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_write_read bwr;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    int res;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bwr.write_size = len;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bwr.write_consumed = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bwr.write_buffer = (unsigned) data;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bwr.read_size = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bwr.read_consumed = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    bwr.read_buffer = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    res = ioctl(bs-&gt;fd, BINDER_WRITE_READ, &amp;bwr);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (res &lt; 0) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        fprintf(stderr,&quot;binder_write: ioctl failed (%s)\n&quot;,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                strerror(errno));</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return res;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这里可以看出，只有写操作，没有读操作，即read_size为0.</div><div>    这里又是一个ioctl的BINDER_WRITE_READ操作。直入到驱动程序的binder_ioctl函数后，执行BINDER_WRITE_READ命令，这里就不再说了。</div><div>    最后，从binder_ioctl执行到binder_thread_write函数，首先是执行BC_FREE_BUFFER命令，这个命令的执行在前面一篇已经介绍过了。</div><div>    BC_REPLY的执行：</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">int  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">binder_thread_write(struct binder_proc *proc, struct binder_thread *thread,  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    void __user *buffer, int size, signed long *consumed)  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    uint32_t cmd;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    void __user *ptr = buffer + *consumed;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    void __user *end = buffer + size;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    while (ptr &lt; end &amp;&amp; thread-&gt;return_error == BR_OK) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (get_user(cmd, (uint32_t __user *)ptr))  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return -EFAULT;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ptr += sizeof(uint32_t);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (_IOC_NR(cmd) &lt; ARRAY_SIZE(binder_stats.bc)) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            binder_stats.bc[_IOC_NR(cmd)]++;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            proc-&gt;stats.bc[_IOC_NR(cmd)]++;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            thread-&gt;stats.bc[_IOC_NR(cmd)]++;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        switch (cmd) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        case BC_TRANSACTION:  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        case BC_REPLY: {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            struct binder_transaction_data tr;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (copy_from_user(&amp;tr, ptr, sizeof(tr)))  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return -EFAULT;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ptr += sizeof(tr);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            binder_transaction(proc, thread, &amp;tr, cmd == BC_REPLY);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            break;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                       }  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        *consumed = ptr - buffer;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return 0;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    又再次进入到binder_transaction函数:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">static void</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">binder_transaction(struct binder_proc *proc, struct binder_thread *thread,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">struct binder_transaction_data *tr, int reply)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_transaction *t;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_work *tcomplete;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    size_t *offp, *off_end;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_proc *target_proc;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_thread *target_thread = NULL;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_node *target_node = NULL;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct list_head *target_list;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    wait_queue_head_t *target_wait;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_transaction *in_reply_to = NULL;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    struct binder_transaction_log_entry *e;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    uint32_t return_error;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (reply) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        in_reply_to = thread-&gt;transaction_stack;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (in_reply_to == NULL) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return_error = BR_FAILED_REPLY;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            goto err_empty_call_stack;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        thread-&gt;transaction_stack = in_reply_to-&gt;to_parent;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        target_thread = in_reply_to-&gt;from;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        target_proc = target_thread-&gt;proc;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (target_thread) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        e-&gt;to_thread = target_thread-&gt;pid;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        target_list = &amp;target_thread-&gt;todo;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        target_wait = &amp;target_thread-&gt;wait;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    /* TODO: reuse incoming transaction for reply */</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t = kzalloc(sizeof(*t), GFP_KERNEL);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (t == NULL) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return_error = BR_FAILED_REPLY;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        goto err_alloc_t_failed;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    binder_stats.obj_created[BINDER_STAT_TRANSACTION]++;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    tcomplete = kzalloc(sizeof(*tcomplete), GFP_KERNEL);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (tcomplete == NULL) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return_error = BR_FAILED_REPLY;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        goto err_alloc_tcomplete_failed;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (!reply &amp;&amp; !(tr-&gt;flags &amp; TF_ONE_WAY))</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        t-&gt;from = thread;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    else</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        t-&gt;from = NULL;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;sender_euid = proc-&gt;tsk-&gt;cred-&gt;euid;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;to_proc = target_proc;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;to_thread = target_thread;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;code = tr-&gt;code;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;flags = tr-&gt;flags;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;priority = task_nice(current);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;buffer = binder_alloc_buf(target_proc, tr-&gt;data_size,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr-&gt;offsets_size, !reply &amp;&amp; (t-&gt;flags &amp; TF_ONE_WAY));</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (t-&gt;buffer == NULL) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return_error = BR_FAILED_REPLY;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        goto err_binder_alloc_buf_failed;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;buffer-&gt;allow_user_free = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;buffer-&gt;debug_id = t-&gt;debug_id;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;buffer-&gt;transaction = t;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;buffer-&gt;target_node = target_node;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (target_node)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        binder_inc_node(target_node, 1, 0, NULL);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    offp = (size_t *)(t-&gt;buffer-&gt;data + ALIGN(tr-&gt;data_size, sizeof(void *)));</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (copy_from_user(t-&gt;buffer-&gt;data, tr-&gt;data.ptr.buffer, tr-&gt;data_size)) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        binder_user_error(&quot;binder: %d:%d got transaction with invalid &quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            &quot;data ptr\n&quot;, proc-&gt;pid, thread-&gt;pid);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return_error = BR_FAILED_REPLY;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        goto err_copy_data_failed;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (copy_from_user(offp, tr-&gt;data.ptr.offsets, tr-&gt;offsets_size)) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        binder_user_error(&quot;binder: %d:%d got transaction with invalid &quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            &quot;offsets ptr\n&quot;, proc-&gt;pid, thread-&gt;pid);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return_error = BR_FAILED_REPLY;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        goto err_copy_data_failed;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    off_end = (void *)offp + tr-&gt;offsets_size;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    for (; offp &lt; off_end; offp++) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        struct flat_binder_object *fp;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        fp = (struct flat_binder_object *)(t-&gt;buffer-&gt;data + *offp);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        switch (fp-&gt;type) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        case BINDER_TYPE_HANDLE:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        case BINDER_TYPE_WEAK_HANDLE: {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            struct binder_ref *ref = binder_get_ref(proc, fp-&gt;handle);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (ref == NULL) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return_error = BR_FAILED_REPLY;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                goto err_binder_get_ref_failed;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (ref-&gt;node-&gt;proc == target_proc) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                struct binder_ref *new_ref;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                new_ref = binder_get_ref_for_node(target_proc, ref-&gt;node);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                if (new_ref == NULL) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    return_error = BR_FAILED_REPLY;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    goto err_binder_get_ref_for_node_failed;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                fp-&gt;handle = new_ref-&gt;desc;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                binder_inc_ref(new_ref, fp-&gt;type == BINDER_TYPE_HANDLE, NULL);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } break;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (reply) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        BUG_ON(t-&gt;buffer-&gt;async_transaction != 0);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        binder_pop_transaction(target_thread, in_reply_to);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else if (!(t-&gt;flags &amp; TF_ONE_WAY)) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    t-&gt;work.type = BINDER_WORK_TRANSACTION;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    list_add_tail(&amp;t-&gt;work.entry, target_list);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    tcomplete-&gt;type = BINDER_WORK_TRANSACTION_COMPLETE;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    list_add_tail(&amp;tcomplete-&gt;entry, &amp;thread-&gt;todo);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (target_wait)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        wake_up_interruptible(target_wait);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这次进入binder_transaction函数的情形和上面介绍的binder_transaction函数的情形基本一致，只是这里的proc、thread和target_proc、target_thread调换了角色，这里的proc和thread指的是ServiceManager进程，而target_proc和target_thread值得是刚才请求的SVC_MGR_CHECK_SERVICE的进程。</div><div>    那么，这次是如何找到target_proc和target_thread呢。首先，我们注意到，这里的reply等于1，其次，上面我们提到，Binder驱动程序在唤醒ServiceManager，告诉它有一个事务t要处理时，事务t虽然从ServiceManager的todo队列中删除了，但是仍然保留在transaction_stack中。因此，这里可以从thread-&gt;transaction_stack找到这个等待回复的事务t，然后通过它找回target_proc和target_thread:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">in_reply_to = thread-&gt;transaction_stack;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">target_thread = in_reply_to-&gt;from;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">target_list = &amp;target_thread-&gt;todo;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">target_wait = &amp;target_thread-&gt;wait;</span></div></div><div>    再接着往下看，由于ServiceManager返回了一个Binder引用，所以这里要处理一下，就是中间的for循环了。这里一个BINDER_TYPE_HANDLE类型的Binder引用，这是前面设置的。先把t-&gt;buffer-&gt;data的内容转换为一个struct flat_binder_obj对象的fp，这里的fp-&gt;handle值就是这个Service在ServiceManager进程里面的引用值了。接通过调用binder_get_ref函数得到Binder引用对象struct binder_ref类型的对象ref:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">struct binder_ref *ref = binder_get_ref(proc, fp-&gt;handle);</span></div></div><div>    这里一定能找到，因为前面MediaPlayerService执行的IServiceManager::addService的时候把自己添加到ServiceManager的时候，会在ServiceManager进程中创建这个Binder引用，然后把这个Binder引用的句柄值返回给ServiceManager用户空间。</div><div>    这里面的ref-&gt;node-&gt;proc不等于target_proc，因为这个Binder实体时属于创建MediaPlayerService的进程的，而不是请求这个服务的远程接口的进程的，因此，这里调用binder_get_ref_for_node函数为这个Binder实体在target_proc创建一个引用:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">struct binder_ref *new_ref;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">new_ref = binder_get_ref_for_node(target_proc, ref-&gt;node);</span></div></div><div>    然后增加引用计数:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">binder_inc_ref(new_ref, fp-&gt;type == BINDER_TYPE_HANDLE, NULL);</span></div></div><div>    这样，返回的数据中的Binder对象就处理完成了。注意，这里的会把fp-&gt;handle的值改为在target_proc中的引用值:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">fp-&gt;handle = new_ref-&gt;desc;</span></div></div><div>    这里就相当于是把t-&gt;buffer-&gt;data里面的Binder对象的句柄值改写了。因为这是在另外一个不同的进程里面的Binder引用，所以句柄值当然要用新的了。这个值最终是要拷贝到target_proc进程的用户空间去的。</div><div>    在继续往下看:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">if (reply) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">     BUG_ON(t-&gt;buffer-&gt;async_transaction != 0);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">     binder_pop_transaction(target_thread, in_reply_to);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">} else if (!(t-&gt;flags &amp; TF_ONE_WAY)) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">     ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">} else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">     ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这里的reply等于1，执行的binder_pop_transaction函数把当前事务in_reply_to从target_thread-&gt;transaction_stack队列中删除掉，这是上次调用binder_transaction函数的时候设置的，现在不需要了，所以把它删掉。</div><div>    再往后的逻辑就跟前面执行binder_transaction函数时候一样了，这里不再介绍。最后的结果就是唤醒请求SVC_MGR_CHECK_SERVICE操作的线程:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">if (target_wait)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">     wake_up_interruptible(target_wait);</span></div></div><div>    这样，ServiceManager回复调用SVC_MGR_CHECK_SERVICE请求就算完成了，重新回到servicemanager/binder.c文件中的binder_loop函数等待下一个Client请求的到来。事实上，ServiceManager回到binder_loop函数再次执行ioctl函数时候，又会再次进入到binder_thread_read函数。这时会发现thread-&gt;todo不为空，这时因为刚才我们调用了:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">list_add_tail(&amp;tcomplete-&gt;entry, &amp;thread-&gt;todo);</span></div></div><div>    把一个工作项tcomplete放在了在thread-&gt;todo中，这个tcomplete的type为BINDER_WORK_TRANSACTION_COMPLETE，因此，Binder驱动程序会执行下面操作:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">switch (w-&gt;type) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">case BINDER_WORK_TRANSACTION_COMPLETE: {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    cmd = BR_TRANSACTION_COMPLETE;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (put_user(cmd, (uint32_t __user *)ptr))  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return -EFAULT;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ptr += sizeof(uint32_t);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    list_del(&amp;w-&gt;entry);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    kfree(w);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">      </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } break;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}  </span></div></div><div>    binder_loop函数执行完这个ioctl调用后，才会在下一次调用ioctl进入到Binder驱动程序进入休眠状态，等待下一次Client的请求。</div><div>    上面讲到调用请求SVG_MGR_CHECK_SERVICE操作的线程被唤醒了，于是，重新执行binder_thread_read函数:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">static int  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">binder_thread_read(struct binder_proc *proc, struct binder_thread *thread,  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                   void  __user *buffer, int size, signed long *consumed, int non_block)  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    void __user *ptr = buffer + *consumed;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    void __user *end = buffer + size;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    int ret = 0;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    int wait_for_proc_work;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (*consumed == 0) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (put_user(BR_NOOP, (uint32_t __user *)ptr))  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return -EFAULT;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ptr += sizeof(uint32_t);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">retry:  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    wait_for_proc_work = thread-&gt;transaction_stack == NULL &amp;&amp; list_empty(&amp;thread-&gt;todo);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (wait_for_proc_work) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } else {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (non_block) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (!binder_has_thread_work(thread))  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                ret = -EAGAIN;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } else  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ret = wait_event_interruptible(thread-&gt;wait, binder_has_thread_work(thread));  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">      </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    while (1) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        uint32_t cmd;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        struct binder_transaction_data tr;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        struct binder_work *w;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        struct binder_transaction *t = NULL;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (!list_empty(&amp;thread-&gt;todo))  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            w = list_first_entry(&amp;thread-&gt;todo, struct binder_work, entry);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        else if (!list_empty(&amp;proc-&gt;todo) &amp;&amp; wait_for_proc_work)  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            w = list_first_entry(&amp;proc-&gt;todo, struct binder_work, entry);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        else {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (ptr - buffer == 4 &amp;&amp; !(thread-&gt;looper &amp; BINDER_LOOPER_STATE_NEED_RETURN)) /* no data added */  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                goto retry;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            break;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        switch (w-&gt;type) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        case BINDER_WORK_TRANSACTION: {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            t = container_of(w, struct binder_transaction, work);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                                      } break;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (!t)  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            continue;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        BUG_ON(t-&gt;buffer == NULL);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (t-&gt;buffer-&gt;target_node) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } else {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            tr.target.ptr = NULL;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            tr.cookie = NULL;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            cmd = BR_REPLY;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.code = t-&gt;code;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.flags = t-&gt;flags;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.sender_euid = t-&gt;sender_euid;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (t-&gt;from) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } else {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            tr.sender_pid = 0;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.data_size = t-&gt;buffer-&gt;data_size;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.offsets_size = t-&gt;buffer-&gt;offsets_size;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.data.ptr.buffer = (void *)t-&gt;buffer-&gt;data + proc-&gt;user_buffer_offset;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        tr.data.ptr.offsets = tr.data.ptr.buffer + ALIGN(t-&gt;buffer-&gt;data_size, sizeof(void *));  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (put_user(cmd, (uint32_t __user *)ptr))  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return -EFAULT;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ptr += sizeof(uint32_t);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (copy_to_user(ptr, &amp;tr, sizeof(tr)))  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return -EFAULT;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ptr += sizeof(tr);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        list_del(&amp;t-&gt;work.entry);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        t-&gt;buffer-&gt;allow_user_free = 1;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (cmd == BR_TRANSACTION &amp;&amp; !(t-&gt;flags &amp; TF_ONE_WAY)) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } else {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            t-&gt;buffer-&gt;transaction = NULL;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            kfree(t);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            binder_stats.obj_deleted[BINDER_STAT_TRANSACTION]++;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        break;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">done:  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return 0;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}  </span></div></div><div>    就是从下面这个调用:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">ret = wait_event_interruptible(thread-&gt;wait, binder_has_thread_work(thread));</span></div></div><div>    被唤醒过来了。在while循环中，从thread-&gt;todo得到w，w-&gt;type为BINDER_WORK_TRANSACTION，于是，得到t。从上面可以知道，ServiceManager返回来了一个Binder引用和一个结果码0回来，写在t-&gt;buffer-&gt;data里面，现在把t-&gt;buffer-&gt;data加上proc-&gt;user_buffer_offset，得到用户空间地址，保存在tr.data.ptr.buffer里面，这样用户空间就可以访问这个数据了。由于cmd不等于BR_TRANSACTION，这时就可以把t删除调用，因为以后都不需要用了。</div><div>    执行完这个函数后，就返回到binder_ioctl函数，执行下面语句，把数据返回给用户空间:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">if (copy_to_user(ubuf, &amp;bwr, sizeof(bwr))) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ret = -EFAULT;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    goto err;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}  </span></div></div><div>    接着返回到用户空间IPCThreadState::talkWithDriver函数，最后返回到IPCThreadState::waitForResponse函数，最后执行到下面语句:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">status_t IPCThreadState::waitForResponse(Parcel *reply, status_t *acquireResult)  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    int32_t cmd;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    int32_t err;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    while (1) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if ((err=talkWithDriver()) &lt; NO_ERROR) break;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">          </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        cmd = mIn.readInt32();  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        switch (cmd) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        case BR_REPLY:  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                binder_transaction_data tr;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                err = mIn.read(&amp;tr, sizeof(tr));  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                LOG_ASSERT(err == NO_ERROR, &quot;Not enough command data for brREPLY&quot;);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                if (err != NO_ERROR) goto finish;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                if (reply) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    if ((tr.flags &amp; TF_STATUS_CODE) == 0) {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        reply-&gt;ipcSetDataReference(  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                            reinterpret_cast&lt;const uint8_t*&gt;(tr.data.ptr.buffer),  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                            tr.data_size,  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                            reinterpret_cast&lt;const size_t*&gt;(tr.data.ptr.offsets),  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                            tr.offsets_size/sizeof(size_t),  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                            freeBuffer, this);  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    } else {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    }  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                } else {  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    ...... </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                }  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            goto finish;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">finish:  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return err;  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}  </span></div></div><div>    注意，这里的tr.flags等于0，这个是在上面的binder_send_reply函数里设置的。接着就把结果保存在reply了:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">reply-&gt;ipcSetDataReference(  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">       reinterpret_cast&lt;const uint8_t*&gt;(tr.data.ptr.buffer),  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">       tr.data_size,  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">       reinterpret_cast&lt;const size_t*&gt;(tr.data.ptr.offsets),  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">       tr.offsets_size/sizeof(size_t),  </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">       freeBuffer, this);  </span></div></div><div>    我们简单看一下Pracel::ipcSetDataReference函数的实现:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">void Parcel::ipcSetDataReference(const uint8_t* data, size_t dataSize,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    const size_t* objects, size_t objectsCount, release_func relFunc, void* relCookie)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    freeDataNoInit();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    mError = NO_ERROR;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    mData = const_cast&lt;uint8_t*&gt;(data);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    mDataSize = mDataCapacity = dataSize;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    //LOGI(&quot;setDataReference Setting data size of %p to %lu (pid=%d)\n&quot;, this, mDataSize, getpid());</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    mDataPos = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    LOGV(&quot;setDataReference Setting data pos of %p to %d\n&quot;, this, mDataPos);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    mObjects = const_cast&lt;size_t*&gt;(objects);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    mObjectsSize = mObjectsCapacity = objectsCount;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    mNextObjectHint = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    mOwner = relFunc;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    mOwnerCookie = relCookie;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    scanForFds();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    上面提到，返回来的数据中有一个Binder引用，因此，这里的mObjectSize等于1，这个Binder引用对应的位置记录在mObjects成员变量中。</div><div>    这里层层返回，最后回到BpServiceManager::checkService函数中:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">virtual sp&lt;IBinder&gt; BpServiceManager::checkService( const String16&amp; name) const</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    Parcel data, reply;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    data.writeInterfaceToken(IServiceManager::getInterfaceDescriptor());</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    data.writeString16(name);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    remote()-&gt;transact(CHECK_SERVICE_TRANSACTION, data, &amp;reply);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return reply.readStrongBinder();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这里就从:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">remote()-&gt;transact(CHECK_SERVICE_TRANSACTION, data, &amp;reply);</span></div></div><div>    返回了。我们接着看一下reply.readStrongBinder函数的实现:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">sp&lt;IBinder&gt; Parcel::readStrongBinder() const</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    sp&lt;IBinder&gt; val;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    unflatten_binder(ProcessState::self(), *this, &amp;val);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return val;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这里调用了unflatten_binder函数来构造一个Binder对象:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">status_t unflatten_binder(const sp&lt;ProcessState&gt;&amp; proc,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    const Parcel&amp; in, sp&lt;IBinder&gt;* out)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    const flat_binder_object* flat = in.readObject(false);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (flat) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        switch (flat-&gt;type) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            case BINDER_TYPE_BINDER:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                *out = static_cast&lt;IBinder*&gt;(flat-&gt;cookie);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return finish_unflatten_binder(NULL, *flat, in);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            case BINDER_TYPE_HANDLE:</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                *out = proc-&gt;getStrongProxyForHandle(flat-&gt;handle);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return finish_unflatten_binder(</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    static_cast&lt;BpBinder*&gt;(out-&gt;get()), *flat, in);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }        </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return BAD_TYPE;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这里的flat-&gt;type是BINDER_TYPE_HANDLE，因此调用ProcessState::getStrongProxyForHandle函数:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">sp&lt;IBinder&gt; ProcessState::getStrongProxyForHandle(int32_t handle)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    sp&lt;IBinder&gt; result;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    AutoMutex _l(mLock);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    handle_entry* e = lookupHandleLocked(handle);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (e != NULL) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        // We need to create a new BpBinder if there isn't currently one, OR we</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        // are unable to acquire a weak reference on this current one.  See comment</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        // in getWeakProxyForHandle() for more info about this.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        IBinder* b = e-&gt;binder;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (b == NULL || !e-&gt;refs-&gt;attemptIncWeak(this)) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            b = new BpBinder(handle); </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            e-&gt;binder = b;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (b) e-&gt;refs = b-&gt;getWeakRefs();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            result = b;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            // This little bit of nastyness is to allow us to add a primary</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            // reference to the remote proxy when this team doesn't have one</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            // but another team is sending the handle to us.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            result.force_set(b);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            e-&gt;refs-&gt;decWeak(this);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return result;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这里我们可以看到，ProcessState会把使用过的Binder远程接口(BpBinder)缓存起来，这样下次从ServiceManager哪里请求得到相同的句柄(Handle)时就可以直接返回这个Binder远程接口了，不用再创建一个出来。这里是第一次使用，因此，e-&gt;binder为空，于是创建一个BpBinder对象:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">b = new BpBinder(handle); </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">e-&gt;binder = b;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">if (b) e-&gt;refs = b-&gt;getWeakRefs();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">result = b;</span></div></div><div>    最后，函数返回到IMediaDeathNotifier::getMediaPlayerService这里，从这个语句返回:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">binder = sm-&gt;getService(String16(&quot;media.player&quot;));</span></div></div><div>    这里，就相当于是:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">binder = new BpBinder(handle);</span></div></div><div>    最后，函数调用:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">sMediaPlayerService = interface_cast&lt;IMediaPlayerService&gt;(binder);</span></div></div><div>    到了这里，我们可以参考Binder中的Server和Client获得ServiceManager，就会知道，这里的interface_cast实际上最终调用了IMediaPlayerService::asInterface函数:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">android::sp&lt;IMediaPlayerService&gt; IMediaPlayerService::asInterface(const android::sp&lt;android::IBinder&gt;&amp; obj)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    android::sp&lt;IServiceManager&gt; intr;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    if (obj != NULL) {             </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        intr = static_cast&lt;IMediaPlayerService*&gt;( </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            obj-&gt;queryLocalInterface(IMediaPlayerService::descriptor).get());</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (intr == NULL) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            intr = new BpMediaPlayerService(obj);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    return intr; </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这里的obj就是BpBinder，而BpBinder::queryLocalInterface返回NULL，因此就创建一个BpMediaPlayerService对象:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">intr = new BpMediaPlayerService(new BpBinder(handle));</span></div></div><div>    因此，我们最终就得到了一个BpMediaPlayerService对象，达到我们最初的目标。</div><div>    有了这个BpMediaPlayerService远程接口之后，MediaPlayer就可以调用MediaPlayerService的服务了。</div><div>    至此，Android系统进程间通信(IPC)机制的Binder中的Client如何通过Service Manager的getService函数获得Server远程接口的过程就分析完了,Binder机制的学习就暂告一段落了。</div><div>    不过，细心的读者可以会发现，我们这里介绍的Binder机制都是基于C/C++语言实现的，但是我们在编写引用程序都是基于java语言的，那么我们如何使用java语言来使用系统的Binder机制来进行进程间通信呢?这就是下一篇文章要介绍的内容了，敬请关注。</div><div><br/></div><div>参考:</div><div><a href="http://blog.csdn.net/luoshengyang/article/details/6633311">http://blog.csdn.net/luoshengyang/article/details/6633311</a></div><div>涉及的源码</div><div><en-media style="cursor:pointer;" hash="e2621c16244bc70113f8df0199ec9a7f" type="application/octet-stream"/><en-media style="cursor:pointer;" hash="26936dc1fe62ab1993aa0c6d5b16927e" type="application/octet-stream"/><en-media style="cursor:pointer;" hash="12a71e8727157a47e3c4af1ddaa7e739" type="application/octet-stream"/><en-media style="cursor:pointer;" hash="ec6323c65fb6558d52501cc59b9b3c05" type="application/octet-stream"/><en-media style="cursor:pointer;" hash="eec9c4a6ccc8dd4c4bf61ee5e943be92" type="application/octet-stream"/><en-media style="cursor:pointer;" hash="ead7729721dee374400374747af4f99b" type="application/octet-stream"/><en-media style="cursor:pointer;" hash="c7456931fd303d3c9b4320b4565babd9" type="application/octet-stream"/><en-media style="cursor:pointer;" hash="d4d6e65d1d0aedef189d4dfa8bf0ea41" type="application/octet-stream"/><en-media style="cursor:pointer;" hash="9ad2206f4d8a4497c2afd95638795365" type="application/octet-stream"/><en-media style="cursor:pointer;" hash="438d702c64081923bd7d8a2cd3c658db" type="application/octet-stream"/><en-media style="cursor:pointer;" hash="8ebc3da7888bec5e059f7c819f5487e5" type="application/octet-stream"/><en-media style="cursor:pointer;" hash="1afb504de066102e76e4924c47ef6a04" type="application/octet-stream"/></div><div><br/></div></en-note>
]]></content><created>20171121T125922Z</created><updated>20171123T030947Z</updated><note-attributes><latitude>22.53659809250382</latitude><longitude>114.0505364716306</longitude><altitude>12.42739868164062</altitude><author>雅字杀手</author><source>desktop.mac</source><reminder-order>0</reminder-order></note-attributes><resource><data encoding="base64">LyoKICogQ29weXJpZ2h0IChDKSAyMDA1IFRoZSBBbmRyb2lkIE9wZW4gU291cmNlIFByb2plY3QKICoK
ICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNl
bnNlIik7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0
aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAq
CiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVu
bGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29m
dHdhcmUKICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4g
IkFTIElTIiBCQVNJUywKICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJ
TkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNw
ZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKICogbGltaXRhdGlvbnMgdW5k
ZXIgdGhlIExpY2Vuc2UuCiAqLwoKI2RlZmluZSBMT0dfVEFHICJJUENUaHJlYWRTdGF0ZSIKCiNpbmNs
dWRlIDxiaW5kZXIvSVBDVGhyZWFkU3RhdGUuaD4KCiNpbmNsdWRlIDxiaW5kZXIvQmluZGVyLmg+CiNp
bmNsdWRlIDxiaW5kZXIvQnBCaW5kZXIuaD4KI2luY2x1ZGUgPGJpbmRlci9UZXh0T3V0cHV0Lmg+Cgoj
aW5jbHVkZSA8Y3V0aWxzL3NjaGVkX3BvbGljeS5oPgojaW5jbHVkZSA8dXRpbHMvTG9nLmg+CiNpbmNs
dWRlIDx1dGlscy90aHJlYWRzLmg+CgojaW5jbHVkZSA8cHJpdmF0ZS9iaW5kZXIvYmluZGVyX21vZHVs
ZS5oPgojaW5jbHVkZSA8cHJpdmF0ZS9iaW5kZXIvU3RhdGljLmg+CgojaW5jbHVkZSA8c3lzL2lvY3Rs
Lmg+CiNpbmNsdWRlIDxzaWduYWwuaD4KI2luY2x1ZGUgPGVycm5vLmg+CiNpbmNsdWRlIDxzdGRpby5o
PgojaW5jbHVkZSA8dW5pc3RkLmg+CgojaWZkZWYgSEFWRV9QVEhSRUFEUwojaW5jbHVkZSA8cHRocmVh
ZC5oPgojaW5jbHVkZSA8c2NoZWQuaD4KI2luY2x1ZGUgPHN5cy9yZXNvdXJjZS5oPgojZW5kaWYKI2lm
ZGVmIEhBVkVfV0lOMzJfVEhSRUFEUwojaW5jbHVkZSA8d2luZG93cy5oPgojZW5kaWYKCgojaWYgTE9H
X05ERUJVRwoKI2RlZmluZSBJRl9MT0dfVFJBTlNBQ1RJT05TKCkgaWYgKGZhbHNlKQojZGVmaW5lIElG
X0xPR19DT01NQU5EUygpIGlmIChmYWxzZSkKI2RlZmluZSBMT0dfUkVNT1RFUkVGUyguLi4pIAojZGVm
aW5lIElGX0xPR19SRU1PVEVSRUZTKCkgaWYgKGZhbHNlKQojZGVmaW5lIExPR19USFJFQURQT09MKC4u
LikgCiNkZWZpbmUgTE9HX09ORVdBWSguLi4pIAoKI2Vsc2UKCiNkZWZpbmUgSUZfTE9HX1RSQU5TQUNU
SU9OUygpIElGX0FMT0coTE9HX1ZFUkJPU0UsICJ0cmFuc2FjdCIpCiNkZWZpbmUgSUZfTE9HX0NPTU1B
TkRTKCkgSUZfQUxPRyhMT0dfVkVSQk9TRSwgImlwYyIpCiNkZWZpbmUgTE9HX1JFTU9URVJFRlMoLi4u
KSBBTE9HKExPR19ERUJVRywgInJlbW90ZXJlZnMiLCBfX1ZBX0FSR1NfXykKI2RlZmluZSBJRl9MT0df
UkVNT1RFUkVGUygpIElGX0FMT0coTE9HX0RFQlVHLCAicmVtb3RlcmVmcyIpCiNkZWZpbmUgTE9HX1RI
UkVBRFBPT0woLi4uKSBBTE9HKExPR19ERUJVRywgInRocmVhZHBvb2wiLCBfX1ZBX0FSR1NfXykKI2Rl
ZmluZSBMT0dfT05FV0FZKC4uLikgQUxPRyhMT0dfREVCVUcsICJpcGMiLCBfX1ZBX0FSR1NfXykKCiNl
bmRpZgoKLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpuYW1lc3BhY2UgYW5kcm9pZCB7CgpzdGF0aWMgY29uc3Qg
Y2hhciogZ2V0UmV0dXJuU3RyaW5nKHNpemVfdCBpZHgpOwpzdGF0aWMgY29uc3QgY2hhciogZ2V0Q29t
bWFuZFN0cmluZyhzaXplX3QgaWR4KTsKc3RhdGljIGNvbnN0IHZvaWQqIHByaW50UmV0dXJuQ29tbWFu
ZChUZXh0T3V0cHV0JiBvdXQsIGNvbnN0IHZvaWQqIF9jbWQpOwpzdGF0aWMgY29uc3Qgdm9pZCogcHJp
bnRDb21tYW5kKFRleHRPdXRwdXQmIG91dCwgY29uc3Qgdm9pZCogX2NtZCk7CgovLyBUaGlzIHdpbGwg
cmVzdWx0IGluIGEgbWlzc2luZyBzeW1ib2wgZmFpbHVyZSBpZiB0aGUgSUZfTE9HX0NPTU1BTkRTKCkK
Ly8gY29uZGl0aW9uYWxzIGRvbid0IGdldCBzdHJpcHBlZC4uLiAgYnV0IHRoYXQgaXMgcHJvYmFibHkg
d2hhdCB3ZSB3YW50LgojaWYgIUxPR19OREVCVUcKc3RhdGljIGNvbnN0IGNoYXIgKmtSZXR1cm5TdHJp
bmdzW10gPSB7CiAgICAiQlJfRVJST1IiLAogICAgIkJSX09LIiwKICAgICJCUl9UUkFOU0FDVElPTiIs
CiAgICAiQlJfUkVQTFkiLAogICAgIkJSX0FDUVVJUkVfUkVTVUxUIiwKICAgICJCUl9ERUFEX1JFUExZ
IiwKICAgICJCUl9UUkFOU0FDVElPTl9DT01QTEVURSIsCiAgICAiQlJfSU5DUkVGUyIsCiAgICAiQlJf
QUNRVUlSRSIsCiAgICAiQlJfUkVMRUFTRSIsCiAgICAiQlJfREVDUkVGUyIsCiAgICAiQlJfQVRURU1Q
VF9BQ1FVSVJFIiwKICAgICJCUl9OT09QIiwKICAgICJCUl9TUEFXTl9MT09QRVIiLAogICAgIkJSX0ZJ
TklTSEVEIiwKICAgICJCUl9ERUFEX0JJTkRFUiIsCiAgICAiQlJfQ0xFQVJfREVBVEhfTk9USUZJQ0FU
SU9OX0RPTkUiLAogICAgIkJSX0ZBSUxFRF9SRVBMWSIKfTsKCnN0YXRpYyBjb25zdCBjaGFyICprQ29t
bWFuZFN0cmluZ3NbXSA9IHsKICAgICJCQ19UUkFOU0FDVElPTiIsCiAgICAiQkNfUkVQTFkiLAogICAg
IkJDX0FDUVVJUkVfUkVTVUxUIiwKICAgICJCQ19GUkVFX0JVRkZFUiIsCiAgICAiQkNfSU5DUkVGUyIs
CiAgICAiQkNfQUNRVUlSRSIsCiAgICAiQkNfUkVMRUFTRSIsCiAgICAiQkNfREVDUkVGUyIsCiAgICAi
QkNfSU5DUkVGU19ET05FIiwKICAgICJCQ19BQ1FVSVJFX0RPTkUiLAogICAgIkJDX0FUVEVNUFRfQUNR
VUlSRSIsCiAgICAiQkNfUkVHSVNURVJfTE9PUEVSIiwKICAgICJCQ19FTlRFUl9MT09QRVIiLAogICAg
IkJDX0VYSVRfTE9PUEVSIiwKICAgICJCQ19SRVFVRVNUX0RFQVRIX05PVElGSUNBVElPTiIsCiAgICAi
QkNfQ0xFQVJfREVBVEhfTk9USUZJQ0FUSU9OIiwKICAgICJCQ19ERUFEX0JJTkRFUl9ET05FIgp9OwoK
c3RhdGljIGNvbnN0IGNoYXIqIGdldFJldHVyblN0cmluZyhzaXplX3QgaWR4KQp7CiAgICBpZiAoaWR4
IDwgc2l6ZW9mKGtSZXR1cm5TdHJpbmdzKSAvIHNpemVvZihrUmV0dXJuU3RyaW5nc1swXSkpCiAgICAg
ICAgcmV0dXJuIGtSZXR1cm5TdHJpbmdzW2lkeF07CiAgICBlbHNlCiAgICAgICAgcmV0dXJuICJ1bmtu
b3duIjsKfQoKc3RhdGljIGNvbnN0IGNoYXIqIGdldENvbW1hbmRTdHJpbmcoc2l6ZV90IGlkeCkKewog
ICAgaWYgKGlkeCA8IHNpemVvZihrQ29tbWFuZFN0cmluZ3MpIC8gc2l6ZW9mKGtDb21tYW5kU3RyaW5n
c1swXSkpCiAgICAgICAgcmV0dXJuIGtDb21tYW5kU3RyaW5nc1tpZHhdOwogICAgZWxzZQogICAgICAg
IHJldHVybiAidW5rbm93biI7Cn0KCnN0YXRpYyBjb25zdCB2b2lkKiBwcmludEJpbmRlclRyYW5zYWN0
aW9uRGF0YShUZXh0T3V0cHV0JiBvdXQsIGNvbnN0IHZvaWQqIGRhdGEpCnsKICAgIGNvbnN0IGJpbmRl
cl90cmFuc2FjdGlvbl9kYXRhKiBidGQgPQogICAgICAgIChjb25zdCBiaW5kZXJfdHJhbnNhY3Rpb25f
ZGF0YSopZGF0YTsKICAgIGlmIChidGQtPnRhcmdldC5oYW5kbGUgPCAxMDI0KSB7CiAgICAgICAgLyog
d2FudCB0byBwcmludCBkZXNjcmlwdG9ycyBpbiBkZWNpbWFsOyBndWVzcyBiYXNlZCBvbiB2YWx1ZSAq
LwogICAgICAgIG91dCA8PCAidGFyZ2V0LmRlc2M9IiA8PCBidGQtPnRhcmdldC5oYW5kbGU7CiAgICB9
IGVsc2UgewogICAgICAgIG91dCA8PCAidGFyZ2V0LnB0cj0iIDw8IGJ0ZC0+dGFyZ2V0LnB0cjsKICAg
IH0KICAgIG91dCA8PCAiIChjb29raWUgIiA8PCBidGQtPmNvb2tpZSA8PCAiKSIgPDwgZW5kbAogICAg
ICAgIDw8ICJjb2RlPSIgPDwgVHlwZUNvZGUoYnRkLT5jb2RlKSA8PCAiLCBmbGFncz0iIDw8ICh2b2lk
KilidGQtPmZsYWdzIDw8IGVuZGwKICAgICAgICA8PCAiZGF0YT0iIDw8IGJ0ZC0+ZGF0YS5wdHIuYnVm
ZmVyIDw8ICIgKCIgPDwgKHZvaWQqKWJ0ZC0+ZGF0YV9zaXplCiAgICAgICAgPDwgIiBieXRlcykiIDw8
IGVuZGwKICAgICAgICA8PCAib2Zmc2V0cz0iIDw8IGJ0ZC0+ZGF0YS5wdHIub2Zmc2V0cyA8PCAiICgi
IDw8ICh2b2lkKilidGQtPm9mZnNldHNfc2l6ZQogICAgICAgIDw8ICIgYnl0ZXMpIjsKICAgIHJldHVy
biBidGQrMTsKfQoKc3RhdGljIGNvbnN0IHZvaWQqIHByaW50UmV0dXJuQ29tbWFuZChUZXh0T3V0cHV0
JiBvdXQsIGNvbnN0IHZvaWQqIF9jbWQpCnsKICAgIHN0YXRpYyBjb25zdCBzaXplX3QgTiA9IHNpemVv
ZihrUmV0dXJuU3RyaW5ncykvc2l6ZW9mKGtSZXR1cm5TdHJpbmdzWzBdKTsKICAgIGNvbnN0IGludDMy
X3QqIGNtZCA9IChjb25zdCBpbnQzMl90KilfY21kOwogICAgaW50MzJfdCBjb2RlID0gKmNtZCsrOwog
ICAgc2l6ZV90IGNtZEluZGV4ID0gY29kZSAmIDB4ZmY7CiAgICBpZiAoY29kZSA9PSAoaW50MzJfdCkg
QlJfRVJST1IpIHsKICAgICAgICBvdXQgPDwgIkJSX0VSUk9SOiAiIDw8ICh2b2lkKikoKmNtZCsrKSA8
PCBlbmRsOwogICAgICAgIHJldHVybiBjbWQ7CiAgICB9IGVsc2UgaWYgKGNtZEluZGV4ID49IE4pIHsK
ICAgICAgICBvdXQgPDwgIlVua25vd24gcmVwbHk6ICIgPDwgY29kZSA8PCBlbmRsOwogICAgICAgIHJl
dHVybiBjbWQ7CiAgICB9CiAgICBvdXQgPDwga1JldHVyblN0cmluZ3NbY21kSW5kZXhdOwogICAgCiAg
ICBzd2l0Y2ggKGNvZGUpIHsKICAgICAgICBjYXNlIEJSX1RSQU5TQUNUSU9OOgogICAgICAgIGNhc2Ug
QlJfUkVQTFk6IHsKICAgICAgICAgICAgb3V0IDw8ICI6ICIgPDwgaW5kZW50OwogICAgICAgICAgICBj
bWQgPSAoY29uc3QgaW50MzJfdCAqKXByaW50QmluZGVyVHJhbnNhY3Rpb25EYXRhKG91dCwgY21kKTsK
ICAgICAgICAgICAgb3V0IDw8IGRlZGVudDsKICAgICAgICB9IGJyZWFrOwogICAgICAgIAogICAgICAg
IGNhc2UgQlJfQUNRVUlSRV9SRVNVTFQ6IHsKICAgICAgICAgICAgY29uc3QgaW50MzJfdCByZXMgPSAq
Y21kKys7CiAgICAgICAgICAgIG91dCA8PCAiOiAiIDw8IHJlcyA8PCAocmVzID8gIiAoU1VDQ0VTUyki
IDogIiAoRkFJTFVSRSkiKTsKICAgICAgICB9IGJyZWFrOwogICAgICAgIAogICAgICAgIGNhc2UgQlJf
SU5DUkVGUzoKICAgICAgICBjYXNlIEJSX0FDUVVJUkU6CiAgICAgICAgY2FzZSBCUl9SRUxFQVNFOgog
ICAgICAgIGNhc2UgQlJfREVDUkVGUzogewogICAgICAgICAgICBjb25zdCBpbnQzMl90IGIgPSAqY21k
Kys7CiAgICAgICAgICAgIGNvbnN0IGludDMyX3QgYyA9ICpjbWQrKzsKICAgICAgICAgICAgb3V0IDw8
ICI6IHRhcmdldD0iIDw8ICh2b2lkKiliIDw8ICIgKGNvb2tpZSAiIDw8ICh2b2lkKiljIDw8ICIpIjsK
ICAgICAgICB9IGJyZWFrOwogICAgCiAgICAgICAgY2FzZSBCUl9BVFRFTVBUX0FDUVVJUkU6IHsKICAg
ICAgICAgICAgY29uc3QgaW50MzJfdCBwID0gKmNtZCsrOwogICAgICAgICAgICBjb25zdCBpbnQzMl90
IGIgPSAqY21kKys7CiAgICAgICAgICAgIGNvbnN0IGludDMyX3QgYyA9ICpjbWQrKzsKICAgICAgICAg
ICAgb3V0IDw8ICI6IHRhcmdldD0iIDw8ICh2b2lkKiliIDw8ICIgKGNvb2tpZSAiIDw8ICh2b2lkKilj
CiAgICAgICAgICAgICAgICA8PCAiKSwgcHJpPSIgPDwgcDsKICAgICAgICB9IGJyZWFrOwoKICAgICAg
ICBjYXNlIEJSX0RFQURfQklOREVSOgogICAgICAgIGNhc2UgQlJfQ0xFQVJfREVBVEhfTk9USUZJQ0FU
SU9OX0RPTkU6IHsKICAgICAgICAgICAgY29uc3QgaW50MzJfdCBjID0gKmNtZCsrOwogICAgICAgICAg
ICBvdXQgPDwgIjogZGVhdGggY29va2llICIgPDwgKHZvaWQqKWM7CiAgICAgICAgfSBicmVhazsKCiAg
ICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgLy8gbm8gZGV0YWlscyB0byBzaG93IGZvcjogQlJfT0ss
IEJSX0RFQURfUkVQTFksCiAgICAgICAgICAgIC8vIEJSX1RSQU5TQUNUSU9OX0NPTVBMRVRFLCBCUl9G
SU5JU0hFRAogICAgICAgICAgICBicmVhazsKICAgIH0KICAgIAogICAgb3V0IDw8IGVuZGw7CiAgICBy
ZXR1cm4gY21kOwp9CgpzdGF0aWMgY29uc3Qgdm9pZCogcHJpbnRDb21tYW5kKFRleHRPdXRwdXQmIG91
dCwgY29uc3Qgdm9pZCogX2NtZCkKewogICAgc3RhdGljIGNvbnN0IHNpemVfdCBOID0gc2l6ZW9mKGtD
b21tYW5kU3RyaW5ncykvc2l6ZW9mKGtDb21tYW5kU3RyaW5nc1swXSk7CiAgICBjb25zdCBpbnQzMl90
KiBjbWQgPSAoY29uc3QgaW50MzJfdCopX2NtZDsKICAgIGludDMyX3QgY29kZSA9ICpjbWQrKzsKICAg
IHNpemVfdCBjbWRJbmRleCA9IGNvZGUgJiAweGZmOwoKICAgIGlmIChjbWRJbmRleCA+PSBOKSB7CiAg
ICAgICAgb3V0IDw8ICJVbmtub3duIGNvbW1hbmQ6ICIgPDwgY29kZSA8PCBlbmRsOwogICAgICAgIHJl
dHVybiBjbWQ7CiAgICB9CiAgICBvdXQgPDwga0NvbW1hbmRTdHJpbmdzW2NtZEluZGV4XTsKCiAgICBz
d2l0Y2ggKGNvZGUpIHsKICAgICAgICBjYXNlIEJDX1RSQU5TQUNUSU9OOgogICAgICAgIGNhc2UgQkNf
UkVQTFk6IHsKICAgICAgICAgICAgb3V0IDw8ICI6ICIgPDwgaW5kZW50OwogICAgICAgICAgICBjbWQg
PSAoY29uc3QgaW50MzJfdCAqKXByaW50QmluZGVyVHJhbnNhY3Rpb25EYXRhKG91dCwgY21kKTsKICAg
ICAgICAgICAgb3V0IDw8IGRlZGVudDsKICAgICAgICB9IGJyZWFrOwogICAgICAgIAogICAgICAgIGNh
c2UgQkNfQUNRVUlSRV9SRVNVTFQ6IHsKICAgICAgICAgICAgY29uc3QgaW50MzJfdCByZXMgPSAqY21k
Kys7CiAgICAgICAgICAgIG91dCA8PCAiOiAiIDw8IHJlcyA8PCAocmVzID8gIiAoU1VDQ0VTUykiIDog
IiAoRkFJTFVSRSkiKTsKICAgICAgICB9IGJyZWFrOwogICAgICAgIAogICAgICAgIGNhc2UgQkNfRlJF
RV9CVUZGRVI6IHsKICAgICAgICAgICAgY29uc3QgaW50MzJfdCBidWYgPSAqY21kKys7CiAgICAgICAg
ICAgIG91dCA8PCAiOiBidWZmZXI9IiA8PCAodm9pZCopYnVmOwogICAgICAgIH0gYnJlYWs7CiAgICAg
ICAgCiAgICAgICAgY2FzZSBCQ19JTkNSRUZTOgogICAgICAgIGNhc2UgQkNfQUNRVUlSRToKICAgICAg
ICBjYXNlIEJDX1JFTEVBU0U6CiAgICAgICAgY2FzZSBCQ19ERUNSRUZTOiB7CiAgICAgICAgICAgIGNv
bnN0IGludDMyX3QgZCA9ICpjbWQrKzsKICAgICAgICAgICAgb3V0IDw8ICI6IGRlc2M9IiA8PCBkOwog
ICAgICAgIH0gYnJlYWs7CiAgICAKICAgICAgICBjYXNlIEJDX0lOQ1JFRlNfRE9ORToKICAgICAgICBj
YXNlIEJDX0FDUVVJUkVfRE9ORTogewogICAgICAgICAgICBjb25zdCBpbnQzMl90IGIgPSAqY21kKys7
CiAgICAgICAgICAgIGNvbnN0IGludDMyX3QgYyA9ICpjbWQrKzsKICAgICAgICAgICAgb3V0IDw8ICI6
IHRhcmdldD0iIDw8ICh2b2lkKiliIDw8ICIgKGNvb2tpZSAiIDw8ICh2b2lkKiljIDw8ICIpIjsKICAg
ICAgICB9IGJyZWFrOwogICAgICAgIAogICAgICAgIGNhc2UgQkNfQVRURU1QVF9BQ1FVSVJFOiB7CiAg
ICAgICAgICAgIGNvbnN0IGludDMyX3QgcCA9ICpjbWQrKzsKICAgICAgICAgICAgY29uc3QgaW50MzJf
dCBkID0gKmNtZCsrOwogICAgICAgICAgICBvdXQgPDwgIjogZGVzYz0iIDw8IGQgPDwgIiwgcHJpPSIg
PDwgcDsKICAgICAgICB9IGJyZWFrOwogICAgICAgIAogICAgICAgIGNhc2UgQkNfUkVRVUVTVF9ERUFU
SF9OT1RJRklDQVRJT046CiAgICAgICAgY2FzZSBCQ19DTEVBUl9ERUFUSF9OT1RJRklDQVRJT046IHsK
ICAgICAgICAgICAgY29uc3QgaW50MzJfdCBoID0gKmNtZCsrOwogICAgICAgICAgICBjb25zdCBpbnQz
Ml90IGMgPSAqY21kKys7CiAgICAgICAgICAgIG91dCA8PCAiOiBoYW5kbGU9IiA8PCBoIDw8ICIgKGRl
YXRoIGNvb2tpZSAiIDw8ICh2b2lkKiljIDw8ICIpIjsKICAgICAgICB9IGJyZWFrOwoKICAgICAgICBj
YXNlIEJDX0RFQURfQklOREVSX0RPTkU6IHsKICAgICAgICAgICAgY29uc3QgaW50MzJfdCBjID0gKmNt
ZCsrOwogICAgICAgICAgICBvdXQgPDwgIjogZGVhdGggY29va2llICIgPDwgKHZvaWQqKWM7CiAgICAg
ICAgfSBicmVhazsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgLy8gbm8gZGV0YWlscyB0byBz
aG93IGZvcjogQkNfUkVHSVNURVJfTE9PUEVSLCBCQ19FTlRFUl9MT09QRVIsCiAgICAgICAgICAgIC8v
IEJDX0VYSVRfTE9PUEVSCiAgICAgICAgICAgIGJyZWFrOwogICAgfQogICAgCiAgICBvdXQgPDwgZW5k
bDsKICAgIHJldHVybiBjbWQ7Cn0KI2VuZGlmCgpzdGF0aWMgcHRocmVhZF9tdXRleF90IGdUTFNNdXRl
eCA9IFBUSFJFQURfTVVURVhfSU5JVElBTElaRVI7CnN0YXRpYyBib29sIGdIYXZlVExTID0gZmFsc2U7
CnN0YXRpYyBwdGhyZWFkX2tleV90IGdUTFMgPSAwOwpzdGF0aWMgYm9vbCBnU2h1dGRvd24gPSBmYWxz
ZTsKc3RhdGljIGJvb2wgZ0Rpc2FibGVCYWNrZ3JvdW5kU2NoZWR1bGluZyA9IGZhbHNlOwoKSVBDVGhy
ZWFkU3RhdGUqIElQQ1RocmVhZFN0YXRlOjpzZWxmKCkKewogICAgaWYgKGdIYXZlVExTKSB7CnJlc3Rh
cnQ6CiAgICAgICAgY29uc3QgcHRocmVhZF9rZXlfdCBrID0gZ1RMUzsKICAgICAgICBJUENUaHJlYWRT
dGF0ZSogc3QgPSAoSVBDVGhyZWFkU3RhdGUqKXB0aHJlYWRfZ2V0c3BlY2lmaWMoayk7CiAgICAgICAg
aWYgKHN0KSByZXR1cm4gc3Q7CiAgICAgICAgcmV0dXJuIG5ldyBJUENUaHJlYWRTdGF0ZTsKICAgIH0K
ICAgIAogICAgaWYgKGdTaHV0ZG93bikgcmV0dXJuIE5VTEw7CiAgICAKICAgIHB0aHJlYWRfbXV0ZXhf
bG9jaygmZ1RMU011dGV4KTsKICAgIGlmICghZ0hhdmVUTFMpIHsKICAgICAgICBpZiAocHRocmVhZF9r
ZXlfY3JlYXRlKCZnVExTLCB0aHJlYWREZXN0cnVjdG9yKSAhPSAwKSB7CiAgICAgICAgICAgIHB0aHJl
YWRfbXV0ZXhfdW5sb2NrKCZnVExTTXV0ZXgpOwogICAgICAgICAgICByZXR1cm4gTlVMTDsKICAgICAg
ICB9CiAgICAgICAgZ0hhdmVUTFMgPSB0cnVlOwogICAgfQogICAgcHRocmVhZF9tdXRleF91bmxvY2so
JmdUTFNNdXRleCk7CiAgICBnb3RvIHJlc3RhcnQ7Cn0KCklQQ1RocmVhZFN0YXRlKiBJUENUaHJlYWRT
dGF0ZTo6c2VsZk9yTnVsbCgpCnsKICAgIGlmIChnSGF2ZVRMUykgewogICAgICAgIGNvbnN0IHB0aHJl
YWRfa2V5X3QgayA9IGdUTFM7CiAgICAgICAgSVBDVGhyZWFkU3RhdGUqIHN0ID0gKElQQ1RocmVhZFN0
YXRlKilwdGhyZWFkX2dldHNwZWNpZmljKGspOwogICAgICAgIHJldHVybiBzdDsKICAgIH0KICAgIHJl
dHVybiBOVUxMOwp9Cgp2b2lkIElQQ1RocmVhZFN0YXRlOjpzaHV0ZG93bigpCnsKICAgIGdTaHV0ZG93
biA9IHRydWU7CiAgICAKICAgIGlmIChnSGF2ZVRMUykgewogICAgICAgIC8vIFhYWCBOZWVkIHRvIHdh
aXQgZm9yIGFsbCB0aHJlYWQgcG9vbCB0aHJlYWRzIHRvIGV4aXQhCiAgICAgICAgSVBDVGhyZWFkU3Rh
dGUqIHN0ID0gKElQQ1RocmVhZFN0YXRlKilwdGhyZWFkX2dldHNwZWNpZmljKGdUTFMpOwogICAgICAg
IGlmIChzdCkgewogICAgICAgICAgICBkZWxldGUgc3Q7CiAgICAgICAgICAgIHB0aHJlYWRfc2V0c3Bl
Y2lmaWMoZ1RMUywgTlVMTCk7CiAgICAgICAgfQogICAgICAgIGdIYXZlVExTID0gZmFsc2U7CiAgICB9
Cn0KCnZvaWQgSVBDVGhyZWFkU3RhdGU6OmRpc2FibGVCYWNrZ3JvdW5kU2NoZWR1bGluZyhib29sIGRp
c2FibGUpCnsKICAgIGdEaXNhYmxlQmFja2dyb3VuZFNjaGVkdWxpbmcgPSBkaXNhYmxlOwp9CgpzcDxQ
cm9jZXNzU3RhdGU+IElQQ1RocmVhZFN0YXRlOjpwcm9jZXNzKCkKewogICAgcmV0dXJuIG1Qcm9jZXNz
Owp9CgpzdGF0dXNfdCBJUENUaHJlYWRTdGF0ZTo6Y2xlYXJMYXN0RXJyb3IoKQp7CiAgICBjb25zdCBz
dGF0dXNfdCBlcnIgPSBtTGFzdEVycm9yOwogICAgbUxhc3RFcnJvciA9IE5PX0VSUk9SOwogICAgcmV0
dXJuIGVycjsKfQoKaW50IElQQ1RocmVhZFN0YXRlOjpnZXRDYWxsaW5nUGlkKCkgY29uc3QKewogICAg
cmV0dXJuIG1DYWxsaW5nUGlkOwp9CgppbnQgSVBDVGhyZWFkU3RhdGU6OmdldENhbGxpbmdVaWQoKSBj
b25zdAp7CiAgICByZXR1cm4gbUNhbGxpbmdVaWQ7Cn0KCmludDY0X3QgSVBDVGhyZWFkU3RhdGU6OmNs
ZWFyQ2FsbGluZ0lkZW50aXR5KCkKewogICAgaW50NjRfdCB0b2tlbiA9ICgoaW50NjRfdCltQ2FsbGlu
Z1VpZDw8MzIpIHwgbUNhbGxpbmdQaWQ7CiAgICBjbGVhckNhbGxlcigpOwogICAgcmV0dXJuIHRva2Vu
Owp9Cgp2b2lkIElQQ1RocmVhZFN0YXRlOjpzZXRTdHJpY3RNb2RlUG9saWN5KGludDMyX3QgcG9saWN5
KQp7CiAgICBtU3RyaWN0TW9kZVBvbGljeSA9IHBvbGljeTsKfQoKaW50MzJfdCBJUENUaHJlYWRTdGF0
ZTo6Z2V0U3RyaWN0TW9kZVBvbGljeSgpIGNvbnN0CnsKICAgIHJldHVybiBtU3RyaWN0TW9kZVBvbGlj
eTsKfQoKdm9pZCBJUENUaHJlYWRTdGF0ZTo6c2V0TGFzdFRyYW5zYWN0aW9uQmluZGVyRmxhZ3MoaW50
MzJfdCBmbGFncykKewogICAgbUxhc3RUcmFuc2FjdGlvbkJpbmRlckZsYWdzID0gZmxhZ3M7Cn0KCmlu
dDMyX3QgSVBDVGhyZWFkU3RhdGU6OmdldExhc3RUcmFuc2FjdGlvbkJpbmRlckZsYWdzKCkgY29uc3QK
ewogICAgcmV0dXJuIG1MYXN0VHJhbnNhY3Rpb25CaW5kZXJGbGFnczsKfQoKdm9pZCBJUENUaHJlYWRT
dGF0ZTo6cmVzdG9yZUNhbGxpbmdJZGVudGl0eShpbnQ2NF90IHRva2VuKQp7CiAgICBtQ2FsbGluZ1Vp
ZCA9IChpbnQpKHRva2VuPj4zMik7CiAgICBtQ2FsbGluZ1BpZCA9IChpbnQpdG9rZW47Cn0KCnZvaWQg
SVBDVGhyZWFkU3RhdGU6OmNsZWFyQ2FsbGVyKCkKewogICAgbUNhbGxpbmdQaWQgPSBnZXRwaWQoKTsK
ICAgIG1DYWxsaW5nVWlkID0gZ2V0dWlkKCk7Cn0KCnZvaWQgSVBDVGhyZWFkU3RhdGU6OmZsdXNoQ29t
bWFuZHMoKQp7CiAgICBpZiAobVByb2Nlc3MtPm1Ecml2ZXJGRCA8PSAwKQogICAgICAgIHJldHVybjsK
ICAgIHRhbGtXaXRoRHJpdmVyKGZhbHNlKTsKfQoKc3RhdHVzX3QgSVBDVGhyZWFkU3RhdGU6OmdldEFu
ZEV4ZWN1dGVDb21tYW5kKCkKewogICAgc3RhdHVzX3QgcmVzdWx0OwogICAgaW50MzJfdCBjbWQ7Cgog
ICAgcmVzdWx0ID0gdGFsa1dpdGhEcml2ZXIoKTsKICAgIGlmIChyZXN1bHQgPj0gTk9fRVJST1IpIHsK
ICAgICAgICBzaXplX3QgSU4gPSBtSW4uZGF0YUF2YWlsKCk7CiAgICAgICAgaWYgKElOIDwgc2l6ZW9m
KGludDMyX3QpKSByZXR1cm4gcmVzdWx0OwogICAgICAgIGNtZCA9IG1Jbi5yZWFkSW50MzIoKTsKICAg
ICAgICBJRl9MT0dfQ09NTUFORFMoKSB7CiAgICAgICAgICAgIGFsb2cgPDwgIlByb2Nlc3NpbmcgdG9w
LWxldmVsIENvbW1hbmQ6ICIKICAgICAgICAgICAgICAgICA8PCBnZXRSZXR1cm5TdHJpbmcoY21kKSA8
PCBlbmRsOwogICAgICAgIH0KCiAgICAgICAgcmVzdWx0ID0gZXhlY3V0ZUNvbW1hbmQoY21kKTsKCiAg
ICAgICAgLy8gQWZ0ZXIgZXhlY3V0aW5nIHRoZSBjb21tYW5kLCBlbnN1cmUgdGhhdCB0aGUgdGhyZWFk
IGlzIHJldHVybmVkIHRvIHRoZQogICAgICAgIC8vIGZvcmVncm91bmQgY2dyb3VwIGJlZm9yZSByZWpv
aW5pbmcgdGhlIHBvb2wuICBUaGUgZHJpdmVyIHRha2VzIGNhcmUgb2YKICAgICAgICAvLyByZXN0b3Jp
bmcgdGhlIHByaW9yaXR5LCBidXQgZG9lc24ndCBkbyBhbnl0aGluZyB3aXRoIGNncm91cHMgc28gd2UK
ICAgICAgICAvLyBuZWVkIHRvIHRha2UgY2FyZSBvZiB0aGF0IGhlcmUgaW4gdXNlcnNwYWNlLiAgTm90
ZSB0aGF0IHdlIGRvIG1ha2UKICAgICAgICAvLyBzdXJlIHRvIGdvIGluIHRoZSBmb3JlZ3JvdW5kIGFm
dGVyIGV4ZWN1dGluZyBhIHRyYW5zYWN0aW9uLCBidXQKICAgICAgICAvLyB0aGVyZSBhcmUgb3RoZXIg
Y2FsbGJhY2tzIGludG8gdXNlciBjb2RlIHRoYXQgY291bGQgaGF2ZSBjaGFuZ2VkCiAgICAgICAgLy8g
b3VyIGdyb3VwIHNvIHdlIHdhbnQgdG8gbWFrZSBhYnNvbHV0ZWx5IHN1cmUgaXQgaXMgcHV0IGJhY2su
CiAgICAgICAgc2V0X3NjaGVkX3BvbGljeShtTXlUaHJlYWRJZCwgU1BfRk9SRUdST1VORCk7CiAgICB9
CgogICAgcmV0dXJuIHJlc3VsdDsKfQoKLy8gV2hlbiB3ZSd2ZSBjbGVhcmVkIHRoZSBpbmNvbWluZyBj
b21tYW5kIHF1ZXVlLCBwcm9jZXNzIGFueSBwZW5kaW5nIGRlcmVmcwp2b2lkIElQQ1RocmVhZFN0YXRl
Ojpwcm9jZXNzUGVuZGluZ0RlcmVmcygpCnsKICAgIGlmIChtSW4uZGF0YVBvc2l0aW9uKCkgPj0gbUlu
LmRhdGFTaXplKCkpIHsKICAgICAgICBzaXplX3QgbnVtUGVuZGluZyA9IG1QZW5kaW5nV2Vha0RlcmVm
cy5zaXplKCk7CiAgICAgICAgaWYgKG51bVBlbmRpbmcgPiAwKSB7CiAgICAgICAgICAgIGZvciAoc2l6
ZV90IGkgPSAwOyBpIDwgbnVtUGVuZGluZzsgaSsrKSB7CiAgICAgICAgICAgICAgICBSZWZCYXNlOjp3
ZWFrcmVmX3R5cGUqIHJlZnMgPSBtUGVuZGluZ1dlYWtEZXJlZnNbaV07CiAgICAgICAgICAgICAgICBy
ZWZzLT5kZWNXZWFrKG1Qcm9jZXNzLmdldCgpKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBtUGVu
ZGluZ1dlYWtEZXJlZnMuY2xlYXIoKTsKICAgICAgICB9CgogICAgICAgIG51bVBlbmRpbmcgPSBtUGVu
ZGluZ1N0cm9uZ0RlcmVmcy5zaXplKCk7CiAgICAgICAgaWYgKG51bVBlbmRpbmcgPiAwKSB7CiAgICAg
ICAgICAgIGZvciAoc2l6ZV90IGkgPSAwOyBpIDwgbnVtUGVuZGluZzsgaSsrKSB7CiAgICAgICAgICAg
ICAgICBCQmluZGVyKiBvYmogPSBtUGVuZGluZ1N0cm9uZ0RlcmVmc1tpXTsKICAgICAgICAgICAgICAg
IG9iai0+ZGVjU3Ryb25nKG1Qcm9jZXNzLmdldCgpKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBt
UGVuZGluZ1N0cm9uZ0RlcmVmcy5jbGVhcigpOwogICAgICAgIH0KICAgIH0KfQoKdm9pZCBJUENUaHJl
YWRTdGF0ZTo6am9pblRocmVhZFBvb2woYm9vbCBpc01haW4pCnsKICAgIExPR19USFJFQURQT09MKCIq
KioqIFRIUkVBRCAlcCAoUElEICVkKSBJUyBKT0lOSU5HIFRIRSBUSFJFQUQgUE9PTFxuIiwgKHZvaWQq
KXB0aHJlYWRfc2VsZigpLCBnZXRwaWQoKSk7CgogICAgbU91dC53cml0ZUludDMyKGlzTWFpbiA/IEJD
X0VOVEVSX0xPT1BFUiA6IEJDX1JFR0lTVEVSX0xPT1BFUik7CiAgICAKICAgIC8vIFRoaXMgdGhyZWFk
IG1heSBoYXZlIGJlZW4gc3Bhd25lZCBieSBhIHRocmVhZCB0aGF0IHdhcyBpbiB0aGUgYmFja2dyb3Vu
ZAogICAgLy8gc2NoZWR1bGluZyBncm91cCwgc28gZmlyc3Qgd2Ugd2lsbCBtYWtlIHN1cmUgaXQgaXMg
aW4gdGhlIGZvcmVncm91bmQKICAgIC8vIG9uZSB0byBhdm9pZCBwZXJmb3JtaW5nIGFuIGluaXRpYWwg
dHJhbnNhY3Rpb24gaW4gdGhlIGJhY2tncm91bmQuCiAgICBzZXRfc2NoZWRfcG9saWN5KG1NeVRocmVh
ZElkLCBTUF9GT1JFR1JPVU5EKTsKICAgICAgICAKICAgIHN0YXR1c190IHJlc3VsdDsKICAgIGRvIHsK
ICAgICAgICBwcm9jZXNzUGVuZGluZ0RlcmVmcygpOwogICAgICAgIC8vIG5vdyBnZXQgdGhlIG5leHQg
Y29tbWFuZCB0byBiZSBwcm9jZXNzZWQsIHdhaXRpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgcmVzdWx0
ID0gZ2V0QW5kRXhlY3V0ZUNvbW1hbmQoKTsKCiAgICAgICAgaWYgKHJlc3VsdCA8IE5PX0VSUk9SICYm
IHJlc3VsdCAhPSBUSU1FRF9PVVQgJiYgcmVzdWx0ICE9IC1FQ09OTlJFRlVTRUQgJiYgcmVzdWx0ICE9
IC1FQkFERikgewogICAgICAgICAgICBBTE9HRSgiZ2V0QW5kRXhlY3V0ZUNvbW1hbmQoZmQ9JWQpIHJl
dHVybmVkIHVuZXhwZWN0ZWQgZXJyb3IgJWQsIGFib3J0aW5nIiwKICAgICAgICAgICAgICAgICAgbVBy
b2Nlc3MtPm1Ecml2ZXJGRCwgcmVzdWx0KTsKICAgICAgICAgICAgYWJvcnQoKTsKICAgICAgICB9CiAg
ICAgICAgCiAgICAgICAgLy8gTGV0IHRoaXMgdGhyZWFkIGV4aXQgdGhlIHRocmVhZCBwb29sIGlmIGl0
IGlzIG5vIGxvbmdlcgogICAgICAgIC8vIG5lZWRlZCBhbmQgaXQgaXMgbm90IHRoZSBtYWluIHByb2Nl
c3MgdGhyZWFkLgogICAgICAgIGlmKHJlc3VsdCA9PSBUSU1FRF9PVVQgJiYgIWlzTWFpbikgewogICAg
ICAgICAgICBicmVhazsKICAgICAgICB9CiAgICB9IHdoaWxlIChyZXN1bHQgIT0gLUVDT05OUkVGVVNF
RCAmJiByZXN1bHQgIT0gLUVCQURGKTsKCiAgICBMT0dfVEhSRUFEUE9PTCgiKioqKiBUSFJFQUQgJXAg
KFBJRCAlZCkgSVMgTEVBVklORyBUSEUgVEhSRUFEIFBPT0wgZXJyPSVwXG4iLAogICAgICAgICh2b2lk
KilwdGhyZWFkX3NlbGYoKSwgZ2V0cGlkKCksICh2b2lkKilyZXN1bHQpOwogICAgCiAgICBtT3V0Lndy
aXRlSW50MzIoQkNfRVhJVF9MT09QRVIpOwogICAgdGFsa1dpdGhEcml2ZXIoZmFsc2UpOwp9CgppbnQg
SVBDVGhyZWFkU3RhdGU6OnNldHVwUG9sbGluZyhpbnQqIGZkKQp7CiAgICBpZiAobVByb2Nlc3MtPm1E
cml2ZXJGRCA8PSAwKSB7CiAgICAgICAgcmV0dXJuIC1FQkFERjsKICAgIH0KCiAgICBtT3V0LndyaXRl
SW50MzIoQkNfRU5URVJfTE9PUEVSKTsKICAgICpmZCA9IG1Qcm9jZXNzLT5tRHJpdmVyRkQ7CiAgICBy
ZXR1cm4gMDsKfQoKc3RhdHVzX3QgSVBDVGhyZWFkU3RhdGU6OmhhbmRsZVBvbGxlZENvbW1hbmRzKCkK
ewogICAgc3RhdHVzX3QgcmVzdWx0OwoKICAgIGRvIHsKICAgICAgICByZXN1bHQgPSBnZXRBbmRFeGVj
dXRlQ29tbWFuZCgpOwogICAgfSB3aGlsZSAobUluLmRhdGFQb3NpdGlvbigpIDwgbUluLmRhdGFTaXpl
KCkpOwoKICAgIHByb2Nlc3NQZW5kaW5nRGVyZWZzKCk7CiAgICBmbHVzaENvbW1hbmRzKCk7CiAgICBy
ZXR1cm4gcmVzdWx0Owp9Cgp2b2lkIElQQ1RocmVhZFN0YXRlOjpzdG9wUHJvY2Vzcyhib29sIC8qaW1t
ZWRpYXRlKi8pCnsKICAgIC8vQUxPR0koIioqKiogU1RPUFBJTkcgUFJPQ0VTUyIpOwogICAgZmx1c2hD
b21tYW5kcygpOwogICAgaW50IGZkID0gbVByb2Nlc3MtPm1Ecml2ZXJGRDsKICAgIG1Qcm9jZXNzLT5t
RHJpdmVyRkQgPSAtMTsKICAgIGNsb3NlKGZkKTsKICAgIC8va2lsbChnZXRwaWQoKSwgU0lHS0lMTCk7
Cn0KCnN0YXR1c190IElQQ1RocmVhZFN0YXRlOjp0cmFuc2FjdChpbnQzMl90IGhhbmRsZSwKICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVpbnQzMl90IGNvZGUsIGNvbnN0IFBhcmNlbCYgZGF0
YSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBhcmNlbCogcmVwbHksIHVpbnQzMl90
IGZsYWdzKQp7CiAgICBzdGF0dXNfdCBlcnIgPSBkYXRhLmVycm9yQ2hlY2soKTsKCiAgICBmbGFncyB8
PSBURl9BQ0NFUFRfRkRTOwoKICAgIElGX0xPR19UUkFOU0FDVElPTlMoKSB7CiAgICAgICAgVGV4dE91
dHB1dDo6QnVuZGxlIF9iKGFsb2cpOwogICAgICAgIGFsb2cgPDwgIkJDX1RSQU5TQUNUSU9OIHRociAi
IDw8ICh2b2lkKilwdGhyZWFkX3NlbGYoKSA8PCAiIC8gaGFuZCAiCiAgICAgICAgICAgIDw8IGhhbmRs
ZSA8PCAiIC8gY29kZSAiIDw8IFR5cGVDb2RlKGNvZGUpIDw8ICI6ICIKICAgICAgICAgICAgPDwgaW5k
ZW50IDw8IGRhdGEgPDwgZGVkZW50IDw8IGVuZGw7CiAgICB9CiAgICAKICAgIGlmIChlcnIgPT0gTk9f
RVJST1IpIHsKICAgICAgICBMT0dfT05FV0FZKCI+Pj4+IFNFTkQgZnJvbSBwaWQgJWQgdWlkICVkICVz
IiwgZ2V0cGlkKCksIGdldHVpZCgpLAogICAgICAgICAgICAoZmxhZ3MgJiBURl9PTkVfV0FZKSA9PSAw
ID8gIlJFQUQgUkVQTFkiIDogIk9ORSBXQVkiKTsKICAgICAgICBlcnIgPSB3cml0ZVRyYW5zYWN0aW9u
RGF0YShCQ19UUkFOU0FDVElPTiwgZmxhZ3MsIGhhbmRsZSwgY29kZSwgZGF0YSwgTlVMTCk7CiAgICB9
CiAgICAKICAgIGlmIChlcnIgIT0gTk9fRVJST1IpIHsKICAgICAgICBpZiAocmVwbHkpIHJlcGx5LT5z
ZXRFcnJvcihlcnIpOwogICAgICAgIHJldHVybiAobUxhc3RFcnJvciA9IGVycik7CiAgICB9CiAgICAK
ICAgIGlmICgoZmxhZ3MgJiBURl9PTkVfV0FZKSA9PSAwKSB7CiAgICAgICAgI2lmIDAKICAgICAgICBp
ZiAoY29kZSA9PSA0KSB7IC8vIHJlbGF5b3V0CiAgICAgICAgICAgIEFMT0dJKCI+Pj4+Pj4gQ0FMTElO
RyB0cmFuc2FjdGlvbiA0Iik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgQUxPR0koIj4+Pj4+
PiBDQUxMSU5HIHRyYW5zYWN0aW9uICVkIiwgY29kZSk7CiAgICAgICAgfQogICAgICAgICNlbmRpZgog
ICAgICAgIGlmIChyZXBseSkgewogICAgICAgICAgICBlcnIgPSB3YWl0Rm9yUmVzcG9uc2UocmVwbHkp
OwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIFBhcmNlbCBmYWtlUmVwbHk7CiAgICAgICAgICAg
IGVyciA9IHdhaXRGb3JSZXNwb25zZSgmZmFrZVJlcGx5KTsKICAgICAgICB9CiAgICAgICAgI2lmIDAK
ICAgICAgICBpZiAoY29kZSA9PSA0KSB7IC8vIHJlbGF5b3V0CiAgICAgICAgICAgIEFMT0dJKCI8PDw8
PDwgUkVUVVJOSU5HIHRyYW5zYWN0aW9uIDQiKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBB
TE9HSSgiPDw8PDw8IFJFVFVSTklORyB0cmFuc2FjdGlvbiAlZCIsIGNvZGUpOwogICAgICAgIH0KICAg
ICAgICAjZW5kaWYKICAgICAgICAKICAgICAgICBJRl9MT0dfVFJBTlNBQ1RJT05TKCkgewogICAgICAg
ICAgICBUZXh0T3V0cHV0OjpCdW5kbGUgX2IoYWxvZyk7CiAgICAgICAgICAgIGFsb2cgPDwgIkJSX1JF
UExZIHRociAiIDw8ICh2b2lkKilwdGhyZWFkX3NlbGYoKSA8PCAiIC8gaGFuZCAiCiAgICAgICAgICAg
ICAgICA8PCBoYW5kbGUgPDwgIjogIjsKICAgICAgICAgICAgaWYgKHJlcGx5KSBhbG9nIDw8IGluZGVu
dCA8PCAqcmVwbHkgPDwgZGVkZW50IDw8IGVuZGw7CiAgICAgICAgICAgIGVsc2UgYWxvZyA8PCAiKG5v
bmUgcmVxdWVzdGVkKSIgPDwgZW5kbDsKICAgICAgICB9CiAgICB9IGVsc2UgewogICAgICAgIGVyciA9
IHdhaXRGb3JSZXNwb25zZShOVUxMLCBOVUxMKTsKICAgIH0KICAgIAogICAgcmV0dXJuIGVycjsKfQoK
dm9pZCBJUENUaHJlYWRTdGF0ZTo6aW5jU3Ryb25nSGFuZGxlKGludDMyX3QgaGFuZGxlKQp7CiAgICBM
T0dfUkVNT1RFUkVGUygiSVBDVGhyZWFkU3RhdGU6OmluY1N0cm9uZ0hhbmRsZSglZClcbiIsIGhhbmRs
ZSk7CiAgICBtT3V0LndyaXRlSW50MzIoQkNfQUNRVUlSRSk7CiAgICBtT3V0LndyaXRlSW50MzIoaGFu
ZGxlKTsKfQoKdm9pZCBJUENUaHJlYWRTdGF0ZTo6ZGVjU3Ryb25nSGFuZGxlKGludDMyX3QgaGFuZGxl
KQp7CiAgICBMT0dfUkVNT1RFUkVGUygiSVBDVGhyZWFkU3RhdGU6OmRlY1N0cm9uZ0hhbmRsZSglZClc
biIsIGhhbmRsZSk7CiAgICBtT3V0LndyaXRlSW50MzIoQkNfUkVMRUFTRSk7CiAgICBtT3V0LndyaXRl
SW50MzIoaGFuZGxlKTsKfQoKdm9pZCBJUENUaHJlYWRTdGF0ZTo6aW5jV2Vha0hhbmRsZShpbnQzMl90
IGhhbmRsZSkKewogICAgTE9HX1JFTU9URVJFRlMoIklQQ1RocmVhZFN0YXRlOjppbmNXZWFrSGFuZGxl
KCVkKVxuIiwgaGFuZGxlKTsKICAgIG1PdXQud3JpdGVJbnQzMihCQ19JTkNSRUZTKTsKICAgIG1PdXQu
d3JpdGVJbnQzMihoYW5kbGUpOwp9Cgp2b2lkIElQQ1RocmVhZFN0YXRlOjpkZWNXZWFrSGFuZGxlKGlu
dDMyX3QgaGFuZGxlKQp7CiAgICBMT0dfUkVNT1RFUkVGUygiSVBDVGhyZWFkU3RhdGU6OmRlY1dlYWtI
YW5kbGUoJWQpXG4iLCBoYW5kbGUpOwogICAgbU91dC53cml0ZUludDMyKEJDX0RFQ1JFRlMpOwogICAg
bU91dC53cml0ZUludDMyKGhhbmRsZSk7Cn0KCnN0YXR1c190IElQQ1RocmVhZFN0YXRlOjphdHRlbXB0
SW5jU3Ryb25nSGFuZGxlKGludDMyX3QgaGFuZGxlKQp7CiNpZiBIQVNfQkNfQVRURU1QVF9BQ1FVSVJF
CiAgICBMT0dfUkVNT1RFUkVGUygiSVBDVGhyZWFkU3RhdGU6OmF0dGVtcHRJbmNTdHJvbmdIYW5kbGUo
JWQpXG4iLCBoYW5kbGUpOwogICAgbU91dC53cml0ZUludDMyKEJDX0FUVEVNUFRfQUNRVUlSRSk7CiAg
ICBtT3V0LndyaXRlSW50MzIoMCk7IC8vIHh4eCB3YXMgdGhyZWFkIHByaW9yaXR5CiAgICBtT3V0Lndy
aXRlSW50MzIoaGFuZGxlKTsKICAgIHN0YXR1c190IHJlc3VsdCA9IFVOS05PV05fRVJST1I7CiAgICAK
ICAgIHdhaXRGb3JSZXNwb25zZShOVUxMLCAmcmVzdWx0KTsKICAgIAojaWYgTE9HX1JFRkNPVU5UUwog
ICAgcHJpbnRmKCJJUENUaHJlYWRTdGF0ZTo6YXR0ZW1wdEluY1N0cm9uZ0hhbmRsZSglbGQpID0gJXNc
biIsCiAgICAgICAgaGFuZGxlLCByZXN1bHQgPT0gTk9fRVJST1IgPyAiU1VDQ0VTUyIgOiAiRkFJTFVS
RSIpOwojZW5kaWYKICAgIAogICAgcmV0dXJuIHJlc3VsdDsKI2Vsc2UKICAgICh2b2lkKWhhbmRsZTsK
ICAgIEFMT0dFKCIlcyglZCk6IE5vdCBzdXBwb3J0ZWRcbiIsIF9fZnVuY19fLCBoYW5kbGUpOwogICAg
cmV0dXJuIElOVkFMSURfT1BFUkFUSU9OOwojZW5kaWYKfQoKdm9pZCBJUENUaHJlYWRTdGF0ZTo6ZXhw
dW5nZUhhbmRsZShpbnQzMl90IGhhbmRsZSwgSUJpbmRlciogYmluZGVyKQp7CiNpZiBMT0dfUkVGQ09V
TlRTCiAgICBwcmludGYoIklQQ1RocmVhZFN0YXRlOjpleHB1bmdlSGFuZGxlKCVsZClcbiIsIGhhbmRs
ZSk7CiNlbmRpZgogICAgc2VsZigpLT5tUHJvY2Vzcy0+ZXhwdW5nZUhhbmRsZShoYW5kbGUsIGJpbmRl
cik7Cn0KCnN0YXR1c190IElQQ1RocmVhZFN0YXRlOjpyZXF1ZXN0RGVhdGhOb3RpZmljYXRpb24oaW50
MzJfdCBoYW5kbGUsIEJwQmluZGVyKiBwcm94eSkKewogICAgbU91dC53cml0ZUludDMyKEJDX1JFUVVF
U1RfREVBVEhfTk9USUZJQ0FUSU9OKTsKICAgIG1PdXQud3JpdGVJbnQzMigoaW50MzJfdCloYW5kbGUp
OwogICAgbU91dC53cml0ZVBvaW50ZXIoKHVpbnRwdHJfdClwcm94eSk7CiAgICByZXR1cm4gTk9fRVJS
T1I7Cn0KCnN0YXR1c190IElQQ1RocmVhZFN0YXRlOjpjbGVhckRlYXRoTm90aWZpY2F0aW9uKGludDMy
X3QgaGFuZGxlLCBCcEJpbmRlciogcHJveHkpCnsKICAgIG1PdXQud3JpdGVJbnQzMihCQ19DTEVBUl9E
RUFUSF9OT1RJRklDQVRJT04pOwogICAgbU91dC53cml0ZUludDMyKChpbnQzMl90KWhhbmRsZSk7CiAg
ICBtT3V0LndyaXRlUG9pbnRlcigodWludHB0cl90KXByb3h5KTsKICAgIHJldHVybiBOT19FUlJPUjsK
fQoKSVBDVGhyZWFkU3RhdGU6OklQQ1RocmVhZFN0YXRlKCkKICAgIDogbVByb2Nlc3MoUHJvY2Vzc1N0
YXRlOjpzZWxmKCkpLAogICAgICBtTXlUaHJlYWRJZChhbmRyb2lkR2V0VGlkKCkpLAogICAgICBtU3Ry
aWN0TW9kZVBvbGljeSgwKSwKICAgICAgbUxhc3RUcmFuc2FjdGlvbkJpbmRlckZsYWdzKDApCnsKICAg
IHB0aHJlYWRfc2V0c3BlY2lmaWMoZ1RMUywgdGhpcyk7CiAgICBjbGVhckNhbGxlcigpOwogICAgbUlu
LnNldERhdGFDYXBhY2l0eSgyNTYpOwogICAgbU91dC5zZXREYXRhQ2FwYWNpdHkoMjU2KTsKfQoKSVBD
VGhyZWFkU3RhdGU6On5JUENUaHJlYWRTdGF0ZSgpCnsKfQoKc3RhdHVzX3QgSVBDVGhyZWFkU3RhdGU6
OnNlbmRSZXBseShjb25zdCBQYXJjZWwmIHJlcGx5LCB1aW50MzJfdCBmbGFncykKewogICAgc3RhdHVz
X3QgZXJyOwogICAgc3RhdHVzX3Qgc3RhdHVzQnVmZmVyOwogICAgZXJyID0gd3JpdGVUcmFuc2FjdGlv
bkRhdGEoQkNfUkVQTFksIGZsYWdzLCAtMSwgMCwgcmVwbHksICZzdGF0dXNCdWZmZXIpOwogICAgaWYg
KGVyciA8IE5PX0VSUk9SKSByZXR1cm4gZXJyOwogICAgCiAgICByZXR1cm4gd2FpdEZvclJlc3BvbnNl
KE5VTEwsIE5VTEwpOwp9CgpzdGF0dXNfdCBJUENUaHJlYWRTdGF0ZTo6d2FpdEZvclJlc3BvbnNlKFBh
cmNlbCAqcmVwbHksIHN0YXR1c190ICphY3F1aXJlUmVzdWx0KQp7CiAgICBpbnQzMl90IGNtZDsKICAg
IGludDMyX3QgZXJyOwoKICAgIHdoaWxlICgxKSB7CiAgICAgICAgaWYgKChlcnI9dGFsa1dpdGhEcml2
ZXIoKSkgPCBOT19FUlJPUikgYnJlYWs7CiAgICAgICAgZXJyID0gbUluLmVycm9yQ2hlY2soKTsKICAg
ICAgICBpZiAoZXJyIDwgTk9fRVJST1IpIGJyZWFrOwogICAgICAgIGlmIChtSW4uZGF0YUF2YWlsKCkg
PT0gMCkgY29udGludWU7CiAgICAgICAgCiAgICAgICAgY21kID0gbUluLnJlYWRJbnQzMigpOwogICAg
ICAgIAogICAgICAgIElGX0xPR19DT01NQU5EUygpIHsKICAgICAgICAgICAgYWxvZyA8PCAiUHJvY2Vz
c2luZyB3YWl0Rm9yUmVzcG9uc2UgQ29tbWFuZDogIgogICAgICAgICAgICAgICAgPDwgZ2V0UmV0dXJu
U3RyaW5nKGNtZCkgPDwgZW5kbDsKICAgICAgICB9CgogICAgICAgIHN3aXRjaCAoY21kKSB7CiAgICAg
ICAgY2FzZSBCUl9UUkFOU0FDVElPTl9DT01QTEVURToKICAgICAgICAgICAgaWYgKCFyZXBseSAmJiAh
YWNxdWlyZVJlc3VsdCkgZ290byBmaW5pc2g7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIAogICAg
ICAgIGNhc2UgQlJfREVBRF9SRVBMWToKICAgICAgICAgICAgZXJyID0gREVBRF9PQkpFQ1Q7CiAgICAg
ICAgICAgIGdvdG8gZmluaXNoOwoKICAgICAgICBjYXNlIEJSX0ZBSUxFRF9SRVBMWToKICAgICAgICAg
ICAgZXJyID0gRkFJTEVEX1RSQU5TQUNUSU9OOwogICAgICAgICAgICBnb3RvIGZpbmlzaDsKICAgICAg
ICAKICAgICAgICBjYXNlIEJSX0FDUVVJUkVfUkVTVUxUOgogICAgICAgICAgICB7CiAgICAgICAgICAg
ICAgICBBTE9HX0FTU0VSVChhY3F1aXJlUmVzdWx0ICE9IE5VTEwsICJVbmV4cGVjdGVkIGJyQUNRVUlS
RV9SRVNVTFQiKTsKICAgICAgICAgICAgICAgIGNvbnN0IGludDMyX3QgcmVzdWx0ID0gbUluLnJlYWRJ
bnQzMigpOwogICAgICAgICAgICAgICAgaWYgKCFhY3F1aXJlUmVzdWx0KSBjb250aW51ZTsKICAgICAg
ICAgICAgICAgICphY3F1aXJlUmVzdWx0ID0gcmVzdWx0ID8gTk9fRVJST1IgOiBJTlZBTElEX09QRVJB
VElPTjsKICAgICAgICAgICAgfQogICAgICAgICAgICBnb3RvIGZpbmlzaDsKICAgICAgICAKICAgICAg
ICBjYXNlIEJSX1JFUExZOgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiaW5kZXJfdHJhbnNh
Y3Rpb25fZGF0YSB0cjsKICAgICAgICAgICAgICAgIGVyciA9IG1Jbi5yZWFkKCZ0ciwgc2l6ZW9mKHRy
KSk7CiAgICAgICAgICAgICAgICBBTE9HX0FTU0VSVChlcnIgPT0gTk9fRVJST1IsICJOb3QgZW5vdWdo
IGNvbW1hbmQgZGF0YSBmb3IgYnJSRVBMWSIpOwogICAgICAgICAgICAgICAgaWYgKGVyciAhPSBOT19F
UlJPUikgZ290byBmaW5pc2g7CgogICAgICAgICAgICAgICAgaWYgKHJlcGx5KSB7CiAgICAgICAgICAg
ICAgICAgICAgaWYgKCh0ci5mbGFncyAmIFRGX1NUQVRVU19DT0RFKSA9PSAwKSB7CiAgICAgICAgICAg
ICAgICAgICAgICAgIHJlcGx5LT5pcGNTZXREYXRhUmVmZXJlbmNlKAogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgcmVpbnRlcnByZXRfY2FzdDxjb25zdCB1aW50OF90Kj4odHIuZGF0YS5wdHIuYnVmZmVy
KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyLmRhdGFfc2l6ZSwKICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIHJlaW50ZXJwcmV0X2Nhc3Q8Y29uc3QgYmluZGVyX3NpemVfdCo+KHRyLmRhdGEu
cHRyLm9mZnNldHMpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHIub2Zmc2V0c19zaXplL3Np
emVvZihiaW5kZXJfc2l6ZV90KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZyZWVCdWZmZXIs
IHRoaXMpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAg
IGVyciA9ICpyZWludGVycHJldF9jYXN0PGNvbnN0IHN0YXR1c190Kj4odHIuZGF0YS5wdHIuYnVmZmVy
KTsKICAgICAgICAgICAgICAgICAgICAgICAgZnJlZUJ1ZmZlcihOVUxMLAogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgcmVpbnRlcnByZXRfY2FzdDxjb25zdCB1aW50OF90Kj4odHIuZGF0YS5wdHIuYnVm
ZmVyKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyLmRhdGFfc2l6ZSwKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIHJlaW50ZXJwcmV0X2Nhc3Q8Y29uc3QgYmluZGVyX3NpemVfdCo+KHRyLmRh
dGEucHRyLm9mZnNldHMpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHIub2Zmc2V0c19zaXpl
L3NpemVvZihiaW5kZXJfc2l6ZV90KSwgdGhpcyk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAg
ICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBmcmVlQnVmZmVyKE5VTEwsCiAgICAg
ICAgICAgICAgICAgICAgICAgIHJlaW50ZXJwcmV0X2Nhc3Q8Y29uc3QgdWludDhfdCo+KHRyLmRhdGEu
cHRyLmJ1ZmZlciksCiAgICAgICAgICAgICAgICAgICAgICAgIHRyLmRhdGFfc2l6ZSwKICAgICAgICAg
ICAgICAgICAgICAgICAgcmVpbnRlcnByZXRfY2FzdDxjb25zdCBiaW5kZXJfc2l6ZV90Kj4odHIuZGF0
YS5wdHIub2Zmc2V0cyksCiAgICAgICAgICAgICAgICAgICAgICAgIHRyLm9mZnNldHNfc2l6ZS9zaXpl
b2YoYmluZGVyX3NpemVfdCksIHRoaXMpOwogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAg
ICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGdvdG8gZmluaXNoOwoKICAgICAg
ICBkZWZhdWx0OgogICAgICAgICAgICBlcnIgPSBleGVjdXRlQ29tbWFuZChjbWQpOwogICAgICAgICAg
ICBpZiAoZXJyICE9IE5PX0VSUk9SKSBnb3RvIGZpbmlzaDsKICAgICAgICAgICAgYnJlYWs7CiAgICAg
ICAgfQogICAgfQoKZmluaXNoOgogICAgaWYgKGVyciAhPSBOT19FUlJPUikgewogICAgICAgIGlmIChh
Y3F1aXJlUmVzdWx0KSAqYWNxdWlyZVJlc3VsdCA9IGVycjsKICAgICAgICBpZiAocmVwbHkpIHJlcGx5
LT5zZXRFcnJvcihlcnIpOwogICAgICAgIG1MYXN0RXJyb3IgPSBlcnI7CiAgICB9CiAgICAKICAgIHJl
dHVybiBlcnI7Cn0KCnN0YXR1c190IElQQ1RocmVhZFN0YXRlOjp0YWxrV2l0aERyaXZlcihib29sIGRv
UmVjZWl2ZSkKewogICAgaWYgKG1Qcm9jZXNzLT5tRHJpdmVyRkQgPD0gMCkgewogICAgICAgIHJldHVy
biAtRUJBREY7CiAgICB9CiAgICAKICAgIGJpbmRlcl93cml0ZV9yZWFkIGJ3cjsKICAgIAogICAgLy8g
SXMgdGhlIHJlYWQgYnVmZmVyIGVtcHR5PwogICAgY29uc3QgYm9vbCBuZWVkUmVhZCA9IG1Jbi5kYXRh
UG9zaXRpb24oKSA+PSBtSW4uZGF0YVNpemUoKTsKICAgIAogICAgLy8gV2UgZG9uJ3Qgd2FudCB0byB3
cml0ZSBhbnl0aGluZyBpZiB3ZSBhcmUgc3RpbGwgcmVhZGluZwogICAgLy8gZnJvbSBkYXRhIGxlZnQg
aW4gdGhlIGlucHV0IGJ1ZmZlciBhbmQgdGhlIGNhbGxlcgogICAgLy8gaGFzIHJlcXVlc3RlZCB0byBy
ZWFkIHRoZSBuZXh0IGRhdGEuCiAgICBjb25zdCBzaXplX3Qgb3V0QXZhaWwgPSAoIWRvUmVjZWl2ZSB8
fCBuZWVkUmVhZCkgPyBtT3V0LmRhdGFTaXplKCkgOiAwOwogICAgCiAgICBid3Iud3JpdGVfc2l6ZSA9
IG91dEF2YWlsOwogICAgYndyLndyaXRlX2J1ZmZlciA9ICh1aW50cHRyX3QpbU91dC5kYXRhKCk7Cgog
ICAgLy8gVGhpcyBpcyB3aGF0IHdlJ2xsIHJlYWQuCiAgICBpZiAoZG9SZWNlaXZlICYmIG5lZWRSZWFk
KSB7CiAgICAgICAgYndyLnJlYWRfc2l6ZSA9IG1Jbi5kYXRhQ2FwYWNpdHkoKTsKICAgICAgICBid3Iu
cmVhZF9idWZmZXIgPSAodWludHB0cl90KW1Jbi5kYXRhKCk7CiAgICB9IGVsc2UgewogICAgICAgIGJ3
ci5yZWFkX3NpemUgPSAwOwogICAgICAgIGJ3ci5yZWFkX2J1ZmZlciA9IDA7CiAgICB9CgogICAgSUZf
TE9HX0NPTU1BTkRTKCkgewogICAgICAgIFRleHRPdXRwdXQ6OkJ1bmRsZSBfYihhbG9nKTsKICAgICAg
ICBpZiAob3V0QXZhaWwgIT0gMCkgewogICAgICAgICAgICBhbG9nIDw8ICJTZW5kaW5nIGNvbW1hbmRz
IHRvIGRyaXZlcjogIiA8PCBpbmRlbnQ7CiAgICAgICAgICAgIGNvbnN0IHZvaWQqIGNtZHMgPSAoY29u
c3Qgdm9pZCopYndyLndyaXRlX2J1ZmZlcjsKICAgICAgICAgICAgY29uc3Qgdm9pZCogZW5kID0gKChj
b25zdCB1aW50OF90KiljbWRzKStid3Iud3JpdGVfc2l6ZTsKICAgICAgICAgICAgYWxvZyA8PCBIZXhE
dW1wKGNtZHMsIGJ3ci53cml0ZV9zaXplKSA8PCBlbmRsOwogICAgICAgICAgICB3aGlsZSAoY21kcyA8
IGVuZCkgY21kcyA9IHByaW50Q29tbWFuZChhbG9nLCBjbWRzKTsKICAgICAgICAgICAgYWxvZyA8PCBk
ZWRlbnQ7CiAgICAgICAgfQogICAgICAgIGFsb2cgPDwgIlNpemUgb2YgcmVjZWl2ZSBidWZmZXI6ICIg
PDwgYndyLnJlYWRfc2l6ZQogICAgICAgICAgICA8PCAiLCBuZWVkUmVhZDogIiA8PCBuZWVkUmVhZCA8
PCAiLCBkb1JlY2VpdmU6ICIgPDwgZG9SZWNlaXZlIDw8IGVuZGw7CiAgICB9CiAgICAKICAgIC8vIFJl
dHVybiBpbW1lZGlhdGVseSBpZiB0aGVyZSBpcyBub3RoaW5nIHRvIGRvLgogICAgaWYgKChid3Iud3Jp
dGVfc2l6ZSA9PSAwKSAmJiAoYndyLnJlYWRfc2l6ZSA9PSAwKSkgcmV0dXJuIE5PX0VSUk9SOwoKICAg
IGJ3ci53cml0ZV9jb25zdW1lZCA9IDA7CiAgICBid3IucmVhZF9jb25zdW1lZCA9IDA7CiAgICBzdGF0
dXNfdCBlcnI7CiAgICBkbyB7CiAgICAgICAgSUZfTE9HX0NPTU1BTkRTKCkgewogICAgICAgICAgICBh
bG9nIDw8ICJBYm91dCB0byByZWFkL3dyaXRlLCB3cml0ZSBzaXplID0gIiA8PCBtT3V0LmRhdGFTaXpl
KCkgPDwgZW5kbDsKICAgICAgICB9CiNpZiBkZWZpbmVkKEhBVkVfQU5EUk9JRF9PUykKICAgICAgICBp
ZiAoaW9jdGwobVByb2Nlc3MtPm1Ecml2ZXJGRCwgQklOREVSX1dSSVRFX1JFQUQsICZid3IpID49IDAp
CiAgICAgICAgICAgIGVyciA9IE5PX0VSUk9SOwogICAgICAgIGVsc2UKICAgICAgICAgICAgZXJyID0g
LWVycm5vOwojZWxzZQogICAgICAgIGVyciA9IElOVkFMSURfT1BFUkFUSU9OOwojZW5kaWYKICAgICAg
ICBpZiAobVByb2Nlc3MtPm1Ecml2ZXJGRCA8PSAwKSB7CiAgICAgICAgICAgIGVyciA9IC1FQkFERjsK
ICAgICAgICB9CiAgICAgICAgSUZfTE9HX0NPTU1BTkRTKCkgewogICAgICAgICAgICBhbG9nIDw8ICJG
aW5pc2hlZCByZWFkL3dyaXRlLCB3cml0ZSBzaXplID0gIiA8PCBtT3V0LmRhdGFTaXplKCkgPDwgZW5k
bDsKICAgICAgICB9CiAgICB9IHdoaWxlIChlcnIgPT0gLUVJTlRSKTsKCiAgICBJRl9MT0dfQ09NTUFO
RFMoKSB7CiAgICAgICAgYWxvZyA8PCAiT3VyIGVycjogIiA8PCAodm9pZCopKGludHB0cl90KWVyciA8
PCAiLCB3cml0ZSBjb25zdW1lZDogIgogICAgICAgICAgICA8PCBid3Iud3JpdGVfY29uc3VtZWQgPDwg
IiAob2YgIiA8PCBtT3V0LmRhdGFTaXplKCkKICAgICAgICAgICAgICAgICAgICAgICAgPDwgIiksIHJl
YWQgY29uc3VtZWQ6ICIgPDwgYndyLnJlYWRfY29uc3VtZWQgPDwgZW5kbDsKICAgIH0KCiAgICBpZiAo
ZXJyID49IE5PX0VSUk9SKSB7CiAgICAgICAgaWYgKGJ3ci53cml0ZV9jb25zdW1lZCA+IDApIHsKICAg
ICAgICAgICAgaWYgKGJ3ci53cml0ZV9jb25zdW1lZCA8IG1PdXQuZGF0YVNpemUoKSkKICAgICAgICAg
ICAgICAgIG1PdXQucmVtb3ZlKDAsIGJ3ci53cml0ZV9jb25zdW1lZCk7CiAgICAgICAgICAgIGVsc2UK
ICAgICAgICAgICAgICAgIG1PdXQuc2V0RGF0YVNpemUoMCk7CiAgICAgICAgfQogICAgICAgIGlmIChi
d3IucmVhZF9jb25zdW1lZCA+IDApIHsKICAgICAgICAgICAgbUluLnNldERhdGFTaXplKGJ3ci5yZWFk
X2NvbnN1bWVkKTsKICAgICAgICAgICAgbUluLnNldERhdGFQb3NpdGlvbigwKTsKICAgICAgICB9CiAg
ICAgICAgSUZfTE9HX0NPTU1BTkRTKCkgewogICAgICAgICAgICBUZXh0T3V0cHV0OjpCdW5kbGUgX2Io
YWxvZyk7CiAgICAgICAgICAgIGFsb2cgPDwgIlJlbWFpbmluZyBkYXRhIHNpemU6ICIgPDwgbU91dC5k
YXRhU2l6ZSgpIDw8IGVuZGw7CiAgICAgICAgICAgIGFsb2cgPDwgIlJlY2VpdmVkIGNvbW1hbmRzIGZy
b20gZHJpdmVyOiAiIDw8IGluZGVudDsKICAgICAgICAgICAgY29uc3Qgdm9pZCogY21kcyA9IG1Jbi5k
YXRhKCk7CiAgICAgICAgICAgIGNvbnN0IHZvaWQqIGVuZCA9IG1Jbi5kYXRhKCkgKyBtSW4uZGF0YVNp
emUoKTsKICAgICAgICAgICAgYWxvZyA8PCBIZXhEdW1wKGNtZHMsIG1Jbi5kYXRhU2l6ZSgpKSA8PCBl
bmRsOwogICAgICAgICAgICB3aGlsZSAoY21kcyA8IGVuZCkgY21kcyA9IHByaW50UmV0dXJuQ29tbWFu
ZChhbG9nLCBjbWRzKTsKICAgICAgICAgICAgYWxvZyA8PCBkZWRlbnQ7CiAgICAgICAgfQogICAgICAg
IHJldHVybiBOT19FUlJPUjsKICAgIH0KICAgIAogICAgcmV0dXJuIGVycjsKfQoKc3RhdHVzX3QgSVBD
VGhyZWFkU3RhdGU6OndyaXRlVHJhbnNhY3Rpb25EYXRhKGludDMyX3QgY21kLCB1aW50MzJfdCBiaW5k
ZXJGbGFncywKICAgIGludDMyX3QgaGFuZGxlLCB1aW50MzJfdCBjb2RlLCBjb25zdCBQYXJjZWwmIGRh
dGEsIHN0YXR1c190KiBzdGF0dXNCdWZmZXIpCnsKICAgIGJpbmRlcl90cmFuc2FjdGlvbl9kYXRhIHRy
OwoKICAgIHRyLnRhcmdldC5wdHIgPSAwOyAvKiBEb24ndCBwYXNzIHVuaW5pdGlhbGl6ZWQgc3RhY2sg
ZGF0YSB0byBhIHJlbW90ZSBwcm9jZXNzICovCiAgICB0ci50YXJnZXQuaGFuZGxlID0gaGFuZGxlOwog
ICAgdHIuY29kZSA9IGNvZGU7CiAgICB0ci5mbGFncyA9IGJpbmRlckZsYWdzOwogICAgdHIuY29va2ll
ID0gMDsKICAgIHRyLnNlbmRlcl9waWQgPSAwOwogICAgdHIuc2VuZGVyX2V1aWQgPSAwOwogICAgCiAg
ICBjb25zdCBzdGF0dXNfdCBlcnIgPSBkYXRhLmVycm9yQ2hlY2soKTsKICAgIGlmIChlcnIgPT0gTk9f
RVJST1IpIHsKICAgICAgICB0ci5kYXRhX3NpemUgPSBkYXRhLmlwY0RhdGFTaXplKCk7CiAgICAgICAg
dHIuZGF0YS5wdHIuYnVmZmVyID0gZGF0YS5pcGNEYXRhKCk7CiAgICAgICAgdHIub2Zmc2V0c19zaXpl
ID0gZGF0YS5pcGNPYmplY3RzQ291bnQoKSpzaXplb2YoYmluZGVyX3NpemVfdCk7CiAgICAgICAgdHIu
ZGF0YS5wdHIub2Zmc2V0cyA9IGRhdGEuaXBjT2JqZWN0cygpOwogICAgfSBlbHNlIGlmIChzdGF0dXNC
dWZmZXIpIHsKICAgICAgICB0ci5mbGFncyB8PSBURl9TVEFUVVNfQ09ERTsKICAgICAgICAqc3RhdHVz
QnVmZmVyID0gZXJyOwogICAgICAgIHRyLmRhdGFfc2l6ZSA9IHNpemVvZihzdGF0dXNfdCk7CiAgICAg
ICAgdHIuZGF0YS5wdHIuYnVmZmVyID0gcmVpbnRlcnByZXRfY2FzdDx1aW50cHRyX3Q+KHN0YXR1c0J1
ZmZlcik7CiAgICAgICAgdHIub2Zmc2V0c19zaXplID0gMDsKICAgICAgICB0ci5kYXRhLnB0ci5vZmZz
ZXRzID0gMDsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIChtTGFzdEVycm9yID0gZXJyKTsKICAg
IH0KICAgIAogICAgbU91dC53cml0ZUludDMyKGNtZCk7CiAgICBtT3V0LndyaXRlKCZ0ciwgc2l6ZW9m
KHRyKSk7CiAgICAKICAgIHJldHVybiBOT19FUlJPUjsKfQoKc3A8QkJpbmRlcj4gdGhlX2NvbnRleHRf
b2JqZWN0OwoKdm9pZCBzZXRUaGVDb250ZXh0T2JqZWN0KHNwPEJCaW5kZXI+IG9iaikKewogICAgdGhl
X2NvbnRleHRfb2JqZWN0ID0gb2JqOwp9CgpzdGF0dXNfdCBJUENUaHJlYWRTdGF0ZTo6ZXhlY3V0ZUNv
bW1hbmQoaW50MzJfdCBjbWQpCnsKICAgIEJCaW5kZXIqIG9iajsKICAgIFJlZkJhc2U6OndlYWtyZWZf
dHlwZSogcmVmczsKICAgIHN0YXR1c190IHJlc3VsdCA9IE5PX0VSUk9SOwogICAgCiAgICBzd2l0Y2gg
KGNtZCkgewogICAgY2FzZSBCUl9FUlJPUjoKICAgICAgICByZXN1bHQgPSBtSW4ucmVhZEludDMyKCk7
CiAgICAgICAgYnJlYWs7CiAgICAgICAgCiAgICBjYXNlIEJSX09LOgogICAgICAgIGJyZWFrOwogICAg
ICAgIAogICAgY2FzZSBCUl9BQ1FVSVJFOgogICAgICAgIHJlZnMgPSAoUmVmQmFzZTo6d2Vha3JlZl90
eXBlKiltSW4ucmVhZFBvaW50ZXIoKTsKICAgICAgICBvYmogPSAoQkJpbmRlciopbUluLnJlYWRQb2lu
dGVyKCk7CiAgICAgICAgQUxPR19BU1NFUlQocmVmcy0+cmVmQmFzZSgpID09IG9iaiwKICAgICAgICAg
ICAgICAgICAgICJCUl9BQ1FVSVJFOiBvYmplY3QgJXAgZG9lcyBub3QgbWF0Y2ggY29va2llICVwIChl
eHBlY3RlZCAlcCkiLAogICAgICAgICAgICAgICAgICAgcmVmcywgb2JqLCByZWZzLT5yZWZCYXNlKCkp
OwogICAgICAgIG9iai0+aW5jU3Ryb25nKG1Qcm9jZXNzLmdldCgpKTsKICAgICAgICBJRl9MT0dfUkVN
T1RFUkVGUygpIHsKICAgICAgICAgICAgTE9HX1JFTU9URVJFRlMoIkJSX0FDUVVJUkUgZnJvbSBkcml2
ZXIgb24gJXAiLCBvYmopOwogICAgICAgICAgICBvYmotPnByaW50UmVmcygpOwogICAgICAgIH0KICAg
ICAgICBtT3V0LndyaXRlSW50MzIoQkNfQUNRVUlSRV9ET05FKTsKICAgICAgICBtT3V0LndyaXRlUG9p
bnRlcigodWludHB0cl90KXJlZnMpOwogICAgICAgIG1PdXQud3JpdGVQb2ludGVyKCh1aW50cHRyX3Qp
b2JqKTsKICAgICAgICBicmVhazsKICAgICAgICAKICAgIGNhc2UgQlJfUkVMRUFTRToKICAgICAgICBy
ZWZzID0gKFJlZkJhc2U6OndlYWtyZWZfdHlwZSopbUluLnJlYWRQb2ludGVyKCk7CiAgICAgICAgb2Jq
ID0gKEJCaW5kZXIqKW1Jbi5yZWFkUG9pbnRlcigpOwogICAgICAgIEFMT0dfQVNTRVJUKHJlZnMtPnJl
ZkJhc2UoKSA9PSBvYmosCiAgICAgICAgICAgICAgICAgICAiQlJfUkVMRUFTRTogb2JqZWN0ICVwIGRv
ZXMgbm90IG1hdGNoIGNvb2tpZSAlcCAoZXhwZWN0ZWQgJXApIiwKICAgICAgICAgICAgICAgICAgIHJl
ZnMsIG9iaiwgcmVmcy0+cmVmQmFzZSgpKTsKICAgICAgICBJRl9MT0dfUkVNT1RFUkVGUygpIHsKICAg
ICAgICAgICAgTE9HX1JFTU9URVJFRlMoIkJSX1JFTEVBU0UgZnJvbSBkcml2ZXIgb24gJXAiLCBvYmop
OwogICAgICAgICAgICBvYmotPnByaW50UmVmcygpOwogICAgICAgIH0KICAgICAgICBtUGVuZGluZ1N0
cm9uZ0RlcmVmcy5wdXNoKG9iaik7CiAgICAgICAgYnJlYWs7CiAgICAgICAgCiAgICBjYXNlIEJSX0lO
Q1JFRlM6CiAgICAgICAgcmVmcyA9IChSZWZCYXNlOjp3ZWFrcmVmX3R5cGUqKW1Jbi5yZWFkUG9pbnRl
cigpOwogICAgICAgIG9iaiA9IChCQmluZGVyKiltSW4ucmVhZFBvaW50ZXIoKTsKICAgICAgICByZWZz
LT5pbmNXZWFrKG1Qcm9jZXNzLmdldCgpKTsKICAgICAgICBtT3V0LndyaXRlSW50MzIoQkNfSU5DUkVG
U19ET05FKTsKICAgICAgICBtT3V0LndyaXRlUG9pbnRlcigodWludHB0cl90KXJlZnMpOwogICAgICAg
IG1PdXQud3JpdGVQb2ludGVyKCh1aW50cHRyX3Qpb2JqKTsKICAgICAgICBicmVhazsKICAgICAgICAK
ICAgIGNhc2UgQlJfREVDUkVGUzoKICAgICAgICByZWZzID0gKFJlZkJhc2U6OndlYWtyZWZfdHlwZSop
bUluLnJlYWRQb2ludGVyKCk7CiAgICAgICAgb2JqID0gKEJCaW5kZXIqKW1Jbi5yZWFkUG9pbnRlcigp
OwogICAgICAgIC8vIE5PVEU6IFRoaXMgYXNzZXJ0aW9uIGlzIG5vdCB2YWxpZCwgYmVjYXVzZSB0aGUg
b2JqZWN0IG1heSBubwogICAgICAgIC8vIGxvbmdlciBleGlzdCAodGh1cyB0aGUgKEJCaW5kZXIqKWNh
c3QgYWJvdmUgcmVzdWx0aW5nIGluIGEgZGlmZmVyZW50CiAgICAgICAgLy8gbWVtb3J5IGFkZHJlc3Mp
LgogICAgICAgIC8vQUxPR19BU1NFUlQocmVmcy0+cmVmQmFzZSgpID09IG9iaiwKICAgICAgICAvLyAg
ICAgICAgICAgIkJSX0RFQ1JFRlM6IG9iamVjdCAlcCBkb2VzIG5vdCBtYXRjaCBjb29raWUgJXAgKGV4
cGVjdGVkICVwKSIsCiAgICAgICAgLy8gICAgICAgICAgIHJlZnMsIG9iaiwgcmVmcy0+cmVmQmFzZSgp
KTsKICAgICAgICBtUGVuZGluZ1dlYWtEZXJlZnMucHVzaChyZWZzKTsKICAgICAgICBicmVhazsKICAg
ICAgICAKICAgIGNhc2UgQlJfQVRURU1QVF9BQ1FVSVJFOgogICAgICAgIHJlZnMgPSAoUmVmQmFzZTo6
d2Vha3JlZl90eXBlKiltSW4ucmVhZFBvaW50ZXIoKTsKICAgICAgICBvYmogPSAoQkJpbmRlciopbUlu
LnJlYWRQb2ludGVyKCk7CiAgICAgICAgIAogICAgICAgIHsKICAgICAgICAgICAgY29uc3QgYm9vbCBz
dWNjZXNzID0gcmVmcy0+YXR0ZW1wdEluY1N0cm9uZyhtUHJvY2Vzcy5nZXQoKSk7CiAgICAgICAgICAg
IEFMT0dfQVNTRVJUKHN1Y2Nlc3MgJiYgcmVmcy0+cmVmQmFzZSgpID09IG9iaiwKICAgICAgICAgICAg
ICAgICAgICAgICAiQlJfQVRURU1QVF9BQ1FVSVJFOiBvYmplY3QgJXAgZG9lcyBub3QgbWF0Y2ggY29v
a2llICVwIChleHBlY3RlZCAlcCkiLAogICAgICAgICAgICAgICAgICAgICAgIHJlZnMsIG9iaiwgcmVm
cy0+cmVmQmFzZSgpKTsKICAgICAgICAgICAgCiAgICAgICAgICAgIG1PdXQud3JpdGVJbnQzMihCQ19B
Q1FVSVJFX1JFU1VMVCk7CiAgICAgICAgICAgIG1PdXQud3JpdGVJbnQzMigoaW50MzJfdClzdWNjZXNz
KTsKICAgICAgICB9CiAgICAgICAgYnJlYWs7CiAgICAKICAgIGNhc2UgQlJfVFJBTlNBQ1RJT046CiAg
ICAgICAgewogICAgICAgICAgICBiaW5kZXJfdHJhbnNhY3Rpb25fZGF0YSB0cjsKICAgICAgICAgICAg
cmVzdWx0ID0gbUluLnJlYWQoJnRyLCBzaXplb2YodHIpKTsKICAgICAgICAgICAgQUxPR19BU1NFUlQo
cmVzdWx0ID09IE5PX0VSUk9SLAogICAgICAgICAgICAgICAgIk5vdCBlbm91Z2ggY29tbWFuZCBkYXRh
IGZvciBiclRSQU5TQUNUSU9OIik7CiAgICAgICAgICAgIGlmIChyZXN1bHQgIT0gTk9fRVJST1IpIGJy
ZWFrOwogICAgICAgICAgICAKICAgICAgICAgICAgUGFyY2VsIGJ1ZmZlcjsKICAgICAgICAgICAgYnVm
ZmVyLmlwY1NldERhdGFSZWZlcmVuY2UoCiAgICAgICAgICAgICAgICByZWludGVycHJldF9jYXN0PGNv
bnN0IHVpbnQ4X3QqPih0ci5kYXRhLnB0ci5idWZmZXIpLAogICAgICAgICAgICAgICAgdHIuZGF0YV9z
aXplLAogICAgICAgICAgICAgICAgcmVpbnRlcnByZXRfY2FzdDxjb25zdCBiaW5kZXJfc2l6ZV90Kj4o
dHIuZGF0YS5wdHIub2Zmc2V0cyksCiAgICAgICAgICAgICAgICB0ci5vZmZzZXRzX3NpemUvc2l6ZW9m
KGJpbmRlcl9zaXplX3QpLCBmcmVlQnVmZmVyLCB0aGlzKTsKICAgICAgICAgICAgCiAgICAgICAgICAg
IGNvbnN0IHBpZF90IG9yaWdQaWQgPSBtQ2FsbGluZ1BpZDsKICAgICAgICAgICAgY29uc3QgdWlkX3Qg
b3JpZ1VpZCA9IG1DYWxsaW5nVWlkOwogICAgICAgICAgICBjb25zdCBpbnQzMl90IG9yaWdTdHJpY3RN
b2RlUG9saWN5ID0gbVN0cmljdE1vZGVQb2xpY3k7CiAgICAgICAgICAgIGNvbnN0IGludDMyX3Qgb3Jp
Z1RyYW5zYWN0aW9uQmluZGVyRmxhZ3MgPSBtTGFzdFRyYW5zYWN0aW9uQmluZGVyRmxhZ3M7CgogICAg
ICAgICAgICBtQ2FsbGluZ1BpZCA9IHRyLnNlbmRlcl9waWQ7CiAgICAgICAgICAgIG1DYWxsaW5nVWlk
ID0gdHIuc2VuZGVyX2V1aWQ7CiAgICAgICAgICAgIG1MYXN0VHJhbnNhY3Rpb25CaW5kZXJGbGFncyA9
IHRyLmZsYWdzOwoKICAgICAgICAgICAgaW50IGN1clByaW8gPSBnZXRwcmlvcml0eShQUklPX1BST0NF
U1MsIG1NeVRocmVhZElkKTsKICAgICAgICAgICAgaWYgKGdEaXNhYmxlQmFja2dyb3VuZFNjaGVkdWxp
bmcpIHsKICAgICAgICAgICAgICAgIGlmIChjdXJQcmlvID4gQU5EUk9JRF9QUklPUklUWV9OT1JNQUwp
IHsKICAgICAgICAgICAgICAgICAgICAvLyBXZSBoYXZlIGluaGVyaXRlZCBhIHJlZHVjZWQgcHJpb3Jp
dHkgZnJvbSB0aGUgY2FsbGVyLCBidXQgZG8gbm90CiAgICAgICAgICAgICAgICAgICAgLy8gd2FudCB0
byBydW4gaW4gdGhhdCBzdGF0ZSBpbiB0aGlzIHByb2Nlc3MuICBUaGUgZHJpdmVyIHNldCBvdXIKICAg
ICAgICAgICAgICAgICAgICAvLyBwcmlvcml0eSBhbHJlYWR5ICh0aG91Z2ggbm90IG91ciBzY2hlZHVs
aW5nIGNsYXNzKSwgc28gYm91bmNlCiAgICAgICAgICAgICAgICAgICAgLy8gaXQgYmFjayB0byB0aGUg
ZGVmYXVsdCBiZWZvcmUgaW52b2tpbmcgdGhlIHRyYW5zYWN0aW9uLgogICAgICAgICAgICAgICAgICAg
IHNldHByaW9yaXR5KFBSSU9fUFJPQ0VTUywgbU15VGhyZWFkSWQsIEFORFJPSURfUFJJT1JJVFlfTk9S
TUFMKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAg
IGlmIChjdXJQcmlvID49IEFORFJPSURfUFJJT1JJVFlfQkFDS0dST1VORCkgewogICAgICAgICAgICAg
ICAgICAgIC8vIFdlIHdhbnQgdG8gdXNlIHRoZSBpbmhlcml0ZWQgcHJpb3JpdHkgZnJvbSB0aGUgY2Fs
bGVyLgogICAgICAgICAgICAgICAgICAgIC8vIEVuc3VyZSB0aGlzIHRocmVhZCBpcyBpbiB0aGUgYmFj
a2dyb3VuZCBzY2hlZHVsaW5nIGNsYXNzLAogICAgICAgICAgICAgICAgICAgIC8vIHNpbmNlIHRoZSBk
cml2ZXIgd29uJ3QgbW9kaWZ5IHNjaGVkdWxpbmcgY2xhc3NlcyBmb3IgdXMuCiAgICAgICAgICAgICAg
ICAgICAgLy8gVGhlIHNjaGVkdWxpbmcgZ3JvdXAgaXMgcmVzZXQgdG8gZGVmYXVsdCBieSB0aGUgY2Fs
bGVyCiAgICAgICAgICAgICAgICAgICAgLy8gb25jZSB0aGlzIG1ldGhvZCByZXR1cm5zIGFmdGVyIHRo
ZSB0cmFuc2FjdGlvbiBpcyBjb21wbGV0ZS4KICAgICAgICAgICAgICAgICAgICBzZXRfc2NoZWRfcG9s
aWN5KG1NeVRocmVhZElkLCBTUF9CQUNLR1JPVU5EKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAg
ICAgfQoKICAgICAgICAgICAgLy9BTE9HSSgiPj4+PiBUUkFOU0FDVCBmcm9tIHBpZCAlZCB1aWQgJWRc
biIsIG1DYWxsaW5nUGlkLCBtQ2FsbGluZ1VpZCk7CgogICAgICAgICAgICBQYXJjZWwgcmVwbHk7CiAg
ICAgICAgICAgIHN0YXR1c190IGVycm9yOwogICAgICAgICAgICBJRl9MT0dfVFJBTlNBQ1RJT05TKCkg
ewogICAgICAgICAgICAgICAgVGV4dE91dHB1dDo6QnVuZGxlIF9iKGFsb2cpOwogICAgICAgICAgICAg
ICAgYWxvZyA8PCAiQlJfVFJBTlNBQ1RJT04gdGhyICIgPDwgKHZvaWQqKXB0aHJlYWRfc2VsZigpCiAg
ICAgICAgICAgICAgICAgICAgPDwgIiAvIG9iaiAiIDw8IHRyLnRhcmdldC5wdHIgPDwgIiAvIGNvZGUg
IgogICAgICAgICAgICAgICAgICAgIDw8IFR5cGVDb2RlKHRyLmNvZGUpIDw8ICI6ICIgPDwgaW5kZW50
IDw8IGJ1ZmZlcgogICAgICAgICAgICAgICAgICAgIDw8IGRlZGVudCA8PCBlbmRsCiAgICAgICAgICAg
ICAgICAgICAgPDwgIkRhdGEgYWRkciA9ICIKICAgICAgICAgICAgICAgICAgICA8PCByZWludGVycHJl
dF9jYXN0PGNvbnN0IHVpbnQ4X3QqPih0ci5kYXRhLnB0ci5idWZmZXIpCiAgICAgICAgICAgICAgICAg
ICAgPDwgIiwgb2Zmc2V0cyBhZGRyPSIKICAgICAgICAgICAgICAgICAgICA8PCByZWludGVycHJldF9j
YXN0PGNvbnN0IHNpemVfdCo+KHRyLmRhdGEucHRyLm9mZnNldHMpIDw8IGVuZGw7CiAgICAgICAgICAg
IH0KICAgICAgICAgICAgaWYgKHRyLnRhcmdldC5wdHIpIHsKICAgICAgICAgICAgICAgIHNwPEJCaW5k
ZXI+IGIoKEJCaW5kZXIqKXRyLmNvb2tpZSk7CiAgICAgICAgICAgICAgICBlcnJvciA9IGItPnRyYW5z
YWN0KHRyLmNvZGUsIGJ1ZmZlciwgJnJlcGx5LCB0ci5mbGFncyk7CgogICAgICAgICAgICB9IGVsc2Ug
ewogICAgICAgICAgICAgICAgZXJyb3IgPSB0aGVfY29udGV4dF9vYmplY3QtPnRyYW5zYWN0KHRyLmNv
ZGUsIGJ1ZmZlciwgJnJlcGx5LCB0ci5mbGFncyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8v
QUxPR0koIjw8PDwgVFJBTlNBQ1QgZnJvbSBwaWQgJWQgcmVzdG9yZSBwaWQgJWQgdWlkICVkXG4iLAog
ICAgICAgICAgICAvLyAgICAgbUNhbGxpbmdQaWQsIG9yaWdQaWQsIG9yaWdVaWQpOwogICAgICAgICAg
ICAKICAgICAgICAgICAgaWYgKCh0ci5mbGFncyAmIFRGX09ORV9XQVkpID09IDApIHsKICAgICAgICAg
ICAgICAgIExPR19PTkVXQVkoIlNlbmRpbmcgcmVwbHkgdG8gJWQhIiwgbUNhbGxpbmdQaWQpOwogICAg
ICAgICAgICAgICAgaWYgKGVycm9yIDwgTk9fRVJST1IpIHJlcGx5LnNldEVycm9yKGVycm9yKTsKICAg
ICAgICAgICAgICAgIHNlbmRSZXBseShyZXBseSwgMCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAg
ICAgICAgICAgICBMT0dfT05FV0FZKCJOT1Qgc2VuZGluZyByZXBseSB0byAlZCEiLCBtQ2FsbGluZ1Bp
ZCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgIG1DYWxsaW5nUGlkID0gb3Jp
Z1BpZDsKICAgICAgICAgICAgbUNhbGxpbmdVaWQgPSBvcmlnVWlkOwogICAgICAgICAgICBtU3RyaWN0
TW9kZVBvbGljeSA9IG9yaWdTdHJpY3RNb2RlUG9saWN5OwogICAgICAgICAgICBtTGFzdFRyYW5zYWN0
aW9uQmluZGVyRmxhZ3MgPSBvcmlnVHJhbnNhY3Rpb25CaW5kZXJGbGFnczsKCiAgICAgICAgICAgIElG
X0xPR19UUkFOU0FDVElPTlMoKSB7CiAgICAgICAgICAgICAgICBUZXh0T3V0cHV0OjpCdW5kbGUgX2Io
YWxvZyk7CiAgICAgICAgICAgICAgICBhbG9nIDw8ICJCQ19SRVBMWSB0aHIgIiA8PCAodm9pZCopcHRo
cmVhZF9zZWxmKCkgPDwgIiAvIG9iaiAiCiAgICAgICAgICAgICAgICAgICAgPDwgdHIudGFyZ2V0LnB0
ciA8PCAiOiAiIDw8IGluZGVudCA8PCByZXBseSA8PCBkZWRlbnQgPDwgZW5kbDsKICAgICAgICAgICAg
fQogICAgICAgICAgICAKICAgICAgICB9CiAgICAgICAgYnJlYWs7CiAgICAKICAgIGNhc2UgQlJfREVB
RF9CSU5ERVI6CiAgICAgICAgewogICAgICAgICAgICBCcEJpbmRlciAqcHJveHkgPSAoQnBCaW5kZXIq
KW1Jbi5yZWFkUG9pbnRlcigpOwogICAgICAgICAgICBwcm94eS0+c2VuZE9iaXR1YXJ5KCk7CiAgICAg
ICAgICAgIG1PdXQud3JpdGVJbnQzMihCQ19ERUFEX0JJTkRFUl9ET05FKTsKICAgICAgICAgICAgbU91
dC53cml0ZVBvaW50ZXIoKHVpbnRwdHJfdClwcm94eSk7CiAgICAgICAgfSBicmVhazsKICAgICAgICAK
ICAgIGNhc2UgQlJfQ0xFQVJfREVBVEhfTk9USUZJQ0FUSU9OX0RPTkU6CiAgICAgICAgewogICAgICAg
ICAgICBCcEJpbmRlciAqcHJveHkgPSAoQnBCaW5kZXIqKW1Jbi5yZWFkUG9pbnRlcigpOwogICAgICAg
ICAgICBwcm94eS0+Z2V0V2Vha1JlZnMoKS0+ZGVjV2Vhayhwcm94eSk7CiAgICAgICAgfSBicmVhazsK
ICAgICAgICAKICAgIGNhc2UgQlJfRklOSVNIRUQ6CiAgICAgICAgcmVzdWx0ID0gVElNRURfT1VUOwog
ICAgICAgIGJyZWFrOwogICAgICAgIAogICAgY2FzZSBCUl9OT09QOgogICAgICAgIGJyZWFrOwogICAg
ICAgIAogICAgY2FzZSBCUl9TUEFXTl9MT09QRVI6CiAgICAgICAgbVByb2Nlc3MtPnNwYXduUG9vbGVk
VGhyZWFkKGZhbHNlKTsKICAgICAgICBicmVhazsKICAgICAgICAKICAgIGRlZmF1bHQ6CiAgICAgICAg
cHJpbnRmKCIqKiogQkFEIENPTU1BTkQgJWQgcmVjZWl2ZWQgZnJvbSBCaW5kZXIgZHJpdmVyXG4iLCBj
bWQpOwogICAgICAgIHJlc3VsdCA9IFVOS05PV05fRVJST1I7CiAgICAgICAgYnJlYWs7CiAgICB9Cgog
ICAgaWYgKHJlc3VsdCAhPSBOT19FUlJPUikgewogICAgICAgIG1MYXN0RXJyb3IgPSByZXN1bHQ7CiAg
ICB9CiAgICAKICAgIHJldHVybiByZXN1bHQ7Cn0KCnZvaWQgSVBDVGhyZWFkU3RhdGU6OnRocmVhZERl
c3RydWN0b3Iodm9pZCAqc3QpCnsKICAgICAgICBJUENUaHJlYWRTdGF0ZSogY29uc3Qgc2VsZiA9IHN0
YXRpY19jYXN0PElQQ1RocmVhZFN0YXRlKj4oc3QpOwogICAgICAgIGlmIChzZWxmKSB7CiAgICAgICAg
ICAgICAgICBzZWxmLT5mbHVzaENvbW1hbmRzKCk7CiNpZiBkZWZpbmVkKEhBVkVfQU5EUk9JRF9PUykK
ICAgICAgICBpZiAoc2VsZi0+bVByb2Nlc3MtPm1Ecml2ZXJGRCA+IDApIHsKICAgICAgICAgICAgaW9j
dGwoc2VsZi0+bVByb2Nlc3MtPm1Ecml2ZXJGRCwgQklOREVSX1RIUkVBRF9FWElULCAwKTsKICAgICAg
ICB9CiNlbmRpZgogICAgICAgICAgICAgICAgZGVsZXRlIHNlbGY7CiAgICAgICAgfQp9CgoKdm9pZCBJ
UENUaHJlYWRTdGF0ZTo6ZnJlZUJ1ZmZlcihQYXJjZWwqIHBhcmNlbCwgY29uc3QgdWludDhfdCogZGF0
YSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplX3QgLypkYXRhU2l6ZSovLAogICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGJpbmRlcl9zaXplX3QqIC8qb2JqZWN0cyov
LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemVfdCAvKm9iamVjdHNTaXplKi8sIHZv
aWQqIC8qY29va2llKi8pCnsKICAgIC8vQUxPR0koIkZyZWVpbmcgcGFyY2VsICVwIiwgJnBhcmNlbCk7
CiAgICBJRl9MT0dfQ09NTUFORFMoKSB7CiAgICAgICAgYWxvZyA8PCAiV3JpdGluZyBCQ19GUkVFX0JV
RkZFUiBmb3IgIiA8PCBkYXRhIDw8IGVuZGw7CiAgICB9CiAgICBBTE9HX0FTU0VSVChkYXRhICE9IE5V
TEwsICJDYWxsZWQgd2l0aCBOVUxMIGRhdGEiKTsKICAgIGlmIChwYXJjZWwgIT0gTlVMTCkgcGFyY2Vs
LT5jbG9zZUZpbGVEZXNjcmlwdG9ycygpOwogICAgSVBDVGhyZWFkU3RhdGUqIHN0YXRlID0gc2VsZigp
OwogICAgc3RhdGUtPm1PdXQud3JpdGVJbnQzMihCQ19GUkVFX0JVRkZFUik7CiAgICBzdGF0ZS0+bU91
dC53cml0ZVBvaW50ZXIoKHVpbnRwdHJfdClkYXRhKTsKfQoKfTsgLy8gbmFtZXNwYWNlIGFuZHJvaWQK
</data><mime>application/octet-stream</mime><width>0</width><height>0</height><duration>0</duration><resource-attributes><file-name>IPCThreadState.cpp</file-name></resource-attributes></resource><resource><data encoding="base64">LyoKKioKKiogQ29weXJpZ2h0IDIwMDgsIFRoZSBBbmRyb2lkIE9wZW4gU291cmNlIFByb2plY3QKKioK
KiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNl
bnNlIik7CioqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0
aCB0aGUgTGljZW5zZS4KKiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0Cioq
CioqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKKioKKiogVW5s
ZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0
d2FyZQoqKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAi
QVMgSVMiIEJBU0lTLAoqKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lO
RCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KKiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3Bl
Y2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAoqKiBsaW1pdGF0aW9ucyB1bmRl
ciB0aGUgTGljZW5zZS4KKi8KCiNpbmNsdWRlIDxhcnBhL2luZXQuaD4KI2luY2x1ZGUgPHN0ZGludC5o
PgojaW5jbHVkZSA8c3lzL3R5cGVzLmg+CgojaW5jbHVkZSA8YmluZGVyL1BhcmNlbC5oPgoKI2luY2x1
ZGUgPG1lZGlhL0lNZWRpYUhUVFBTZXJ2aWNlLmg+CiNpbmNsdWRlIDxtZWRpYS9JTWVkaWFQbGF5ZXIu
aD4KI2luY2x1ZGUgPG1lZGlhL0lTdHJlYW1Tb3VyY2UuaD4KCiNpbmNsdWRlIDxndWkvSUdyYXBoaWNC
dWZmZXJQcm9kdWNlci5oPgojaW5jbHVkZSA8dXRpbHMvU3RyaW5nOC5oPgoKbmFtZXNwYWNlIGFuZHJv
aWQgewoKZW51bSB7CiAgICBESVNDT05ORUNUID0gSUJpbmRlcjo6RklSU1RfQ0FMTF9UUkFOU0FDVElP
TiwKICAgIFNFVF9EQVRBX1NPVVJDRV9VUkwsCiAgICBTRVRfREFUQV9TT1VSQ0VfRkQsCiAgICBTRVRf
REFUQV9TT1VSQ0VfU1RSRUFNLAogICAgUFJFUEFSRV9BU1lOQywKICAgIFNUQVJULAogICAgU1RPUCwK
ICAgIElTX1BMQVlJTkcsCiAgICBQQVVTRSwKICAgIFNFRUtfVE8sCiAgICBHRVRfQ1VSUkVOVF9QT1NJ
VElPTiwKICAgIEdFVF9EVVJBVElPTiwKICAgIFJFU0VULAogICAgU0VUX0FVRElPX1NUUkVBTV9UWVBF
LAogICAgU0VUX0xPT1BJTkcsCiAgICBTRVRfVk9MVU1FLAogICAgSU5WT0tFLAogICAgU0VUX01FVEFE
QVRBX0ZJTFRFUiwKICAgIEdFVF9NRVRBREFUQSwKICAgIFNFVF9BVVhfRUZGRUNUX1NFTkRfTEVWRUws
CiAgICBBVFRBQ0hfQVVYX0VGRkVDVCwKICAgIFNFVF9WSURFT19TVVJGQUNFVEVYVFVSRSwKICAgIFNF
VF9QQVJBTUVURVIsCiAgICBHRVRfUEFSQU1FVEVSLAogICAgU0VUX1JFVFJBTlNNSVRfRU5EUE9JTlQs
CiAgICBHRVRfUkVUUkFOU01JVF9FTkRQT0lOVCwKICAgIFNFVF9ORVhUX1BMQVlFUiwKfTsKCmNsYXNz
IEJwTWVkaWFQbGF5ZXI6IHB1YmxpYyBCcEludGVyZmFjZTxJTWVkaWFQbGF5ZXI+CnsKcHVibGljOgog
ICAgQnBNZWRpYVBsYXllcihjb25zdCBzcDxJQmluZGVyPiYgaW1wbCkKICAgICAgICA6IEJwSW50ZXJm
YWNlPElNZWRpYVBsYXllcj4oaW1wbCkKICAgIHsKICAgIH0KCiAgICAvLyBkaXNjb25uZWN0IGZyb20g
bWVkaWEgcGxheWVyIHNlcnZpY2UKICAgIHZvaWQgZGlzY29ubmVjdCgpCiAgICB7CiAgICAgICAgUGFy
Y2VsIGRhdGEsIHJlcGx5OwogICAgICAgIGRhdGEud3JpdGVJbnRlcmZhY2VUb2tlbihJTWVkaWFQbGF5
ZXI6OmdldEludGVyZmFjZURlc2NyaXB0b3IoKSk7CiAgICAgICAgcmVtb3RlKCktPnRyYW5zYWN0KERJ
U0NPTk5FQ1QsIGRhdGEsICZyZXBseSk7CiAgICB9CgogICAgc3RhdHVzX3Qgc2V0RGF0YVNvdXJjZSgK
ICAgICAgICAgICAgY29uc3Qgc3A8SU1lZGlhSFRUUFNlcnZpY2U+ICZodHRwU2VydmljZSwKICAgICAg
ICAgICAgY29uc3QgY2hhciogdXJsLAogICAgICAgICAgICBjb25zdCBLZXllZFZlY3RvcjxTdHJpbmc4
LCBTdHJpbmc4PiogaGVhZGVycykKICAgIHsKICAgICAgICBQYXJjZWwgZGF0YSwgcmVwbHk7CiAgICAg
ICAgZGF0YS53cml0ZUludGVyZmFjZVRva2VuKElNZWRpYVBsYXllcjo6Z2V0SW50ZXJmYWNlRGVzY3Jp
cHRvcigpKTsKICAgICAgICBkYXRhLndyaXRlSW50MzIoaHR0cFNlcnZpY2UgIT0gTlVMTCk7CiAgICAg
ICAgaWYgKGh0dHBTZXJ2aWNlICE9IE5VTEwpIHsKICAgICAgICAgICAgZGF0YS53cml0ZVN0cm9uZ0Jp
bmRlcihodHRwU2VydmljZS0+YXNCaW5kZXIoKSk7CiAgICAgICAgfQogICAgICAgIGRhdGEud3JpdGVD
U3RyaW5nKHVybCk7CiAgICAgICAgaWYgKGhlYWRlcnMgPT0gTlVMTCkgewogICAgICAgICAgICBkYXRh
LndyaXRlSW50MzIoMCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8gc2VyaWFsaXplIHRo
ZSBoZWFkZXJzCiAgICAgICAgICAgIGRhdGEud3JpdGVJbnQzMihoZWFkZXJzLT5zaXplKCkpOwogICAg
ICAgICAgICBmb3IgKHNpemVfdCBpID0gMDsgaSA8IGhlYWRlcnMtPnNpemUoKTsgKytpKSB7CiAgICAg
ICAgICAgICAgICBkYXRhLndyaXRlU3RyaW5nOChoZWFkZXJzLT5rZXlBdChpKSk7CiAgICAgICAgICAg
ICAgICBkYXRhLndyaXRlU3RyaW5nOChoZWFkZXJzLT52YWx1ZUF0KGkpKTsKICAgICAgICAgICAgfQog
ICAgICAgIH0KICAgICAgICByZW1vdGUoKS0+dHJhbnNhY3QoU0VUX0RBVEFfU09VUkNFX1VSTCwgZGF0
YSwgJnJlcGx5KTsKICAgICAgICByZXR1cm4gcmVwbHkucmVhZEludDMyKCk7CiAgICB9CgogICAgc3Rh
dHVzX3Qgc2V0RGF0YVNvdXJjZShpbnQgZmQsIGludDY0X3Qgb2Zmc2V0LCBpbnQ2NF90IGxlbmd0aCkg
ewogICAgICAgIFBhcmNlbCBkYXRhLCByZXBseTsKICAgICAgICBkYXRhLndyaXRlSW50ZXJmYWNlVG9r
ZW4oSU1lZGlhUGxheWVyOjpnZXRJbnRlcmZhY2VEZXNjcmlwdG9yKCkpOwogICAgICAgIGRhdGEud3Jp
dGVGaWxlRGVzY3JpcHRvcihmZCk7CiAgICAgICAgZGF0YS53cml0ZUludDY0KG9mZnNldCk7CiAgICAg
ICAgZGF0YS53cml0ZUludDY0KGxlbmd0aCk7CiAgICAgICAgcmVtb3RlKCktPnRyYW5zYWN0KFNFVF9E
QVRBX1NPVVJDRV9GRCwgZGF0YSwgJnJlcGx5KTsKICAgICAgICByZXR1cm4gcmVwbHkucmVhZEludDMy
KCk7CiAgICB9CgogICAgc3RhdHVzX3Qgc2V0RGF0YVNvdXJjZShjb25zdCBzcDxJU3RyZWFtU291cmNl
PiAmc291cmNlKSB7CiAgICAgICAgUGFyY2VsIGRhdGEsIHJlcGx5OwogICAgICAgIGRhdGEud3JpdGVJ
bnRlcmZhY2VUb2tlbihJTWVkaWFQbGF5ZXI6OmdldEludGVyZmFjZURlc2NyaXB0b3IoKSk7CiAgICAg
ICAgZGF0YS53cml0ZVN0cm9uZ0JpbmRlcihzb3VyY2UtPmFzQmluZGVyKCkpOwogICAgICAgIHJlbW90
ZSgpLT50cmFuc2FjdChTRVRfREFUQV9TT1VSQ0VfU1RSRUFNLCBkYXRhLCAmcmVwbHkpOwogICAgICAg
IHJldHVybiByZXBseS5yZWFkSW50MzIoKTsKICAgIH0KCiAgICAvLyBwYXNzIHRoZSBidWZmZXJlZCBJ
R3JhcGhpY0J1ZmZlclByb2R1Y2VyIHRvIHRoZSBtZWRpYSBwbGF5ZXIgc2VydmljZQogICAgc3RhdHVz
X3Qgc2V0VmlkZW9TdXJmYWNlVGV4dHVyZShjb25zdCBzcDxJR3JhcGhpY0J1ZmZlclByb2R1Y2VyPiYg
YnVmZmVyUHJvZHVjZXIpCiAgICB7CiAgICAgICAgUGFyY2VsIGRhdGEsIHJlcGx5OwogICAgICAgIGRh
dGEud3JpdGVJbnRlcmZhY2VUb2tlbihJTWVkaWFQbGF5ZXI6OmdldEludGVyZmFjZURlc2NyaXB0b3Io
KSk7CiAgICAgICAgc3A8SUJpbmRlcj4gYihidWZmZXJQcm9kdWNlci0+YXNCaW5kZXIoKSk7CiAgICAg
ICAgZGF0YS53cml0ZVN0cm9uZ0JpbmRlcihiKTsKICAgICAgICByZW1vdGUoKS0+dHJhbnNhY3QoU0VU
X1ZJREVPX1NVUkZBQ0VURVhUVVJFLCBkYXRhLCAmcmVwbHkpOwogICAgICAgIHJldHVybiByZXBseS5y
ZWFkSW50MzIoKTsKICAgIH0KCiAgICBzdGF0dXNfdCBwcmVwYXJlQXN5bmMoKQogICAgewogICAgICAg
IFBhcmNlbCBkYXRhLCByZXBseTsKICAgICAgICBkYXRhLndyaXRlSW50ZXJmYWNlVG9rZW4oSU1lZGlh
UGxheWVyOjpnZXRJbnRlcmZhY2VEZXNjcmlwdG9yKCkpOwogICAgICAgIHJlbW90ZSgpLT50cmFuc2Fj
dChQUkVQQVJFX0FTWU5DLCBkYXRhLCAmcmVwbHkpOwogICAgICAgIHJldHVybiByZXBseS5yZWFkSW50
MzIoKTsKICAgIH0KCiAgICBzdGF0dXNfdCBzdGFydCgpCiAgICB7CiAgICAgICAgUGFyY2VsIGRhdGEs
IHJlcGx5OwogICAgICAgIGRhdGEud3JpdGVJbnRlcmZhY2VUb2tlbihJTWVkaWFQbGF5ZXI6OmdldElu
dGVyZmFjZURlc2NyaXB0b3IoKSk7CiAgICAgICAgcmVtb3RlKCktPnRyYW5zYWN0KFNUQVJULCBkYXRh
LCAmcmVwbHkpOwogICAgICAgIHJldHVybiByZXBseS5yZWFkSW50MzIoKTsKICAgIH0KCiAgICBzdGF0
dXNfdCBzdG9wKCkKICAgIHsKICAgICAgICBQYXJjZWwgZGF0YSwgcmVwbHk7CiAgICAgICAgZGF0YS53
cml0ZUludGVyZmFjZVRva2VuKElNZWRpYVBsYXllcjo6Z2V0SW50ZXJmYWNlRGVzY3JpcHRvcigpKTsK
ICAgICAgICByZW1vdGUoKS0+dHJhbnNhY3QoU1RPUCwgZGF0YSwgJnJlcGx5KTsKICAgICAgICByZXR1
cm4gcmVwbHkucmVhZEludDMyKCk7CiAgICB9CgogICAgc3RhdHVzX3QgaXNQbGF5aW5nKGJvb2wqIHN0
YXRlKQogICAgewogICAgICAgIFBhcmNlbCBkYXRhLCByZXBseTsKICAgICAgICBkYXRhLndyaXRlSW50
ZXJmYWNlVG9rZW4oSU1lZGlhUGxheWVyOjpnZXRJbnRlcmZhY2VEZXNjcmlwdG9yKCkpOwogICAgICAg
IHJlbW90ZSgpLT50cmFuc2FjdChJU19QTEFZSU5HLCBkYXRhLCAmcmVwbHkpOwogICAgICAgICpzdGF0
ZSA9IHJlcGx5LnJlYWRJbnQzMigpOwogICAgICAgIHJldHVybiByZXBseS5yZWFkSW50MzIoKTsKICAg
IH0KCiAgICBzdGF0dXNfdCBwYXVzZSgpCiAgICB7CiAgICAgICAgUGFyY2VsIGRhdGEsIHJlcGx5Owog
ICAgICAgIGRhdGEud3JpdGVJbnRlcmZhY2VUb2tlbihJTWVkaWFQbGF5ZXI6OmdldEludGVyZmFjZURl
c2NyaXB0b3IoKSk7CiAgICAgICAgcmVtb3RlKCktPnRyYW5zYWN0KFBBVVNFLCBkYXRhLCAmcmVwbHkp
OwogICAgICAgIHJldHVybiByZXBseS5yZWFkSW50MzIoKTsKICAgIH0KCiAgICBzdGF0dXNfdCBzZWVr
VG8oaW50IG1zZWMpCiAgICB7CiAgICAgICAgUGFyY2VsIGRhdGEsIHJlcGx5OwogICAgICAgIGRhdGEu
d3JpdGVJbnRlcmZhY2VUb2tlbihJTWVkaWFQbGF5ZXI6OmdldEludGVyZmFjZURlc2NyaXB0b3IoKSk7
CiAgICAgICAgZGF0YS53cml0ZUludDMyKG1zZWMpOwogICAgICAgIHJlbW90ZSgpLT50cmFuc2FjdChT
RUVLX1RPLCBkYXRhLCAmcmVwbHkpOwogICAgICAgIHJldHVybiByZXBseS5yZWFkSW50MzIoKTsKICAg
IH0KCiAgICBzdGF0dXNfdCBnZXRDdXJyZW50UG9zaXRpb24oaW50KiBtc2VjKQogICAgewogICAgICAg
IFBhcmNlbCBkYXRhLCByZXBseTsKICAgICAgICBkYXRhLndyaXRlSW50ZXJmYWNlVG9rZW4oSU1lZGlh
UGxheWVyOjpnZXRJbnRlcmZhY2VEZXNjcmlwdG9yKCkpOwogICAgICAgIHJlbW90ZSgpLT50cmFuc2Fj
dChHRVRfQ1VSUkVOVF9QT1NJVElPTiwgZGF0YSwgJnJlcGx5KTsKICAgICAgICAqbXNlYyA9IHJlcGx5
LnJlYWRJbnQzMigpOwogICAgICAgIHJldHVybiByZXBseS5yZWFkSW50MzIoKTsKICAgIH0KCiAgICBz
dGF0dXNfdCBnZXREdXJhdGlvbihpbnQqIG1zZWMpCiAgICB7CiAgICAgICAgUGFyY2VsIGRhdGEsIHJl
cGx5OwogICAgICAgIGRhdGEud3JpdGVJbnRlcmZhY2VUb2tlbihJTWVkaWFQbGF5ZXI6OmdldEludGVy
ZmFjZURlc2NyaXB0b3IoKSk7CiAgICAgICAgcmVtb3RlKCktPnRyYW5zYWN0KEdFVF9EVVJBVElPTiwg
ZGF0YSwgJnJlcGx5KTsKICAgICAgICAqbXNlYyA9IHJlcGx5LnJlYWRJbnQzMigpOwogICAgICAgIHJl
dHVybiByZXBseS5yZWFkSW50MzIoKTsKICAgIH0KCiAgICBzdGF0dXNfdCByZXNldCgpCiAgICB7CiAg
ICAgICAgUGFyY2VsIGRhdGEsIHJlcGx5OwogICAgICAgIGRhdGEud3JpdGVJbnRlcmZhY2VUb2tlbihJ
TWVkaWFQbGF5ZXI6OmdldEludGVyZmFjZURlc2NyaXB0b3IoKSk7CiAgICAgICAgcmVtb3RlKCktPnRy
YW5zYWN0KFJFU0VULCBkYXRhLCAmcmVwbHkpOwogICAgICAgIHJldHVybiByZXBseS5yZWFkSW50MzIo
KTsKICAgIH0KCiAgICBzdGF0dXNfdCBzZXRBdWRpb1N0cmVhbVR5cGUoYXVkaW9fc3RyZWFtX3R5cGVf
dCBzdHJlYW0pCiAgICB7CiAgICAgICAgUGFyY2VsIGRhdGEsIHJlcGx5OwogICAgICAgIGRhdGEud3Jp
dGVJbnRlcmZhY2VUb2tlbihJTWVkaWFQbGF5ZXI6OmdldEludGVyZmFjZURlc2NyaXB0b3IoKSk7CiAg
ICAgICAgZGF0YS53cml0ZUludDMyKChpbnQzMl90KSBzdHJlYW0pOwogICAgICAgIHJlbW90ZSgpLT50
cmFuc2FjdChTRVRfQVVESU9fU1RSRUFNX1RZUEUsIGRhdGEsICZyZXBseSk7CiAgICAgICAgcmV0dXJu
IHJlcGx5LnJlYWRJbnQzMigpOwogICAgfQoKICAgIHN0YXR1c190IHNldExvb3BpbmcoaW50IGxvb3Ap
CiAgICB7CiAgICAgICAgUGFyY2VsIGRhdGEsIHJlcGx5OwogICAgICAgIGRhdGEud3JpdGVJbnRlcmZh
Y2VUb2tlbihJTWVkaWFQbGF5ZXI6OmdldEludGVyZmFjZURlc2NyaXB0b3IoKSk7CiAgICAgICAgZGF0
YS53cml0ZUludDMyKGxvb3ApOwogICAgICAgIHJlbW90ZSgpLT50cmFuc2FjdChTRVRfTE9PUElORywg
ZGF0YSwgJnJlcGx5KTsKICAgICAgICByZXR1cm4gcmVwbHkucmVhZEludDMyKCk7CiAgICB9CgogICAg
c3RhdHVzX3Qgc2V0Vm9sdW1lKGZsb2F0IGxlZnRWb2x1bWUsIGZsb2F0IHJpZ2h0Vm9sdW1lKQogICAg
ewogICAgICAgIFBhcmNlbCBkYXRhLCByZXBseTsKICAgICAgICBkYXRhLndyaXRlSW50ZXJmYWNlVG9r
ZW4oSU1lZGlhUGxheWVyOjpnZXRJbnRlcmZhY2VEZXNjcmlwdG9yKCkpOwogICAgICAgIGRhdGEud3Jp
dGVGbG9hdChsZWZ0Vm9sdW1lKTsKICAgICAgICBkYXRhLndyaXRlRmxvYXQocmlnaHRWb2x1bWUpOwog
ICAgICAgIHJlbW90ZSgpLT50cmFuc2FjdChTRVRfVk9MVU1FLCBkYXRhLCAmcmVwbHkpOwogICAgICAg
IHJldHVybiByZXBseS5yZWFkSW50MzIoKTsKICAgIH0KCiAgICBzdGF0dXNfdCBpbnZva2UoY29uc3Qg
UGFyY2VsJiByZXF1ZXN0LCBQYXJjZWwgKnJlcGx5KQogICAgewogICAgICAgIC8vIEF2b2lkIGRvaW5n
IGFueSBleHRyYSBjb3B5LiBUaGUgaW50ZXJmYWNlIGRlc2NyaXB0b3Igc2hvdWxkCiAgICAgICAgLy8g
aGF2ZSBiZWVuIHNldCBieSBNZWRpYVBsYXllci5qYXZhLgogICAgICAgIHJldHVybiByZW1vdGUoKS0+
dHJhbnNhY3QoSU5WT0tFLCByZXF1ZXN0LCByZXBseSk7CiAgICB9CgogICAgc3RhdHVzX3Qgc2V0TWV0
YWRhdGFGaWx0ZXIoY29uc3QgUGFyY2VsJiByZXF1ZXN0KQogICAgewogICAgICAgIFBhcmNlbCByZXBs
eTsKICAgICAgICAvLyBBdm9pZCBkb2luZyBhbnkgZXh0cmEgY29weSBvZiB0aGUgcmVxdWVzdC4gVGhl
IGludGVyZmFjZQogICAgICAgIC8vIGRlc2NyaXB0b3Igc2hvdWxkIGhhdmUgYmVlbiBzZXQgYnkgTWVk
aWFQbGF5ZXIuamF2YS4KICAgICAgICByZW1vdGUoKS0+dHJhbnNhY3QoU0VUX01FVEFEQVRBX0ZJTFRF
UiwgcmVxdWVzdCwgJnJlcGx5KTsKICAgICAgICByZXR1cm4gcmVwbHkucmVhZEludDMyKCk7CiAgICB9
CgogICAgc3RhdHVzX3QgZ2V0TWV0YWRhdGEoYm9vbCB1cGRhdGVfb25seSwgYm9vbCBhcHBseV9maWx0
ZXIsIFBhcmNlbCAqcmVwbHkpCiAgICB7CiAgICAgICAgUGFyY2VsIHJlcXVlc3Q7CiAgICAgICAgcmVx
dWVzdC53cml0ZUludGVyZmFjZVRva2VuKElNZWRpYVBsYXllcjo6Z2V0SW50ZXJmYWNlRGVzY3JpcHRv
cigpKTsKICAgICAgICAvLyBUT0RPOiBCdXJuaW5nIDIgaW50cyBmb3IgMiBib29sZWFuLiBTaG91bGQg
cHJvYmFibHkgdXNlIGZsYWdzIGluIGFuIGludCBoZXJlLgogICAgICAgIHJlcXVlc3Qud3JpdGVJbnQz
Mih1cGRhdGVfb25seSk7CiAgICAgICAgcmVxdWVzdC53cml0ZUludDMyKGFwcGx5X2ZpbHRlcik7CiAg
ICAgICAgcmVtb3RlKCktPnRyYW5zYWN0KEdFVF9NRVRBREFUQSwgcmVxdWVzdCwgcmVwbHkpOwogICAg
ICAgIHJldHVybiByZXBseS0+cmVhZEludDMyKCk7CiAgICB9CgogICAgc3RhdHVzX3Qgc2V0QXV4RWZm
ZWN0U2VuZExldmVsKGZsb2F0IGxldmVsKQogICAgewogICAgICAgIFBhcmNlbCBkYXRhLCByZXBseTsK
ICAgICAgICBkYXRhLndyaXRlSW50ZXJmYWNlVG9rZW4oSU1lZGlhUGxheWVyOjpnZXRJbnRlcmZhY2VE
ZXNjcmlwdG9yKCkpOwogICAgICAgIGRhdGEud3JpdGVGbG9hdChsZXZlbCk7CiAgICAgICAgcmVtb3Rl
KCktPnRyYW5zYWN0KFNFVF9BVVhfRUZGRUNUX1NFTkRfTEVWRUwsIGRhdGEsICZyZXBseSk7CiAgICAg
ICAgcmV0dXJuIHJlcGx5LnJlYWRJbnQzMigpOwogICAgfQoKICAgIHN0YXR1c190IGF0dGFjaEF1eEVm
ZmVjdChpbnQgZWZmZWN0SWQpCiAgICB7CiAgICAgICAgUGFyY2VsIGRhdGEsIHJlcGx5OwogICAgICAg
IGRhdGEud3JpdGVJbnRlcmZhY2VUb2tlbihJTWVkaWFQbGF5ZXI6OmdldEludGVyZmFjZURlc2NyaXB0
b3IoKSk7CiAgICAgICAgZGF0YS53cml0ZUludDMyKGVmZmVjdElkKTsKICAgICAgICByZW1vdGUoKS0+
dHJhbnNhY3QoQVRUQUNIX0FVWF9FRkZFQ1QsIGRhdGEsICZyZXBseSk7CiAgICAgICAgcmV0dXJuIHJl
cGx5LnJlYWRJbnQzMigpOwogICAgfQoKICAgIHN0YXR1c190IHNldFBhcmFtZXRlcihpbnQga2V5LCBj
b25zdCBQYXJjZWwmIHJlcXVlc3QpCiAgICB7CiAgICAgICAgUGFyY2VsIGRhdGEsIHJlcGx5OwogICAg
ICAgIGRhdGEud3JpdGVJbnRlcmZhY2VUb2tlbihJTWVkaWFQbGF5ZXI6OmdldEludGVyZmFjZURlc2Ny
aXB0b3IoKSk7CiAgICAgICAgZGF0YS53cml0ZUludDMyKGtleSk7CiAgICAgICAgaWYgKHJlcXVlc3Qu
ZGF0YVNpemUoKSA+IDApIHsKICAgICAgICAgICAgZGF0YS5hcHBlbmRGcm9tKGNvbnN0X2Nhc3Q8UGFy
Y2VsICo+KCZyZXF1ZXN0KSwgMCwgcmVxdWVzdC5kYXRhU2l6ZSgpKTsKICAgICAgICB9CiAgICAgICAg
cmVtb3RlKCktPnRyYW5zYWN0KFNFVF9QQVJBTUVURVIsIGRhdGEsICZyZXBseSk7CiAgICAgICAgcmV0
dXJuIHJlcGx5LnJlYWRJbnQzMigpOwogICAgfQoKICAgIHN0YXR1c190IGdldFBhcmFtZXRlcihpbnQg
a2V5LCBQYXJjZWwgKnJlcGx5KQogICAgewogICAgICAgIFBhcmNlbCBkYXRhOwogICAgICAgIGRhdGEu
d3JpdGVJbnRlcmZhY2VUb2tlbihJTWVkaWFQbGF5ZXI6OmdldEludGVyZmFjZURlc2NyaXB0b3IoKSk7
CiAgICAgICAgZGF0YS53cml0ZUludDMyKGtleSk7CiAgICAgICAgcmV0dXJuIHJlbW90ZSgpLT50cmFu
c2FjdChHRVRfUEFSQU1FVEVSLCBkYXRhLCByZXBseSk7CiAgICB9CgogICAgc3RhdHVzX3Qgc2V0UmV0
cmFuc21pdEVuZHBvaW50KGNvbnN0IHN0cnVjdCBzb2NrYWRkcl9pbiogZW5kcG9pbnQpCiAgICB7CiAg
ICAgICAgUGFyY2VsIGRhdGEsIHJlcGx5OwogICAgICAgIHN0YXR1c190IGVycjsKCiAgICAgICAgZGF0
YS53cml0ZUludGVyZmFjZVRva2VuKElNZWRpYVBsYXllcjo6Z2V0SW50ZXJmYWNlRGVzY3JpcHRvcigp
KTsKICAgICAgICBpZiAoTlVMTCAhPSBlbmRwb2ludCkgewogICAgICAgICAgICBkYXRhLndyaXRlSW50
MzIoc2l6ZW9mKCplbmRwb2ludCkpOwogICAgICAgICAgICBkYXRhLndyaXRlKGVuZHBvaW50LCBzaXpl
b2YoKmVuZHBvaW50KSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgZGF0YS53cml0ZUludDMy
KDApOwogICAgICAgIH0KCiAgICAgICAgZXJyID0gcmVtb3RlKCktPnRyYW5zYWN0KFNFVF9SRVRSQU5T
TUlUX0VORFBPSU5ULCBkYXRhLCAmcmVwbHkpOwogICAgICAgIGlmIChPSyAhPSBlcnIpIHsKICAgICAg
ICAgICAgcmV0dXJuIGVycjsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHJlcGx5LnJlYWRJbnQzMigp
OwogICAgfQoKICAgIHN0YXR1c190IHNldE5leHRQbGF5ZXIoY29uc3Qgc3A8SU1lZGlhUGxheWVyPiYg
cGxheWVyKSB7CiAgICAgICAgUGFyY2VsIGRhdGEsIHJlcGx5OwogICAgICAgIGRhdGEud3JpdGVJbnRl
cmZhY2VUb2tlbihJTWVkaWFQbGF5ZXI6OmdldEludGVyZmFjZURlc2NyaXB0b3IoKSk7CiAgICAgICAg
c3A8SUJpbmRlcj4gYihwbGF5ZXItPmFzQmluZGVyKCkpOwogICAgICAgIGRhdGEud3JpdGVTdHJvbmdC
aW5kZXIoYik7CiAgICAgICAgcmVtb3RlKCktPnRyYW5zYWN0KFNFVF9ORVhUX1BMQVlFUiwgZGF0YSwg
JnJlcGx5KTsKICAgICAgICByZXR1cm4gcmVwbHkucmVhZEludDMyKCk7CiAgICB9CgogICAgc3RhdHVz
X3QgZ2V0UmV0cmFuc21pdEVuZHBvaW50KHN0cnVjdCBzb2NrYWRkcl9pbiogZW5kcG9pbnQpCiAgICB7
CiAgICAgICAgUGFyY2VsIGRhdGEsIHJlcGx5OwogICAgICAgIHN0YXR1c190IGVycjsKCiAgICAgICAg
ZGF0YS53cml0ZUludGVyZmFjZVRva2VuKElNZWRpYVBsYXllcjo6Z2V0SW50ZXJmYWNlRGVzY3JpcHRv
cigpKTsKICAgICAgICBlcnIgPSByZW1vdGUoKS0+dHJhbnNhY3QoR0VUX1JFVFJBTlNNSVRfRU5EUE9J
TlQsIGRhdGEsICZyZXBseSk7CgogICAgICAgIGlmICgoT0sgIT0gZXJyKSB8fCAoT0sgIT0gKGVyciA9
IHJlcGx5LnJlYWRJbnQzMigpKSkpIHsKICAgICAgICAgICAgcmV0dXJuIGVycjsKICAgICAgICB9Cgog
ICAgICAgIGRhdGEucmVhZChlbmRwb2ludCwgc2l6ZW9mKCplbmRwb2ludCkpOwoKICAgICAgICByZXR1
cm4gZXJyOwogICAgfQp9OwoKSU1QTEVNRU5UX01FVEFfSU5URVJGQUNFKE1lZGlhUGxheWVyLCAiYW5k
cm9pZC5tZWRpYS5JTWVkaWFQbGF5ZXIiKTsKCi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCnN0YXR1c190IEJuTWVkaWFQ
bGF5ZXI6Om9uVHJhbnNhY3QoCiAgICB1aW50MzJfdCBjb2RlLCBjb25zdCBQYXJjZWwmIGRhdGEsIFBh
cmNlbCogcmVwbHksIHVpbnQzMl90IGZsYWdzKQp7CiAgICBzd2l0Y2ggKGNvZGUpIHsKICAgICAgICBj
YXNlIERJU0NPTk5FQ1Q6IHsKICAgICAgICAgICAgQ0hFQ0tfSU5URVJGQUNFKElNZWRpYVBsYXllciwg
ZGF0YSwgcmVwbHkpOwogICAgICAgICAgICBkaXNjb25uZWN0KCk7CiAgICAgICAgICAgIHJldHVybiBO
T19FUlJPUjsKICAgICAgICB9IGJyZWFrOwogICAgICAgIGNhc2UgU0VUX0RBVEFfU09VUkNFX1VSTDog
ewogICAgICAgICAgICBDSEVDS19JTlRFUkZBQ0UoSU1lZGlhUGxheWVyLCBkYXRhLCByZXBseSk7Cgog
ICAgICAgICAgICBzcDxJTWVkaWFIVFRQU2VydmljZT4gaHR0cFNlcnZpY2U7CiAgICAgICAgICAgIGlm
IChkYXRhLnJlYWRJbnQzMigpKSB7CiAgICAgICAgICAgICAgICBodHRwU2VydmljZSA9CiAgICAgICAg
ICAgICAgICAgICAgaW50ZXJmYWNlX2Nhc3Q8SU1lZGlhSFRUUFNlcnZpY2U+KGRhdGEucmVhZFN0cm9u
Z0JpbmRlcigpKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgY29uc3QgY2hhciogdXJsID0gZGF0
YS5yZWFkQ1N0cmluZygpOwogICAgICAgICAgICBLZXllZFZlY3RvcjxTdHJpbmc4LCBTdHJpbmc4PiBo
ZWFkZXJzOwogICAgICAgICAgICBpbnQzMl90IG51bUhlYWRlcnMgPSBkYXRhLnJlYWRJbnQzMigpOwog
ICAgICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IG51bUhlYWRlcnM7ICsraSkgewogICAgICAgICAg
ICAgICAgU3RyaW5nOCBrZXkgPSBkYXRhLnJlYWRTdHJpbmc4KCk7CiAgICAgICAgICAgICAgICBTdHJp
bmc4IHZhbHVlID0gZGF0YS5yZWFkU3RyaW5nOCgpOwogICAgICAgICAgICAgICAgaGVhZGVycy5hZGQo
a2V5LCB2YWx1ZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmVwbHktPndyaXRlSW50MzIoc2V0
RGF0YVNvdXJjZSgKICAgICAgICAgICAgICAgICAgICAgICAgaHR0cFNlcnZpY2UsIHVybCwgbnVtSGVh
ZGVycyA+IDAgPyAmaGVhZGVycyA6IE5VTEwpKTsKICAgICAgICAgICAgcmV0dXJuIE5PX0VSUk9SOwog
ICAgICAgIH0gYnJlYWs7CiAgICAgICAgY2FzZSBTRVRfREFUQV9TT1VSQ0VfRkQ6IHsKICAgICAgICAg
ICAgQ0hFQ0tfSU5URVJGQUNFKElNZWRpYVBsYXllciwgZGF0YSwgcmVwbHkpOwogICAgICAgICAgICBp
bnQgZmQgPSBkYXRhLnJlYWRGaWxlRGVzY3JpcHRvcigpOwogICAgICAgICAgICBpbnQ2NF90IG9mZnNl
dCA9IGRhdGEucmVhZEludDY0KCk7CiAgICAgICAgICAgIGludDY0X3QgbGVuZ3RoID0gZGF0YS5yZWFk
SW50NjQoKTsKICAgICAgICAgICAgcmVwbHktPndyaXRlSW50MzIoc2V0RGF0YVNvdXJjZShmZCwgb2Zm
c2V0LCBsZW5ndGgpKTsKICAgICAgICAgICAgcmV0dXJuIE5PX0VSUk9SOwogICAgICAgIH0KICAgICAg
ICBjYXNlIFNFVF9EQVRBX1NPVVJDRV9TVFJFQU06IHsKICAgICAgICAgICAgQ0hFQ0tfSU5URVJGQUNF
KElNZWRpYVBsYXllciwgZGF0YSwgcmVwbHkpOwogICAgICAgICAgICBzcDxJU3RyZWFtU291cmNlPiBz
b3VyY2UgPQogICAgICAgICAgICAgICAgaW50ZXJmYWNlX2Nhc3Q8SVN0cmVhbVNvdXJjZT4oZGF0YS5y
ZWFkU3Ryb25nQmluZGVyKCkpOwogICAgICAgICAgICByZXBseS0+d3JpdGVJbnQzMihzZXREYXRhU291
cmNlKHNvdXJjZSkpOwogICAgICAgICAgICByZXR1cm4gTk9fRVJST1I7CiAgICAgICAgfQogICAgICAg
IGNhc2UgU0VUX1ZJREVPX1NVUkZBQ0VURVhUVVJFOiB7CiAgICAgICAgICAgIENIRUNLX0lOVEVSRkFD
RShJTWVkaWFQbGF5ZXIsIGRhdGEsIHJlcGx5KTsKICAgICAgICAgICAgc3A8SUdyYXBoaWNCdWZmZXJQ
cm9kdWNlcj4gYnVmZmVyUHJvZHVjZXIgPQogICAgICAgICAgICAgICAgICAgIGludGVyZmFjZV9jYXN0
PElHcmFwaGljQnVmZmVyUHJvZHVjZXI+KGRhdGEucmVhZFN0cm9uZ0JpbmRlcigpKTsKICAgICAgICAg
ICAgcmVwbHktPndyaXRlSW50MzIoc2V0VmlkZW9TdXJmYWNlVGV4dHVyZShidWZmZXJQcm9kdWNlcikp
OwogICAgICAgICAgICByZXR1cm4gTk9fRVJST1I7CiAgICAgICAgfSBicmVhazsKICAgICAgICBjYXNl
IFBSRVBBUkVfQVNZTkM6IHsKICAgICAgICAgICAgQ0hFQ0tfSU5URVJGQUNFKElNZWRpYVBsYXllciwg
ZGF0YSwgcmVwbHkpOwogICAgICAgICAgICByZXBseS0+d3JpdGVJbnQzMihwcmVwYXJlQXN5bmMoKSk7
CiAgICAgICAgICAgIHJldHVybiBOT19FUlJPUjsKICAgICAgICB9IGJyZWFrOwogICAgICAgIGNhc2Ug
U1RBUlQ6IHsKICAgICAgICAgICAgQ0hFQ0tfSU5URVJGQUNFKElNZWRpYVBsYXllciwgZGF0YSwgcmVw
bHkpOwogICAgICAgICAgICByZXBseS0+d3JpdGVJbnQzMihzdGFydCgpKTsKICAgICAgICAgICAgcmV0
dXJuIE5PX0VSUk9SOwogICAgICAgIH0gYnJlYWs7CiAgICAgICAgY2FzZSBTVE9QOiB7CiAgICAgICAg
ICAgIENIRUNLX0lOVEVSRkFDRShJTWVkaWFQbGF5ZXIsIGRhdGEsIHJlcGx5KTsKICAgICAgICAgICAg
cmVwbHktPndyaXRlSW50MzIoc3RvcCgpKTsKICAgICAgICAgICAgcmV0dXJuIE5PX0VSUk9SOwogICAg
ICAgIH0gYnJlYWs7CiAgICAgICAgY2FzZSBJU19QTEFZSU5HOiB7CiAgICAgICAgICAgIENIRUNLX0lO
VEVSRkFDRShJTWVkaWFQbGF5ZXIsIGRhdGEsIHJlcGx5KTsKICAgICAgICAgICAgYm9vbCBzdGF0ZTsK
ICAgICAgICAgICAgc3RhdHVzX3QgcmV0ID0gaXNQbGF5aW5nKCZzdGF0ZSk7CiAgICAgICAgICAgIHJl
cGx5LT53cml0ZUludDMyKHN0YXRlKTsKICAgICAgICAgICAgcmVwbHktPndyaXRlSW50MzIocmV0KTsK
ICAgICAgICAgICAgcmV0dXJuIE5PX0VSUk9SOwogICAgICAgIH0gYnJlYWs7CiAgICAgICAgY2FzZSBQ
QVVTRTogewogICAgICAgICAgICBDSEVDS19JTlRFUkZBQ0UoSU1lZGlhUGxheWVyLCBkYXRhLCByZXBs
eSk7CiAgICAgICAgICAgIHJlcGx5LT53cml0ZUludDMyKHBhdXNlKCkpOwogICAgICAgICAgICByZXR1
cm4gTk9fRVJST1I7CiAgICAgICAgfSBicmVhazsKICAgICAgICBjYXNlIFNFRUtfVE86IHsKICAgICAg
ICAgICAgQ0hFQ0tfSU5URVJGQUNFKElNZWRpYVBsYXllciwgZGF0YSwgcmVwbHkpOwogICAgICAgICAg
ICByZXBseS0+d3JpdGVJbnQzMihzZWVrVG8oZGF0YS5yZWFkSW50MzIoKSkpOwogICAgICAgICAgICBy
ZXR1cm4gTk9fRVJST1I7CiAgICAgICAgfSBicmVhazsKICAgICAgICBjYXNlIEdFVF9DVVJSRU5UX1BP
U0lUSU9OOiB7CiAgICAgICAgICAgIENIRUNLX0lOVEVSRkFDRShJTWVkaWFQbGF5ZXIsIGRhdGEsIHJl
cGx5KTsKICAgICAgICAgICAgaW50IG1zZWM7CiAgICAgICAgICAgIHN0YXR1c190IHJldCA9IGdldEN1
cnJlbnRQb3NpdGlvbigmbXNlYyk7CiAgICAgICAgICAgIHJlcGx5LT53cml0ZUludDMyKG1zZWMpOwog
ICAgICAgICAgICByZXBseS0+d3JpdGVJbnQzMihyZXQpOwogICAgICAgICAgICByZXR1cm4gTk9fRVJS
T1I7CiAgICAgICAgfSBicmVhazsKICAgICAgICBjYXNlIEdFVF9EVVJBVElPTjogewogICAgICAgICAg
ICBDSEVDS19JTlRFUkZBQ0UoSU1lZGlhUGxheWVyLCBkYXRhLCByZXBseSk7CiAgICAgICAgICAgIGlu
dCBtc2VjOwogICAgICAgICAgICBzdGF0dXNfdCByZXQgPSBnZXREdXJhdGlvbigmbXNlYyk7CiAgICAg
ICAgICAgIHJlcGx5LT53cml0ZUludDMyKG1zZWMpOwogICAgICAgICAgICByZXBseS0+d3JpdGVJbnQz
MihyZXQpOwogICAgICAgICAgICByZXR1cm4gTk9fRVJST1I7CiAgICAgICAgfSBicmVhazsKICAgICAg
ICBjYXNlIFJFU0VUOiB7CiAgICAgICAgICAgIENIRUNLX0lOVEVSRkFDRShJTWVkaWFQbGF5ZXIsIGRh
dGEsIHJlcGx5KTsKICAgICAgICAgICAgcmVwbHktPndyaXRlSW50MzIocmVzZXQoKSk7CiAgICAgICAg
ICAgIHJldHVybiBOT19FUlJPUjsKICAgICAgICB9IGJyZWFrOwogICAgICAgIGNhc2UgU0VUX0FVRElP
X1NUUkVBTV9UWVBFOiB7CiAgICAgICAgICAgIENIRUNLX0lOVEVSRkFDRShJTWVkaWFQbGF5ZXIsIGRh
dGEsIHJlcGx5KTsKICAgICAgICAgICAgcmVwbHktPndyaXRlSW50MzIoc2V0QXVkaW9TdHJlYW1UeXBl
KChhdWRpb19zdHJlYW1fdHlwZV90KSBkYXRhLnJlYWRJbnQzMigpKSk7CiAgICAgICAgICAgIHJldHVy
biBOT19FUlJPUjsKICAgICAgICB9IGJyZWFrOwogICAgICAgIGNhc2UgU0VUX0xPT1BJTkc6IHsKICAg
ICAgICAgICAgQ0hFQ0tfSU5URVJGQUNFKElNZWRpYVBsYXllciwgZGF0YSwgcmVwbHkpOwogICAgICAg
ICAgICByZXBseS0+d3JpdGVJbnQzMihzZXRMb29waW5nKGRhdGEucmVhZEludDMyKCkpKTsKICAgICAg
ICAgICAgcmV0dXJuIE5PX0VSUk9SOwogICAgICAgIH0gYnJlYWs7CiAgICAgICAgY2FzZSBTRVRfVk9M
VU1FOiB7CiAgICAgICAgICAgIENIRUNLX0lOVEVSRkFDRShJTWVkaWFQbGF5ZXIsIGRhdGEsIHJlcGx5
KTsKICAgICAgICAgICAgZmxvYXQgbGVmdFZvbHVtZSA9IGRhdGEucmVhZEZsb2F0KCk7CiAgICAgICAg
ICAgIGZsb2F0IHJpZ2h0Vm9sdW1lID0gZGF0YS5yZWFkRmxvYXQoKTsKICAgICAgICAgICAgcmVwbHkt
PndyaXRlSW50MzIoc2V0Vm9sdW1lKGxlZnRWb2x1bWUsIHJpZ2h0Vm9sdW1lKSk7CiAgICAgICAgICAg
IHJldHVybiBOT19FUlJPUjsKICAgICAgICB9IGJyZWFrOwogICAgICAgIGNhc2UgSU5WT0tFOiB7CiAg
ICAgICAgICAgIENIRUNLX0lOVEVSRkFDRShJTWVkaWFQbGF5ZXIsIGRhdGEsIHJlcGx5KTsKICAgICAg
ICAgICAgc3RhdHVzX3QgcmVzdWx0ID0gaW52b2tlKGRhdGEsIHJlcGx5KTsKICAgICAgICAgICAgcmV0
dXJuIHJlc3VsdDsKICAgICAgICB9IGJyZWFrOwogICAgICAgIGNhc2UgU0VUX01FVEFEQVRBX0ZJTFRF
UjogewogICAgICAgICAgICBDSEVDS19JTlRFUkZBQ0UoSU1lZGlhUGxheWVyLCBkYXRhLCByZXBseSk7
CiAgICAgICAgICAgIHJlcGx5LT53cml0ZUludDMyKHNldE1ldGFkYXRhRmlsdGVyKGRhdGEpKTsKICAg
ICAgICAgICAgcmV0dXJuIE5PX0VSUk9SOwogICAgICAgIH0gYnJlYWs7CiAgICAgICAgY2FzZSBHRVRf
TUVUQURBVEE6IHsKICAgICAgICAgICAgQ0hFQ0tfSU5URVJGQUNFKElNZWRpYVBsYXllciwgZGF0YSwg
cmVwbHkpOwogICAgICAgICAgICBib29sIHVwZGF0ZV9vbmx5ID0gc3RhdGljX2Nhc3Q8Ym9vbD4oZGF0
YS5yZWFkSW50MzIoKSk7CiAgICAgICAgICAgIGJvb2wgYXBwbHlfZmlsdGVyID0gc3RhdGljX2Nhc3Q8
Ym9vbD4oZGF0YS5yZWFkSW50MzIoKSk7CiAgICAgICAgICAgIGNvbnN0IHN0YXR1c190IHJldGNvZGUg
PSBnZXRNZXRhZGF0YSh1cGRhdGVfb25seSwgYXBwbHlfZmlsdGVyLCByZXBseSk7CiAgICAgICAgICAg
IHJlcGx5LT5zZXREYXRhUG9zaXRpb24oMCk7CiAgICAgICAgICAgIHJlcGx5LT53cml0ZUludDMyKHJl
dGNvZGUpOwogICAgICAgICAgICByZXBseS0+c2V0RGF0YVBvc2l0aW9uKDApOwogICAgICAgICAgICBy
ZXR1cm4gTk9fRVJST1I7CiAgICAgICAgfSBicmVhazsKICAgICAgICBjYXNlIFNFVF9BVVhfRUZGRUNU
X1NFTkRfTEVWRUw6IHsKICAgICAgICAgICAgQ0hFQ0tfSU5URVJGQUNFKElNZWRpYVBsYXllciwgZGF0
YSwgcmVwbHkpOwogICAgICAgICAgICByZXBseS0+d3JpdGVJbnQzMihzZXRBdXhFZmZlY3RTZW5kTGV2
ZWwoZGF0YS5yZWFkRmxvYXQoKSkpOwogICAgICAgICAgICByZXR1cm4gTk9fRVJST1I7CiAgICAgICAg
fSBicmVhazsKICAgICAgICBjYXNlIEFUVEFDSF9BVVhfRUZGRUNUOiB7CiAgICAgICAgICAgIENIRUNL
X0lOVEVSRkFDRShJTWVkaWFQbGF5ZXIsIGRhdGEsIHJlcGx5KTsKICAgICAgICAgICAgcmVwbHktPndy
aXRlSW50MzIoYXR0YWNoQXV4RWZmZWN0KGRhdGEucmVhZEludDMyKCkpKTsKICAgICAgICAgICAgcmV0
dXJuIE5PX0VSUk9SOwogICAgICAgIH0gYnJlYWs7CiAgICAgICAgY2FzZSBTRVRfUEFSQU1FVEVSOiB7
CiAgICAgICAgICAgIENIRUNLX0lOVEVSRkFDRShJTWVkaWFQbGF5ZXIsIGRhdGEsIHJlcGx5KTsKICAg
ICAgICAgICAgaW50IGtleSA9IGRhdGEucmVhZEludDMyKCk7CgogICAgICAgICAgICBQYXJjZWwgcmVx
dWVzdDsKICAgICAgICAgICAgaWYgKGRhdGEuZGF0YUF2YWlsKCkgPiAwKSB7CiAgICAgICAgICAgICAg
ICByZXF1ZXN0LmFwcGVuZEZyb20oCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0X2Nhc3Q8UGFy
Y2VsICo+KCZkYXRhKSwgZGF0YS5kYXRhUG9zaXRpb24oKSwgZGF0YS5kYXRhQXZhaWwoKSk7CiAgICAg
ICAgICAgIH0KICAgICAgICAgICAgcmVxdWVzdC5zZXREYXRhUG9zaXRpb24oMCk7CiAgICAgICAgICAg
IHJlcGx5LT53cml0ZUludDMyKHNldFBhcmFtZXRlcihrZXksIHJlcXVlc3QpKTsKICAgICAgICAgICAg
cmV0dXJuIE5PX0VSUk9SOwogICAgICAgIH0gYnJlYWs7CiAgICAgICAgY2FzZSBHRVRfUEFSQU1FVEVS
OiB7CiAgICAgICAgICAgIENIRUNLX0lOVEVSRkFDRShJTWVkaWFQbGF5ZXIsIGRhdGEsIHJlcGx5KTsK
ICAgICAgICAgICAgcmV0dXJuIGdldFBhcmFtZXRlcihkYXRhLnJlYWRJbnQzMigpLCByZXBseSk7CiAg
ICAgICAgfSBicmVhazsKICAgICAgICBjYXNlIFNFVF9SRVRSQU5TTUlUX0VORFBPSU5UOiB7CiAgICAg
ICAgICAgIENIRUNLX0lOVEVSRkFDRShJTWVkaWFQbGF5ZXIsIGRhdGEsIHJlcGx5KTsKCiAgICAgICAg
ICAgIHN0cnVjdCBzb2NrYWRkcl9pbiBlbmRwb2ludDsKICAgICAgICAgICAgaW50IGFtdCA9IGRhdGEu
cmVhZEludDMyKCk7CiAgICAgICAgICAgIGlmIChhbXQgPT0gc2l6ZW9mKGVuZHBvaW50KSkgewogICAg
ICAgICAgICAgICAgZGF0YS5yZWFkKCZlbmRwb2ludCwgc2l6ZW9mKHN0cnVjdCBzb2NrYWRkcl9pbikp
OwogICAgICAgICAgICAgICAgcmVwbHktPndyaXRlSW50MzIoc2V0UmV0cmFuc21pdEVuZHBvaW50KCZl
bmRwb2ludCkpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmVwbHktPndyaXRl
SW50MzIoc2V0UmV0cmFuc21pdEVuZHBvaW50KE5VTEwpKTsKICAgICAgICAgICAgfQoKICAgICAgICAg
ICAgcmV0dXJuIE5PX0VSUk9SOwogICAgICAgIH0gYnJlYWs7CiAgICAgICAgY2FzZSBHRVRfUkVUUkFO
U01JVF9FTkRQT0lOVDogewogICAgICAgICAgICBDSEVDS19JTlRFUkZBQ0UoSU1lZGlhUGxheWVyLCBk
YXRhLCByZXBseSk7CgogICAgICAgICAgICBzdHJ1Y3Qgc29ja2FkZHJfaW4gZW5kcG9pbnQ7CiAgICAg
ICAgICAgIHN0YXR1c190IHJlcyA9IGdldFJldHJhbnNtaXRFbmRwb2ludCgmZW5kcG9pbnQpOwoKICAg
ICAgICAgICAgcmVwbHktPndyaXRlSW50MzIocmVzKTsKICAgICAgICAgICAgcmVwbHktPndyaXRlKCZl
bmRwb2ludCwgc2l6ZW9mKGVuZHBvaW50KSk7CgogICAgICAgICAgICByZXR1cm4gTk9fRVJST1I7CiAg
ICAgICAgfSBicmVhazsKICAgICAgICBjYXNlIFNFVF9ORVhUX1BMQVlFUjogewogICAgICAgICAgICBD
SEVDS19JTlRFUkZBQ0UoSU1lZGlhUGxheWVyLCBkYXRhLCByZXBseSk7CiAgICAgICAgICAgIHJlcGx5
LT53cml0ZUludDMyKHNldE5leHRQbGF5ZXIoaW50ZXJmYWNlX2Nhc3Q8SU1lZGlhUGxheWVyPihkYXRh
LnJlYWRTdHJvbmdCaW5kZXIoKSkpKTsKCiAgICAgICAgICAgIHJldHVybiBOT19FUlJPUjsKICAgICAg
ICB9IGJyZWFrOwogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgIHJldHVybiBCQmluZGVyOjpvblRy
YW5zYWN0KGNvZGUsIGRhdGEsIHJlcGx5LCBmbGFncyk7CiAgICB9Cn0KCi8vIC0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0KCn07IC8vIG5hbWVzcGFjZSBhbmRyb2lkCg==</data><mime>application/octet-stream</mime><width>0</width><height>0</height><duration>0</duration><resource-attributes><file-name>IMediaPlayer.cpp</file-name></resource-attributes></resource><resource><data encoding="base64">LyogQ29weXJpZ2h0IDIwMDggVGhlIEFuZHJvaWQgT3BlbiBTb3VyY2UgUHJvamVjdAogKi8KCiNpbmNs
dWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkbGliLmg+CiNpbmNsdWRlIDxlcnJuby5oPgojaW5jbHVk
ZSA8ZmNudGwuaD4KCiNpbmNsdWRlIDxwcml2YXRlL2FuZHJvaWRfZmlsZXN5c3RlbV9jb25maWcuaD4K
CiNpbmNsdWRlIDxzZWxpbnV4L2FuZHJvaWQuaD4KI2luY2x1ZGUgPHNlbGludXgvYXZjLmg+CgojaW5j
bHVkZSAiYmluZGVyLmgiCgojaWYgMAojZGVmaW5lIEFMT0dJKHguLi4pIGZwcmludGYoc3RkZXJyLCAi
c3ZjbWdyOiAiIHgpCiNkZWZpbmUgQUxPR0UoeC4uLikgZnByaW50ZihzdGRlcnIsICJzdmNtZ3I6ICIg
eCkKI2Vsc2UKI2RlZmluZSBMT0dfVEFHICJTZXJ2aWNlTWFuYWdlciIKI2luY2x1ZGUgPGN1dGlscy9s
b2cuaD4KI2VuZGlmCgp1aW50MzJfdCBzdmNtZ3JfaGFuZGxlOwoKY29uc3QgY2hhciAqc3RyOChjb25z
dCB1aW50MTZfdCAqeCwgc2l6ZV90IHhfbGVuKQp7CiAgICBzdGF0aWMgY2hhciBidWZbMTI4XTsKICAg
IHNpemVfdCBtYXggPSAxMjc7CiAgICBjaGFyICpwID0gYnVmOwoKICAgIGlmICh4X2xlbiA8IG1heCkg
ewogICAgICAgIG1heCA9IHhfbGVuOwogICAgfQoKICAgIGlmICh4KSB7CiAgICAgICAgd2hpbGUgKCht
YXggPiAwKSAmJiAoKnggIT0gJ1wwJykpIHsKICAgICAgICAgICAgKnArKyA9ICp4Kys7CiAgICAgICAg
ICAgIG1heC0tOwogICAgICAgIH0KICAgIH0KICAgICpwKysgPSAwOwogICAgcmV0dXJuIGJ1ZjsKfQoK
aW50IHN0cjE2ZXEoY29uc3QgdWludDE2X3QgKmEsIGNvbnN0IGNoYXIgKmIpCnsKICAgIHdoaWxlICgq
YSAmJiAqYikKICAgICAgICBpZiAoKmErKyAhPSAqYisrKSByZXR1cm4gMDsKICAgIGlmICgqYSB8fCAq
YikKICAgICAgICByZXR1cm4gMDsKICAgIHJldHVybiAxOwp9CgpzdGF0aWMgaW50IHNlbGludXhfZW5h
YmxlZDsKc3RhdGljIGNoYXIgKnNlcnZpY2VfbWFuYWdlcl9jb250ZXh0OwpzdGF0aWMgc3RydWN0IHNl
bGFiZWxfaGFuZGxlKiBzZWhhbmRsZTsKCnN0YXRpYyBib29sIGNoZWNrX21hY19wZXJtcyhwaWRfdCBz
cGlkLCBjb25zdCBjaGFyICp0Y3R4LCBjb25zdCBjaGFyICpwZXJtLCBjb25zdCBjaGFyICpuYW1lKQp7
CiAgICBjaGFyICpzY3R4ID0gTlVMTDsKICAgIGNvbnN0IGNoYXIgKmNsYXNzID0gInNlcnZpY2VfbWFu
YWdlciI7CiAgICBib29sIGFsbG93ZWQ7CgogICAgaWYgKGdldHBpZGNvbihzcGlkLCAmc2N0eCkgPCAw
KSB7CiAgICAgICAgQUxPR0UoIlNFTGludXg6IGdldHBpZGNvbihwaWQ9JWQpIGZhaWxlZCB0byByZXRy
aWV2ZSBwaWQgY29udGV4dC5cbiIsIHNwaWQpOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KCiAg
ICBpbnQgcmVzdWx0ID0gc2VsaW51eF9jaGVja19hY2Nlc3Moc2N0eCwgdGN0eCwgY2xhc3MsIHBlcm0s
ICh2b2lkICopIG5hbWUpOwogICAgYWxsb3dlZCA9IChyZXN1bHQgPT0gMCk7CgogICAgZnJlZWNvbihz
Y3R4KTsKICAgIHJldHVybiBhbGxvd2VkOwp9CgpzdGF0aWMgYm9vbCBjaGVja19tYWNfcGVybXNfZnJv
bV9nZXRjb24ocGlkX3Qgc3BpZCwgY29uc3QgY2hhciAqcGVybSkKewogICAgaWYgKHNlbGludXhfZW5h
YmxlZCA8PSAwKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgcmV0dXJuIGNoZWNrX21h
Y19wZXJtcyhzcGlkLCBzZXJ2aWNlX21hbmFnZXJfY29udGV4dCwgcGVybSwgTlVMTCk7Cn0KCnN0YXRp
YyBib29sIGNoZWNrX21hY19wZXJtc19mcm9tX2xvb2t1cChwaWRfdCBzcGlkLCBjb25zdCBjaGFyICpw
ZXJtLCBjb25zdCBjaGFyICpuYW1lKQp7CiAgICBib29sIGFsbG93ZWQ7CiAgICBjaGFyICp0Y3R4ID0g
TlVMTDsKCiAgICBpZiAoc2VsaW51eF9lbmFibGVkIDw9IDApIHsKICAgICAgICByZXR1cm4gdHJ1ZTsK
ICAgIH0KCiAgICBpZiAoIXNlaGFuZGxlKSB7CiAgICAgICAgQUxPR0UoIlNFTGludXg6IEZhaWxlZCB0
byBmaW5kIHNlaGFuZGxlLiBBYm9ydGluZyBzZXJ2aWNlX21hbmFnZXIuXG4iKTsKICAgICAgICBhYm9y
dCgpOwogICAgfQoKICAgIGlmIChzZWxhYmVsX2xvb2t1cChzZWhhbmRsZSwgJnRjdHgsIG5hbWUsIDAp
ICE9IDApIHsKICAgICAgICBBTE9HRSgiU0VMaW51eDogTm8gbWF0Y2ggZm9yICVzIGluIHNlcnZpY2Vf
Y29udGV4dHMuXG4iLCBuYW1lKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9CgogICAgYWxsb3dl
ZCA9IGNoZWNrX21hY19wZXJtcyhzcGlkLCB0Y3R4LCBwZXJtLCBuYW1lKTsKICAgIGZyZWVjb24odGN0
eCk7CiAgICByZXR1cm4gYWxsb3dlZDsKfQoKc3RhdGljIGludCBzdmNfY2FuX3JlZ2lzdGVyKGNvbnN0
IHVpbnQxNl90ICpuYW1lLCBzaXplX3QgbmFtZV9sZW4sIHBpZF90IHNwaWQpCnsKICAgIGNvbnN0IGNo
YXIgKnBlcm0gPSAiYWRkIjsKICAgIHJldHVybiBjaGVja19tYWNfcGVybXNfZnJvbV9sb29rdXAoc3Bp
ZCwgcGVybSwgc3RyOChuYW1lLCBuYW1lX2xlbikpID8gMSA6IDA7Cn0KCnN0YXRpYyBpbnQgc3ZjX2Nh
bl9saXN0KHBpZF90IHNwaWQpCnsKICAgIGNvbnN0IGNoYXIgKnBlcm0gPSAibGlzdCI7CiAgICByZXR1
cm4gY2hlY2tfbWFjX3Blcm1zX2Zyb21fZ2V0Y29uKHNwaWQsIHBlcm0pID8gMSA6IDA7Cn0KCnN0YXRp
YyBpbnQgc3ZjX2Nhbl9maW5kKGNvbnN0IHVpbnQxNl90ICpuYW1lLCBzaXplX3QgbmFtZV9sZW4sIHBp
ZF90IHNwaWQpCnsKICAgIGNvbnN0IGNoYXIgKnBlcm0gPSAiZmluZCI7CiAgICByZXR1cm4gY2hlY2tf
bWFjX3Blcm1zX2Zyb21fbG9va3VwKHNwaWQsIHBlcm0sIHN0cjgobmFtZSwgbmFtZV9sZW4pKSA/IDEg
OiAwOwp9CgpzdHJ1Y3Qgc3ZjaW5mbwp7CiAgICBzdHJ1Y3Qgc3ZjaW5mbyAqbmV4dDsKICAgIHVpbnQz
Ml90IGhhbmRsZTsKICAgIHN0cnVjdCBiaW5kZXJfZGVhdGggZGVhdGg7CiAgICBpbnQgYWxsb3dfaXNv
bGF0ZWQ7CiAgICBzaXplX3QgbGVuOwogICAgdWludDE2X3QgbmFtZVswXTsKfTsKCnN0cnVjdCBzdmNp
bmZvICpzdmNsaXN0ID0gTlVMTDsKCnN0cnVjdCBzdmNpbmZvICpmaW5kX3N2Yyhjb25zdCB1aW50MTZf
dCAqczE2LCBzaXplX3QgbGVuKQp7CiAgICBzdHJ1Y3Qgc3ZjaW5mbyAqc2k7CgogICAgZm9yIChzaSA9
IHN2Y2xpc3Q7IHNpOyBzaSA9IHNpLT5uZXh0KSB7CiAgICAgICAgaWYgKChsZW4gPT0gc2ktPmxlbikg
JiYKICAgICAgICAgICAgIW1lbWNtcChzMTYsIHNpLT5uYW1lLCBsZW4gKiBzaXplb2YodWludDE2X3Qp
KSkgewogICAgICAgICAgICByZXR1cm4gc2k7CiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIE5VTEw7
Cn0KCnZvaWQgc3ZjaW5mb19kZWF0aChzdHJ1Y3QgYmluZGVyX3N0YXRlICpicywgdm9pZCAqcHRyKQp7
CiAgICBzdHJ1Y3Qgc3ZjaW5mbyAqc2kgPSAoc3RydWN0IHN2Y2luZm8qICkgcHRyOwoKICAgIEFMT0dJ
KCJzZXJ2aWNlICclcycgZGllZFxuIiwgc3RyOChzaS0+bmFtZSwgc2ktPmxlbikpOwogICAgaWYgKHNp
LT5oYW5kbGUpIHsKICAgICAgICBiaW5kZXJfcmVsZWFzZShicywgc2ktPmhhbmRsZSk7CiAgICAgICAg
c2ktPmhhbmRsZSA9IDA7CiAgICB9Cn0KCnVpbnQxNl90IHN2Y21ncl9pZFtdID0gewogICAgJ2EnLCdu
JywnZCcsJ3InLCdvJywnaScsJ2QnLCcuJywnbycsJ3MnLCcuJywKICAgICdJJywnUycsJ2UnLCdyJywn
dicsJ2knLCdjJywnZScsJ00nLCdhJywnbicsJ2EnLCdnJywnZScsJ3InCn07CgoKdWludDMyX3QgZG9f
ZmluZF9zZXJ2aWNlKHN0cnVjdCBiaW5kZXJfc3RhdGUgKmJzLCBjb25zdCB1aW50MTZfdCAqcywgc2l6
ZV90IGxlbiwgdWlkX3QgdWlkLCBwaWRfdCBzcGlkKQp7CiAgICBzdHJ1Y3Qgc3ZjaW5mbyAqc2k7Cgog
ICAgaWYgKCFzdmNfY2FuX2ZpbmQocywgbGVuLCBzcGlkKSkgewogICAgICAgIEFMT0dFKCJmaW5kX3Nl
cnZpY2UoJyVzJykgdWlkPSVkIC0gUEVSTUlTU0lPTiBERU5JRURcbiIsCiAgICAgICAgICAgICBzdHI4
KHMsIGxlbiksIHVpZCk7CiAgICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICBzaSA9IGZpbmRfc3ZjKHMs
IGxlbik7CiAgICAvL0FMT0dJKCJjaGVja19zZXJ2aWNlKCclcycpIGhhbmRsZSA9ICV4XG4iLCBzdHI4
KHMsIGxlbiksIHNpID8gc2ktPmhhbmRsZSA6IDApOwogICAgaWYgKHNpICYmIHNpLT5oYW5kbGUpIHsK
ICAgICAgICBpZiAoIXNpLT5hbGxvd19pc29sYXRlZCkgewogICAgICAgICAgICAvLyBJZiB0aGlzIHNl
cnZpY2UgZG9lc24ndCBhbGxvdyBhY2Nlc3MgZnJvbSBpc29sYXRlZCBwcm9jZXNzZXMsCiAgICAgICAg
ICAgIC8vIHRoZW4gY2hlY2sgdGhlIHVpZCB0byBzZWUgaWYgaXQgaXMgaXNvbGF0ZWQuCiAgICAgICAg
ICAgIHVpZF90IGFwcGlkID0gdWlkICUgQUlEX1VTRVI7CiAgICAgICAgICAgIGlmIChhcHBpZCA+PSBB
SURfSVNPTEFURURfU1RBUlQgJiYgYXBwaWQgPD0gQUlEX0lTT0xBVEVEX0VORCkgewogICAgICAgICAg
ICAgICAgcmV0dXJuIDA7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIHNpLT5o
YW5kbGU7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiAwOwogICAgfQp9CgppbnQgZG9fYWRkX3Nl
cnZpY2Uoc3RydWN0IGJpbmRlcl9zdGF0ZSAqYnMsCiAgICAgICAgICAgICAgICAgICBjb25zdCB1aW50
MTZfdCAqcywgc2l6ZV90IGxlbiwKICAgICAgICAgICAgICAgICAgIHVpbnQzMl90IGhhbmRsZSwgdWlk
X3QgdWlkLCBpbnQgYWxsb3dfaXNvbGF0ZWQsCiAgICAgICAgICAgICAgICAgICBwaWRfdCBzcGlkKQp7
CiAgICBzdHJ1Y3Qgc3ZjaW5mbyAqc2k7CgogICAgLy9BTE9HSSgiYWRkX3NlcnZpY2UoJyVzJywleCwl
cykgdWlkPSVkXG4iLCBzdHI4KHMsIGxlbiksIGhhbmRsZSwKICAgIC8vICAgICAgICBhbGxvd19pc29s
YXRlZCA/ICJhbGxvd19pc29sYXRlZCIgOiAiIWFsbG93X2lzb2xhdGVkIiwgdWlkKTsKCiAgICBpZiAo
IWhhbmRsZSB8fCAobGVuID09IDApIHx8IChsZW4gPiAxMjcpKQogICAgICAgIHJldHVybiAtMTsKCiAg
ICBpZiAoIXN2Y19jYW5fcmVnaXN0ZXIocywgbGVuLCBzcGlkKSkgewogICAgICAgIEFMT0dFKCJhZGRf
c2VydmljZSgnJXMnLCV4KSB1aWQ9JWQgLSBQRVJNSVNTSU9OIERFTklFRFxuIiwKICAgICAgICAgICAg
IHN0cjgocywgbGVuKSwgaGFuZGxlLCB1aWQpOwogICAgICAgIHJldHVybiAtMTsKICAgIH0KCiAgICBz
aSA9IGZpbmRfc3ZjKHMsIGxlbik7CiAgICBpZiAoc2kpIHsKICAgICAgICBpZiAoc2ktPmhhbmRsZSkg
ewogICAgICAgICAgICBBTE9HRSgiYWRkX3NlcnZpY2UoJyVzJywleCkgdWlkPSVkIC0gQUxSRUFEWSBS
RUdJU1RFUkVELCBPVkVSUklERVxuIiwKICAgICAgICAgICAgICAgICBzdHI4KHMsIGxlbiksIGhhbmRs
ZSwgdWlkKTsKICAgICAgICAgICAgc3ZjaW5mb19kZWF0aChicywgc2kpOwogICAgICAgIH0KICAgICAg
ICBzaS0+aGFuZGxlID0gaGFuZGxlOwogICAgfSBlbHNlIHsKICAgICAgICBzaSA9IG1hbGxvYyhzaXpl
b2YoKnNpKSArIChsZW4gKyAxKSAqIHNpemVvZih1aW50MTZfdCkpOwogICAgICAgIGlmICghc2kpIHsK
ICAgICAgICAgICAgQUxPR0UoImFkZF9zZXJ2aWNlKCclcycsJXgpIHVpZD0lZCAtIE9VVCBPRiBNRU1P
UllcbiIsCiAgICAgICAgICAgICAgICAgc3RyOChzLCBsZW4pLCBoYW5kbGUsIHVpZCk7CiAgICAgICAg
ICAgIHJldHVybiAtMTsKICAgICAgICB9CiAgICAgICAgc2ktPmhhbmRsZSA9IGhhbmRsZTsKICAgICAg
ICBzaS0+bGVuID0gbGVuOwogICAgICAgIG1lbWNweShzaS0+bmFtZSwgcywgKGxlbiArIDEpICogc2l6
ZW9mKHVpbnQxNl90KSk7CiAgICAgICAgc2ktPm5hbWVbbGVuXSA9ICdcMCc7CiAgICAgICAgc2ktPmRl
YXRoLmZ1bmMgPSAodm9pZCopIHN2Y2luZm9fZGVhdGg7CiAgICAgICAgc2ktPmRlYXRoLnB0ciA9IHNp
OwogICAgICAgIHNpLT5hbGxvd19pc29sYXRlZCA9IGFsbG93X2lzb2xhdGVkOwogICAgICAgIHNpLT5u
ZXh0ID0gc3ZjbGlzdDsKICAgICAgICBzdmNsaXN0ID0gc2k7CiAgICB9CgogICAgYmluZGVyX2FjcXVp
cmUoYnMsIGhhbmRsZSk7CiAgICBiaW5kZXJfbGlua190b19kZWF0aChicywgaGFuZGxlLCAmc2ktPmRl
YXRoKTsKICAgIHJldHVybiAwOwp9CgppbnQgc3ZjbWdyX2hhbmRsZXIoc3RydWN0IGJpbmRlcl9zdGF0
ZSAqYnMsCiAgICAgICAgICAgICAgICAgICBzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uX2RhdGEgKnR4
biwKICAgICAgICAgICAgICAgICAgIHN0cnVjdCBiaW5kZXJfaW8gKm1zZywKICAgICAgICAgICAgICAg
ICAgIHN0cnVjdCBiaW5kZXJfaW8gKnJlcGx5KQp7CiAgICBzdHJ1Y3Qgc3ZjaW5mbyAqc2k7CiAgICB1
aW50MTZfdCAqczsKICAgIHNpemVfdCBsZW47CiAgICB1aW50MzJfdCBoYW5kbGU7CiAgICB1aW50MzJf
dCBzdHJpY3RfcG9saWN5OwogICAgaW50IGFsbG93X2lzb2xhdGVkOwoKICAgIC8vQUxPR0koInRhcmdl
dD0leCBjb2RlPSVkIHBpZD0lZCB1aWQ9JWRcbiIsCiAgICAvLyAgdHhuLT50YXJnZXQuaGFuZGxlLCB0
eG4tPmNvZGUsIHR4bi0+c2VuZGVyX3BpZCwgdHhuLT5zZW5kZXJfZXVpZCk7CgogICAgaWYgKHR4bi0+
dGFyZ2V0LmhhbmRsZSAhPSBzdmNtZ3JfaGFuZGxlKQogICAgICAgIHJldHVybiAtMTsKCiAgICBpZiAo
dHhuLT5jb2RlID09IFBJTkdfVFJBTlNBQ1RJT04pCiAgICAgICAgcmV0dXJuIDA7CgogICAgLy8gRXF1
aXZhbGVudCB0byBQYXJjZWw6OmVuZm9yY2VJbnRlcmZhY2UoKSwgcmVhZGluZyB0aGUgUlBDCiAgICAv
LyBoZWFkZXIgd2l0aCB0aGUgc3RyaWN0IG1vZGUgcG9saWN5IG1hc2sgYW5kIHRoZSBpbnRlcmZhY2Ug
bmFtZS4KICAgIC8vIE5vdGUgdGhhdCB3ZSBpZ25vcmUgdGhlIHN0cmljdF9wb2xpY3kgYW5kIGRvbid0
IHByb3BhZ2F0ZSBpdAogICAgLy8gZnVydGhlciAoc2luY2Ugd2UgZG8gbm8gb3V0Ym91bmQgUlBDcyBh
bnl3YXkpLgogICAgc3RyaWN0X3BvbGljeSA9IGJpb19nZXRfdWludDMyKG1zZyk7CiAgICBzID0gYmlv
X2dldF9zdHJpbmcxNihtc2csICZsZW4pOwogICAgaWYgKHMgPT0gTlVMTCkgewogICAgICAgIHJldHVy
biAtMTsKICAgIH0KCiAgICBpZiAoKGxlbiAhPSAoc2l6ZW9mKHN2Y21ncl9pZCkgLyAyKSkgfHwKICAg
ICAgICBtZW1jbXAoc3ZjbWdyX2lkLCBzLCBzaXplb2Yoc3ZjbWdyX2lkKSkpIHsKICAgICAgICBmcHJp
bnRmKHN0ZGVyciwiaW52YWxpZCBpZCAlc1xuIiwgc3RyOChzLCBsZW4pKTsKICAgICAgICByZXR1cm4g
LTE7CiAgICB9CgogICAgaWYgKHNlaGFuZGxlICYmIHNlbGludXhfc3RhdHVzX3VwZGF0ZWQoKSA+IDAp
IHsKICAgICAgICBzdHJ1Y3Qgc2VsYWJlbF9oYW5kbGUgKnRtcF9zZWhhbmRsZSA9IHNlbGludXhfYW5k
cm9pZF9zZXJ2aWNlX2NvbnRleHRfaGFuZGxlKCk7CiAgICAgICAgaWYgKHRtcF9zZWhhbmRsZSkgewog
ICAgICAgICAgICBzZWxhYmVsX2Nsb3NlKHNlaGFuZGxlKTsKICAgICAgICAgICAgc2VoYW5kbGUgPSB0
bXBfc2VoYW5kbGU7CiAgICAgICAgfQogICAgfQoKICAgIHN3aXRjaCh0eG4tPmNvZGUpIHsKICAgIGNh
c2UgU1ZDX01HUl9HRVRfU0VSVklDRToKICAgIGNhc2UgU1ZDX01HUl9DSEVDS19TRVJWSUNFOgogICAg
ICAgIHMgPSBiaW9fZ2V0X3N0cmluZzE2KG1zZywgJmxlbik7CiAgICAgICAgaWYgKHMgPT0gTlVMTCkg
ewogICAgICAgICAgICByZXR1cm4gLTE7CiAgICAgICAgfQogICAgICAgIGhhbmRsZSA9IGRvX2ZpbmRf
c2VydmljZShicywgcywgbGVuLCB0eG4tPnNlbmRlcl9ldWlkLCB0eG4tPnNlbmRlcl9waWQpOwogICAg
ICAgIGlmICghaGFuZGxlKQogICAgICAgICAgICBicmVhazsKICAgICAgICBiaW9fcHV0X3JlZihyZXBs
eSwgaGFuZGxlKTsKICAgICAgICByZXR1cm4gMDsKCiAgICBjYXNlIFNWQ19NR1JfQUREX1NFUlZJQ0U6
CiAgICAgICAgcyA9IGJpb19nZXRfc3RyaW5nMTYobXNnLCAmbGVuKTsKICAgICAgICBpZiAocyA9PSBO
VUxMKSB7CiAgICAgICAgICAgIHJldHVybiAtMTsKICAgICAgICB9CiAgICAgICAgaGFuZGxlID0gYmlv
X2dldF9yZWYobXNnKTsKICAgICAgICBhbGxvd19pc29sYXRlZCA9IGJpb19nZXRfdWludDMyKG1zZykg
PyAxIDogMDsKICAgICAgICBpZiAoZG9fYWRkX3NlcnZpY2UoYnMsIHMsIGxlbiwgaGFuZGxlLCB0eG4t
PnNlbmRlcl9ldWlkLAogICAgICAgICAgICBhbGxvd19pc29sYXRlZCwgdHhuLT5zZW5kZXJfcGlkKSkK
ICAgICAgICAgICAgcmV0dXJuIC0xOwogICAgICAgIGJyZWFrOwoKICAgIGNhc2UgU1ZDX01HUl9MSVNU
X1NFUlZJQ0VTOiB7CiAgICAgICAgdWludDMyX3QgbiA9IGJpb19nZXRfdWludDMyKG1zZyk7CgogICAg
ICAgIGlmICghc3ZjX2Nhbl9saXN0KHR4bi0+c2VuZGVyX3BpZCkpIHsKICAgICAgICAgICAgQUxPR0Uo
Imxpc3Rfc2VydmljZSgpIHVpZD0lZCAtIFBFUk1JU1NJT04gREVOSUVEXG4iLAogICAgICAgICAgICAg
ICAgICAgIHR4bi0+c2VuZGVyX2V1aWQpOwogICAgICAgICAgICByZXR1cm4gLTE7CiAgICAgICAgfQog
ICAgICAgIHNpID0gc3ZjbGlzdDsKICAgICAgICB3aGlsZSAoKG4tLSA+IDApICYmIHNpKQogICAgICAg
ICAgICBzaSA9IHNpLT5uZXh0OwogICAgICAgIGlmIChzaSkgewogICAgICAgICAgICBiaW9fcHV0X3N0
cmluZzE2KHJlcGx5LCBzaS0+bmFtZSk7CiAgICAgICAgICAgIHJldHVybiAwOwogICAgICAgIH0KICAg
ICAgICByZXR1cm4gLTE7CiAgICB9CiAgICBkZWZhdWx0OgogICAgICAgIEFMT0dFKCJ1bmtub3duIGNv
ZGUgJWRcbiIsIHR4bi0+Y29kZSk7CiAgICAgICAgcmV0dXJuIC0xOwogICAgfQoKICAgIGJpb19wdXRf
dWludDMyKHJlcGx5LCAwKTsKICAgIHJldHVybiAwOwp9CgoKc3RhdGljIGludCBhdWRpdF9jYWxsYmFj
ayh2b2lkICpkYXRhLCBzZWN1cml0eV9jbGFzc190IGNscywgY2hhciAqYnVmLCBzaXplX3QgbGVuKQp7
CiAgICBzbnByaW50ZihidWYsIGxlbiwgInNlcnZpY2U9JXMiLCAhZGF0YSA/ICJOVUxMIiA6IChjaGFy
ICopZGF0YSk7CiAgICByZXR1cm4gMDsKfQoKaW50IG1haW4oaW50IGFyZ2MsIGNoYXIgKiphcmd2KQp7
CiAgICBzdHJ1Y3QgYmluZGVyX3N0YXRlICpiczsKCiAgICBicyA9IGJpbmRlcl9vcGVuKDEyOCoxMDI0
KTsKICAgIGlmICghYnMpIHsKICAgICAgICBBTE9HRSgiZmFpbGVkIHRvIG9wZW4gYmluZGVyIGRyaXZl
clxuIik7CiAgICAgICAgcmV0dXJuIC0xOwogICAgfQoKICAgIGlmIChiaW5kZXJfYmVjb21lX2NvbnRl
eHRfbWFuYWdlcihicykpIHsKICAgICAgICBBTE9HRSgiY2Fubm90IGJlY29tZSBjb250ZXh0IG1hbmFn
ZXIgKCVzKVxuIiwgc3RyZXJyb3IoZXJybm8pKTsKICAgICAgICByZXR1cm4gLTE7CiAgICB9CgogICAg
c2VsaW51eF9lbmFibGVkID0gaXNfc2VsaW51eF9lbmFibGVkKCk7CiAgICBzZWhhbmRsZSA9IHNlbGlu
dXhfYW5kcm9pZF9zZXJ2aWNlX2NvbnRleHRfaGFuZGxlKCk7CgogICAgaWYgKHNlbGludXhfZW5hYmxl
ZCA+IDApIHsKICAgICAgICBpZiAoc2VoYW5kbGUgPT0gTlVMTCkgewogICAgICAgICAgICBBTE9HRSgi
U0VMaW51eDogRmFpbGVkIHRvIGFjcXVpcmUgc2VoYW5kbGUuIEFib3J0aW5nLlxuIik7CiAgICAgICAg
ICAgIGFib3J0KCk7CiAgICAgICAgfQoKICAgICAgICBpZiAoZ2V0Y29uKCZzZXJ2aWNlX21hbmFnZXJf
Y29udGV4dCkgIT0gMCkgewogICAgICAgICAgICBBTE9HRSgiU0VMaW51eDogRmFpbGVkIHRvIGFjcXVp
cmUgc2VydmljZV9tYW5hZ2VyIGNvbnRleHQuIEFib3J0aW5nLlxuIik7CiAgICAgICAgICAgIGFib3J0
KCk7CiAgICAgICAgfQogICAgfQoKICAgIHVuaW9uIHNlbGludXhfY2FsbGJhY2sgY2I7CiAgICBjYi5m
dW5jX2F1ZGl0ID0gYXVkaXRfY2FsbGJhY2s7CiAgICBzZWxpbnV4X3NldF9jYWxsYmFjayhTRUxJTlVY
X0NCX0FVRElULCBjYik7CiAgICBjYi5mdW5jX2xvZyA9IHNlbGludXhfbG9nX2NhbGxiYWNrOwogICAg
c2VsaW51eF9zZXRfY2FsbGJhY2soU0VMSU5VWF9DQl9MT0csIGNiKTsKCiAgICBzdmNtZ3JfaGFuZGxl
ID0gQklOREVSX1NFUlZJQ0VfTUFOQUdFUjsKICAgIGJpbmRlcl9sb29wKGJzLCBzdmNtZ3JfaGFuZGxl
cik7CgogICAgcmV0dXJuIDA7Cn0K</data><mime>application/octet-stream</mime><width>0</width><height>0</height><duration>0</duration><resource-attributes><file-name>service_manager.c</file-name></resource-attributes></resource><resource><data encoding="base64">LyoKICogQ29weXJpZ2h0IChDKSAyMDA1IFRoZSBBbmRyb2lkIE9wZW4gU291cmNlIFByb2plY3QKICoK
ICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNl
bnNlIik7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0
aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAq
CiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVu
bGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29m
dHdhcmUKICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4g
IkFTIElTIiBCQVNJUywKICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJ
TkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNw
ZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKICogbGltaXRhdGlvbnMgdW5k
ZXIgdGhlIExpY2Vuc2UuCiAqLwoKI2lmbmRlZiBBTkRST0lEX0JQQklOREVSX0gKI2RlZmluZSBBTkRS
T0lEX0JQQklOREVSX0gKCiNpbmNsdWRlIDxiaW5kZXIvSUJpbmRlci5oPgojaW5jbHVkZSA8dXRpbHMv
S2V5ZWRWZWN0b3IuaD4KI2luY2x1ZGUgPHV0aWxzL3RocmVhZHMuaD4KCi8vIC0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LQpuYW1lc3BhY2UgYW5kcm9pZCB7CgpjbGFzcyBCcEJpbmRlciA6IHB1YmxpYyBJQmluZGVyCnsKcHVi
bGljOgogICAgICAgICAgICAgICAgICAgICAgICBCcEJpbmRlcihpbnQzMl90IGhhbmRsZSk7CgogICAg
aW5saW5lICBpbnQzMl90ICAgICBoYW5kbGUoKSBjb25zdCB7IHJldHVybiBtSGFuZGxlOyB9CgogICAg
dmlydHVhbCBjb25zdCBTdHJpbmcxNiYgICAgZ2V0SW50ZXJmYWNlRGVzY3JpcHRvcigpIGNvbnN0Owog
ICAgdmlydHVhbCBib29sICAgICAgICBpc0JpbmRlckFsaXZlKCkgY29uc3Q7CiAgICB2aXJ0dWFsIHN0
YXR1c190ICAgIHBpbmdCaW5kZXIoKTsKICAgIHZpcnR1YWwgc3RhdHVzX3QgICAgZHVtcChpbnQgZmQs
IGNvbnN0IFZlY3RvcjxTdHJpbmcxNj4mIGFyZ3MpOwoKICAgIHZpcnR1YWwgc3RhdHVzX3QgICAgdHJh
bnNhY3QoICAgdWludDMyX3QgY29kZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
Y29uc3QgUGFyY2VsJiBkYXRhLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQYXJj
ZWwqIHJlcGx5LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aW50MzJfdCBmbGFn
cyA9IDApOwoKICAgIHZpcnR1YWwgc3RhdHVzX3QgICAgbGlua1RvRGVhdGgoY29uc3Qgc3A8RGVhdGhS
ZWNpcGllbnQ+JiByZWNpcGllbnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZv
aWQqIGNvb2tpZSA9IE5VTEwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVpbnQz
Ml90IGZsYWdzID0gMCk7CiAgICB2aXJ0dWFsIHN0YXR1c190ICAgIHVubGlua1RvRGVhdGgoICBjb25z
dCB3cDxEZWF0aFJlY2lwaWVudD4mIHJlY2lwaWVudCwKICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIHZvaWQqIGNvb2tpZSA9IE5VTEwsCiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICB1aW50MzJfdCBmbGFncyA9IDAsCiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICB3cDxEZWF0aFJlY2lwaWVudD4qIG91dFJlY2lwaWVudCA9IE5VTEwpOwoKICAg
IHZpcnR1YWwgdm9pZCAgICAgICAgYXR0YWNoT2JqZWN0KCAgIGNvbnN0IHZvaWQqIG9iamVjdElELAog
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdm9pZCogb2JqZWN0LAogICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdm9pZCogY2xlYW51cENvb2tpZSwKICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdF9jbGVhbnVwX2Z1bmMgZnVuYyk7
CiAgICB2aXJ0dWFsIHZvaWQqICAgICAgIGZpbmRPYmplY3QoY29uc3Qgdm9pZCogb2JqZWN0SUQpIGNv
bnN0OwogICAgdmlydHVhbCB2b2lkICAgICAgICBkZXRhY2hPYmplY3QoY29uc3Qgdm9pZCogb2JqZWN0
SUQpOwoKICAgIHZpcnR1YWwgQnBCaW5kZXIqICAgcmVtb3RlQmluZGVyKCk7CgogICAgICAgICAgICBz
dGF0dXNfdCAgICBzZXRDb25zdGFudERhdGEoY29uc3Qgdm9pZCogZGF0YSwgc2l6ZV90IHNpemUpOwog
ICAgICAgICAgICB2b2lkICAgICAgICBzZW5kT2JpdHVhcnkoKTsKCiAgICBjbGFzcyBPYmplY3RNYW5h
Z2VyCiAgICB7CiAgICBwdWJsaWM6CiAgICAgICAgICAgICAgICAgICAgT2JqZWN0TWFuYWdlcigpOwog
ICAgICAgICAgICAgICAgICAgIH5PYmplY3RNYW5hZ2VyKCk7CgogICAgICAgIHZvaWQgICAgICAgIGF0
dGFjaCggY29uc3Qgdm9pZCogb2JqZWN0SUQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2b2lk
KiBvYmplY3QsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2b2lkKiBjbGVhbnVwQ29va2llLAog
ICAgICAgICAgICAgICAgICAgICAgICAgICAgSUJpbmRlcjo6b2JqZWN0X2NsZWFudXBfZnVuYyBmdW5j
KTsKICAgICAgICB2b2lkKiAgICAgICBmaW5kKGNvbnN0IHZvaWQqIG9iamVjdElEKSBjb25zdDsKICAg
ICAgICB2b2lkICAgICAgICBkZXRhY2goY29uc3Qgdm9pZCogb2JqZWN0SUQpOwoKICAgICAgICB2b2lk
ICAgICAgICBraWxsKCk7CgogICAgcHJpdmF0ZToKICAgICAgICAgICAgICAgICAgICBPYmplY3RNYW5h
Z2VyKGNvbnN0IE9iamVjdE1hbmFnZXImKTsKICAgICAgICBPYmplY3RNYW5hZ2VyJiBvcGVyYXRvcj0o
Y29uc3QgT2JqZWN0TWFuYWdlciYpOwoKICAgICAgICBzdHJ1Y3QgZW50cnlfdAogICAgICAgIHsKICAg
ICAgICAgICAgdm9pZCogb2JqZWN0OwogICAgICAgICAgICB2b2lkKiBjbGVhbnVwQ29va2llOwogICAg
ICAgICAgICBJQmluZGVyOjpvYmplY3RfY2xlYW51cF9mdW5jIGZ1bmM7CiAgICAgICAgfTsKCiAgICAg
ICAgS2V5ZWRWZWN0b3I8Y29uc3Qgdm9pZCosIGVudHJ5X3Q+IG1PYmplY3RzOwogICAgfTsKCnByb3Rl
Y3RlZDoKICAgIHZpcnR1YWwgICAgICAgICAgICAgfkJwQmluZGVyKCk7CiAgICB2aXJ0dWFsIHZvaWQg
ICAgICAgIG9uRmlyc3RSZWYoKTsKICAgIHZpcnR1YWwgdm9pZCAgICAgICAgb25MYXN0U3Ryb25nUmVm
KGNvbnN0IHZvaWQqIGlkKTsKICAgIHZpcnR1YWwgYm9vbCAgICAgICAgb25JbmNTdHJvbmdBdHRlbXB0
ZWQodWludDMyX3QgZmxhZ3MsIGNvbnN0IHZvaWQqIGlkKTsKCnByaXZhdGU6CiAgICBjb25zdCAgIGlu
dDMyX3QgICAgICAgICAgICAgbUhhbmRsZTsKCiAgICBzdHJ1Y3QgT2JpdHVhcnkgewogICAgICAgIHdw
PERlYXRoUmVjaXBpZW50PiByZWNpcGllbnQ7CiAgICAgICAgdm9pZCogY29va2llOwogICAgICAgIHVp
bnQzMl90IGZsYWdzOwogICAgfTsKCiAgICAgICAgICAgIHZvaWQgICAgICAgICAgICAgICAgcmVwb3J0
T25lRGVhdGgoY29uc3QgT2JpdHVhcnkmIG9iaXQpOwogICAgICAgICAgICBib29sICAgICAgICAgICAg
ICAgIGlzRGVzY3JpcHRvckNhY2hlZCgpIGNvbnN0OwoKICAgIG11dGFibGUgTXV0ZXggICAgICAgICAg
ICAgICBtTG9jazsKICAgICAgICAgICAgdm9sYXRpbGUgaW50MzJfdCAgICBtQWxpdmU7CiAgICAgICAg
ICAgIHZvbGF0aWxlIGludDMyX3QgICAgbU9iaXRzU2VudDsKICAgICAgICAgICAgVmVjdG9yPE9iaXR1
YXJ5PiogICBtT2JpdHVhcmllczsKICAgICAgICAgICAgT2JqZWN0TWFuYWdlciAgICAgICBtT2JqZWN0
czsKICAgICAgICAgICAgUGFyY2VsKiAgICAgICAgICAgICBtQ29uc3RhbnREYXRhOwogICAgbXV0YWJs
ZSBTdHJpbmcxNiAgICAgICAgICAgIG1EZXNjcmlwdG9yQ2FjaGU7Cn07Cgp9OyAvLyBuYW1lc3BhY2Ug
YW5kcm9pZAoKLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgojZW5kaWYgLy8gQU5EUk9JRF9CUEJJTkRFUl9ICg==
</data><mime>application/octet-stream</mime><width>0</width><height>0</height><duration>0</duration><resource-attributes><file-name>BpBinder.h</file-name></resource-attributes></resource><resource><data encoding="base64">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
A2OasbtxlnGF8Q0ToomjSbrJdpMOU9TUzjTVtNz0qhlqZm/GM9tu1jmJMMlpEn9SxaTb5lRzT/Nc82rz
bguGRYhFvkW9xavJ+pMTJq+f3Dr5q6WdZYblXsv7VkpWQVb5Vo1Wb6xNrdnW5dY3bGg2fjZLbBpsXtua
2XJtd9jesaPbTbVbYdds98XewV5oX2Pf56DvkOiwzeG2o7JjuONqx4tOBCcvpyVOTU4fne2dc5yPOP/l
Yu6S7nLA5fkUoyncKXun9LjqurJcd7t2uTHdEt12uXW567iz3CvcH3voeXA89nk88zTxTPM86PnKy9JL
6HXc6723s/ci7zM+mI+/T5FPu6+Sb7TvVt9Hfrp+KX7VfgP+dv4L/M8EEAKCA9YH3A7UDGQHVgUOBDkE
LQpqCaYGRwZvDX4cYhoiDGmcik4Nmrph6oNQg1B+aH0YCAsM2xD2MNwoPCv8t2nEaeHTyqc9jbCKWBjR
GkmPnB15IHIoyitqbdT9aONoUXRzjHzMjJiqmPexPrElsV1xk+MWxV2JV4/nxTckkBJiEvYlDE73nb5p
eu8MuxmFM27NNJo5b+alWeqzMmadnC0/mzX7aCIhMTbxQOJnVhirgjWYFJi0LWmA7c3ezH7J8eBs5PRx
Xbkl3GfJrsklyc9TXFM2pPSluqeWpvbzvHlbea/TAtJ2pr1PD0vfnz6SEZtRm0nOTMw8wVfip/Nb5mjN
mTenU2AmKBR0ZTlnbcoaEAYL92Uj2TOzG3KU4VGnTWQs+knUneuWW577YW7M3KPzFOfx57XNN52/av6z
PL+8XxbgC9gLmhfqLFy2sHuR56Ldi5HFSYubl+gtKVjSu9R/aeUyyrL0Zb/nW+aX5L9bHru8sUCzYGlB
z0/+P1UXyhUKC2+vcFmxcyW+kreyfZXNqi2rvhZxii4XWxaXFn9ezV59+Wern8t+HlmTvKZ9rf3aHeuI
6/jrbq13X19ZoliSV9KzYeqGuo3MjUUb322avelSqW3pzs2UzaLNXWUhZQ1b9Les2/J5a+rWm+Ve5bXb
NLat2vZ+O2f7tR0eO2p2au4s3vlpF2/Xnd3+u+sqDCtK9xD35O55ujdmb+svjr9U7VPfV7zvy37+/q7K
iMqWKoeqqgMaB9ZWo9Wi6r6DMw52HPI51FBjXrO7llFbfBgcFh1+8Wvir7eOBB9pPup4tOaYwbFtx+nH
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
Fji7nnZlC52JgAiIgAiIgAiIgAiIgAiIwPJCYHyIeApaCM8FjRXsCxd92ybZAohoIM5Cl/d2uxCmskVZ
C8dmn2Mf5df3euUu+tYXFVnMtuMp+DVxG6KbOwlSCrEKnYqxNAv7KMc2ehefZb7oq88JHxI3F09m/9nP
fmYv3+FltsKkzstHTulVfHAAnsy3PB72wbiir2oHEW+1LJ1TLnuI1aoAhgGH1k7VYRml6N+LSi/58sG8
LKu65nlEGFFF3ndQ+Nb+9NYAXoaWrYBPWNY9KS8CIiACIiACIiACIiACIiACyx+BThU4FuNzPUchNsWO
PPF06DusMEPkXXX55TiGMIzAkvhrQw1yezWP3A4er51jPoR/tOg60oYpxGjKFdl6deSz2SId2FUvP7UQ
ar5DnIaMZXXTZl/9Q2s8e017fM5KtttOuxZtuFuBEx1pVb8o9jZJGtNf1VfYRD+RL4+xY6Es6X2WJiN6
1y1uab5aHb8ETk5w3wQF/FBj0uJ2ofYiIAIiIAIiIAIiIAIiIAIiMGEIjL2IJyrfek0xiXCyKJvTfFaG
GCKzJkDr+j7yccyty0NVxMJXsWKeLEJQh9iu50s/i3iW46r77++te9yPP/64/e7+R+yAQ95hF110kW3y
6JO26qqr+op72pLePe3R3/8Ia/rEPfJxjLCfPmY9rwNiwlMMlERABERABERABERABERABETgGUdg7EV8
l+hO4nXWrFnDXoxeK7Rs0K98WGdLorJPx32KF6nHY445xo488iibPn1HW3vttV3IH3zwwTYwgHVp3ge/
FNKSjH9xwytuq1hcR2ovAiIgAiIgAiIgAiIgAiIgAhOUQCz3TtDwnzlh33DDDTZ//nzbcccdfdDbbbed
TZ482a6//vqlJuDHG92lNVEx3sapeERABERABERABERABERABESgH4EJK+K57txr7blfeT8AS6y8T8d9
ikfV7dDQkJ133nn2zne+05qVK3booYfa+eef7+J+VA5HYbwk4h9FdzIVAREQAREQAREQAREQAREQAREY
hkBFEg5jpaoxJXDZZZfZtGnTbMMNN0z3v+do1llnHeOK/CWXXDKm8alzERABERABERABERABERABERCB
ZUNg7O+JXzbjnNC9cBWe6XJ/Yn/nUHifONP+++/fWaGcCIiACIiACIiACIiACIiACIjAckdAIn4CXNLZ
s2d3RDlz5kyrl4WBHv4WJHQUAREQAREQAREQAREQAREQgeWPgLbTT8BrOtwD3oarm4BDVcgiIAIiIAIi
IAIiIAIiIAIiIAIVAhLxFRgT5TS20DPe6vlEiV9xioAIiIAIiIAIiIAIiIAIiIAILBoBifhF4zZuWsXK
u8T8uLkkCkQEREAEREAEREAEREAEREAElhoBifilhnbZOqaYl5BftszVmwiIgAiIgAiIgAiIgAiIgAgs
awIS8cua+FLsL1bll2IXci0CIiACIiACIiACIiACIiACIjCGBCTixxC+uhYBERABERABERABERABERAB
ERCB0RCQiB8NLdmKgAiIgAiIgAiIgAiIgAiIgAiIwBgSkIgfQ/jqWgREQAREQAREQAREQAREQAREQARG
Q0AifjS0ZCsCIiACIiACIiACIiACIiACIiACY0hAIn4M4atrERABERABERABERABERABERABERgNAYn4
0dCSrQiIgAiIgAiIgAiIgAiIgAiIgAiMIQGJ+DGEr65FQAREQAREQAREQAREQAREQAREYDQEJOJHQ0u2
IiACIiACIiACIiACIiACIiACIjCGBCTixxC+uhYBERABERABERABERABERABERCB0RCQiB8NLdmKgAiI
gAiIgAiIgAiIgAiIgAiIwBgSkIgfQ/jqWgREQAREQAREQAREQAREQAREQARGQ0AifjS0ZCsCIiACIiAC
IiACIiACIiACIiACY0hAIn4M4atrERABERABERABERABERABERABERgNAYn40dCSrQiIgAiIgAiIgAiI
gAiIgAiIgAiMIQGJ+DGEr65FQAREQAREQAREQAREQAREQAREYDQEJOJHQ0u2IiACIiACIiACIiACIiAC
IiACIjCGBCTixxC+uhYBERABERABERABERABERABERCB0RCQiB8NLdmKgAiIgAiIgAiIgAiIgAiIgAiI
wBgSkIgfQ/jqWgREQAREQAREQAREQAREQAREQARGQ0AifjS0ZCsCIiACIiACIiACIiACIiACIiACY0hA
In4M4atrERABERABERABERABERABERABERgNAYn40dCSrQiIgAiIgAiIgAiIgAiIgAiIgAiMIQGJ+DGE
r65FQAREQAREQAREQAREQAREQAREYDQExo2IbyNqfpSCQAsn/Iw21dvV88nf0uY9Wv+jtR8tlWesfQ1s
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
f3zgGt+ev/pGM23OvAF4fcp132RMCtx37802pfE3CPjcKbrOjzPgHQQ4xzMGcHvCeutvYff/7gZrDnCb
OFaRcf86V8/XX38DnzhogvO89nNt3Q02t/vuuwcTE6vbn34P+yYeTdh+vq22xnr2yMP3YHX8S/bxT5xp
e++zr731kINs002nws+grb7ai+2xP96I8eHWAHQc98r/139/w075+BlY7f9n2P8rdiJglRo7A1686qr2
x4du9d/F0/NXtg032Nj+8Pvf2ItfuJ79678dYieddBLqkgjmbQIveNEa9tifHrMXvmgVbJvnSjmmUeDn
l7fcZPvt90a78847Ie7XsMcfewLiflV77LEHbYWBx93uOc/f1P782N+wU2At++Of7rdJg0/YggUL7AWr
bGR/fnyOvfDFa2F1fR5EPa/7fBvEre9/fuwv9tznrGp//csfEcfjXs4dAvzMGxq097///Xb++Z+zJ554
2C762qX2Xxd81d7/gY/a6aeeYp/85El23c9/aIcc/EbEyGmeSNilMjQJ9/VviPgew7b9v6ZbUnCdTjvp
DNviZbtjImNFmzVrVjTQUQREQAREYBkTWPZ/31rGA1R3IiACE56A/ju19C7h4rDlIvT4SJWtwLz//bc3
fcVX3zfeZh+I95/ayu0/QSU+CQmHVVsI+BXbj3rc06aua08+ifvjcb8514SbA1wf5z3RWPpEijmKyHOV
2bhmj2OyKFde/c5s+Lntlz+2501+Cl5wnzueYL4AT7bnev4gXgdHscqG9Ju29rPA7P+97Z124L/+h71s
q6l2zFFH2PQZryv6TjGU/TAWbpC/89c32XMnY0y4B53itI0jY+J76925e05fbMNiCnhOXjAO2t79m2ts
xcl8+Bsfbsd7r3nvM+wYMEQi7fy1a4iX5RxjddqmheXmZrxbnAb0jW+O/d677rJnrwgRjzcAsGUT8UEZ
po7dlvY54bkF9NuAQA93UQVa5SnPYDs0L/Ub14WCn/eS87p4wj3tBx/0Jlt7nTXsZtyqcMj/O9Te8R/v
wnb2/b3aJw88BnxxFwAIHHzwftiqv6bdeNOvsYr/dqxyH24HYks508AA2fCJAQADe47vRz/6hv03bpHY
YYftXMy++c3/Yi/ZdAvnzDacrBloYLIIsRiek/DSbTaxJ/7+hF8rrwdc3sPOa+Lc8r4WxsYRDw3hqmJi
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
lR827JWrLx8gJYtxxNq4zT8tg3ENOUNT0eblyfgUtBsOFphR7Qxp2uxEua/Z/TJ81B9St1EXGTP2fvn3
leHPxvzy83fYa8ZReY5279F3ruaDtpWajEEHXdqWJB06tpFvV7wrDzz0mArRsX07XO1L28jFv/GaLZvq
tm1r9FMxvE9OBhZYxuecQ8Ah4BBwCOQzAuyYrb6Qz1k59gkiEO9lmWDy7MisbmQUGn3rmiR+BUfvrWaR
HcfIeMs/ZGhHRifkszziEYfiKWc+45WtDPEICkG4wamQP+AFVH+FoHqcCPmMQKEb3tJHMat+Nc8fBuZY
AB0ARx7xY1H9xeVLgdJw9punva9dv1n9DeuWgqHJz7GYuNff+Vg+/GyeGu1dOzTXmV9EqaNR37plQ9my
eSdmlGvCkDez4EzLfV6nDGiqeb76ygxZtXqNVK3ZTs444ww1frt2aKx5fPDxXHl31hdRpiplo9n74/rt
KlflypUj5KcAzIf7xsy+Nu6Bo2FtVg0wnuX+Yf025X3MMVVC6bl87ZILzhJsY5e7Jt2rGFxw/tkq82kD
uyjf6dOny7Llq6Vi5cZyyqmngWt4kRk7c9r2PJimdcdeUqZSW/l66WrZshXr/eFq1iivxvppp7TTPF9+
5VVZsfJ7KVexsZx88iClsX+SICPlSUrCoXidOmpZP8Bnb+i6duGgiL/NZEr3Lu11Vn3BV6uldNlW0rFz
Lx28GHRKD62jadOmyfIVq+XoMsfLSX37gwtG8f0slHP2f8IvdtDa9Hn+TFAO1iJ/eejyRc48lM+xcgjk
BAH/qGVO0hUFWnZOuemgosqWD/1IVB4uIMcI8N1h3x85TpxVAg5uRw9wZ5UiVlyo+XFGnLPqlJVL3kMO
7/0sn7/s2p2V015DjPWGrLNkH0kOXyC/hN91Jn/qfTGdn4//PibxoRho6y+Af6GFohDLmVD78tprjp+P
QlshRV6wwjETH+wt4/RnUWj7rd+oyOwDzCgq6GI03pCxlD2bPKPg3iruH2OlsGh1arfArLNI3ZrF5c7x
oxFOY9i4hQsXyvQX35dWjcvL3WNHIg6HpHhxNKB7dGwpS+Ytl56dWmOn+m4sCjeOs+7jbh8hqcXul9HY
S0+oe3SpjU+ojFFj+94Jt8ngiy6Vyy8bgdny7jiIxbgUH/8UnBh75x03ychb7pbnn3xI5WXePEmW9JRR
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
TkSuQmCC</data><mime>image/png</mime><width>1009</width><height>574</height><duration>0</duration><resource-attributes/></resource><resource><data encoding="base64">LyoKKiogQ29weXJpZ2h0IDIwMTAsIFRoZSBBbmRyb2lkIE9wZW4gU291cmNlIFByb2plY3QKKioKKiog
TGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNl
Iik7CioqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0
aGUgTGljZW5zZS4KKiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CioqCioq
ICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKKioKKiogVW5sZXNz
IHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2Fy
ZQoqKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMg
SVMiIEJBU0lTLAoqKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwg
ZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KKiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lm
aWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAoqKiBsaW1pdGF0aW9ucyB1bmRlciB0
aGUgTGljZW5zZS4KKi8KCi8vI2RlZmluZSBMT0dfTkRFQlVHIDAKI2RlZmluZSBMT0dfVEFHICJJTWVk
aWFEZWF0aE5vdGlmaWVyIgojaW5jbHVkZSA8dXRpbHMvTG9nLmg+CgojaW5jbHVkZSA8YmluZGVyL0lT
ZXJ2aWNlTWFuYWdlci5oPgojaW5jbHVkZSA8YmluZGVyL0lQQ1RocmVhZFN0YXRlLmg+CiNpbmNsdWRl
IDxtZWRpYS9JTWVkaWFEZWF0aE5vdGlmaWVyLmg+CgpuYW1lc3BhY2UgYW5kcm9pZCB7CgovLyBjbGll
bnQgc2luZ2xldG9uIGZvciBiaW5kZXIgaW50ZXJmYWNlIHRvIHNlcnZpY2VzCk11dGV4IElNZWRpYURl
YXRoTm90aWZpZXI6OnNTZXJ2aWNlTG9jazsKc3A8SU1lZGlhUGxheWVyU2VydmljZT4gSU1lZGlhRGVh
dGhOb3RpZmllcjo6c01lZGlhUGxheWVyU2VydmljZTsKc3A8SU1lZGlhRGVhdGhOb3RpZmllcjo6RGVh
dGhOb3RpZmllcj4gSU1lZGlhRGVhdGhOb3RpZmllcjo6c0RlYXRoTm90aWZpZXI7ClNvcnRlZFZlY3Rv
cjwgd3A8SU1lZGlhRGVhdGhOb3RpZmllcj4gPiBJTWVkaWFEZWF0aE5vdGlmaWVyOjpzT2JpdFJlY2lw
aWVudHM7CgovLyBlc3RhYmxpc2ggYmluZGVyIGludGVyZmFjZSB0byBNZWRpYVBsYXllclNlcnZpY2UK
LypzdGF0aWMqL2NvbnN0IHNwPElNZWRpYVBsYXllclNlcnZpY2U+JgpJTWVkaWFEZWF0aE5vdGlmaWVy
OjpnZXRNZWRpYVBsYXllclNlcnZpY2UoKQp7CiAgICBBTE9HVigiZ2V0TWVkaWFQbGF5ZXJTZXJ2aWNl
Iik7CiAgICBNdXRleDo6QXV0b2xvY2sgX2woc1NlcnZpY2VMb2NrKTsKICAgIGlmIChzTWVkaWFQbGF5
ZXJTZXJ2aWNlID09IDApIHsKICAgICAgICBzcDxJU2VydmljZU1hbmFnZXI+IHNtID0gZGVmYXVsdFNl
cnZpY2VNYW5hZ2VyKCk7CiAgICAgICAgc3A8SUJpbmRlcj4gYmluZGVyOwogICAgICAgIGRvIHsKICAg
ICAgICAgICAgYmluZGVyID0gc20tPmdldFNlcnZpY2UoU3RyaW5nMTYoIm1lZGlhLnBsYXllciIpKTsK
ICAgICAgICAgICAgaWYgKGJpbmRlciAhPSAwKSB7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAg
ICAgICAgfQogICAgICAgICAgICBBTE9HVygiTWVkaWEgcGxheWVyIHNlcnZpY2Ugbm90IHB1Ymxpc2hl
ZCwgd2FpdGluZy4uLiIpOwogICAgICAgICAgICB1c2xlZXAoNTAwMDAwKTsgLy8gMC41IHMKICAgICAg
ICB9IHdoaWxlICh0cnVlKTsKCiAgICAgICAgaWYgKHNEZWF0aE5vdGlmaWVyID09IE5VTEwpIHsKICAg
ICAgICAgICAgc0RlYXRoTm90aWZpZXIgPSBuZXcgRGVhdGhOb3RpZmllcigpOwogICAgICAgIH0KICAg
ICAgICBiaW5kZXItPmxpbmtUb0RlYXRoKHNEZWF0aE5vdGlmaWVyKTsKICAgICAgICBzTWVkaWFQbGF5
ZXJTZXJ2aWNlID0gaW50ZXJmYWNlX2Nhc3Q8SU1lZGlhUGxheWVyU2VydmljZT4oYmluZGVyKTsKICAg
IH0KICAgIEFMT0dFX0lGKHNNZWRpYVBsYXllclNlcnZpY2UgPT0gMCwgIm5vIG1lZGlhIHBsYXllciBz
ZXJ2aWNlIT8iKTsKICAgIHJldHVybiBzTWVkaWFQbGF5ZXJTZXJ2aWNlOwp9CgovKnN0YXRpYyovIHZv
aWQKSU1lZGlhRGVhdGhOb3RpZmllcjo6YWRkT2JpdFJlY2lwaWVudChjb25zdCB3cDxJTWVkaWFEZWF0
aE5vdGlmaWVyPiYgcmVjaXBpZW50KQp7CiAgICBBTE9HVigiYWRkT2JpdFJlY2lwaWVudCIpOwogICAg
TXV0ZXg6OkF1dG9sb2NrIF9sKHNTZXJ2aWNlTG9jayk7CiAgICBzT2JpdFJlY2lwaWVudHMuYWRkKHJl
Y2lwaWVudCk7Cn0KCi8qc3RhdGljKi8gdm9pZApJTWVkaWFEZWF0aE5vdGlmaWVyOjpyZW1vdmVPYml0
UmVjaXBpZW50KGNvbnN0IHdwPElNZWRpYURlYXRoTm90aWZpZXI+JiByZWNpcGllbnQpCnsKICAgIEFM
T0dWKCJyZW1vdmVPYml0UmVjaXBpZW50Iik7CiAgICBNdXRleDo6QXV0b2xvY2sgX2woc1NlcnZpY2VM
b2NrKTsKICAgIHNPYml0UmVjaXBpZW50cy5yZW1vdmUocmVjaXBpZW50KTsKfQoKdm9pZApJTWVkaWFE
ZWF0aE5vdGlmaWVyOjpEZWF0aE5vdGlmaWVyOjpiaW5kZXJEaWVkKGNvbnN0IHdwPElCaW5kZXI+JiB3
aG8gX191bnVzZWQpIHsKICAgIEFMT0dXKCJtZWRpYSBzZXJ2ZXIgZGllZCIpOwoKICAgIC8vIE5lZWQg
dG8gZG8gdGhpcyB3aXRoIHRoZSBsb2NrIGhlbGQKICAgIFNvcnRlZFZlY3Rvcjwgd3A8SU1lZGlhRGVh
dGhOb3RpZmllcj4gPiBsaXN0OwogICAgewogICAgICAgIE11dGV4OjpBdXRvbG9jayBfbChzU2Vydmlj
ZUxvY2spOwogICAgICAgIHNNZWRpYVBsYXllclNlcnZpY2UuY2xlYXIoKTsKICAgICAgICBsaXN0ID0g
c09iaXRSZWNpcGllbnRzOwogICAgfQoKICAgIC8vIE5vdGlmeSBhcHBsaWNhdGlvbiB3aGVuIG1lZGlh
IHNlcnZlciBkaWVzLgogICAgLy8gRG9uJ3QgaG9sZCB0aGUgc3RhdGljIGxvY2sgZHVyaW5nIGNhbGxi
YWNrIGluIGNhc2UgYXBwCiAgICAvLyBtYWtlcyBhIGNhbGwgdGhhdCBuZWVkcyB0aGUgbG9jay4KICAg
IHNpemVfdCBjb3VudCA9IGxpc3Quc2l6ZSgpOwogICAgZm9yIChzaXplX3QgaXRlciA9IDA7IGl0ZXIg
PCBjb3VudDsgKytpdGVyKSB7CiAgICAgICAgc3A8SU1lZGlhRGVhdGhOb3RpZmllcj4gbm90aWZpZXIg
PSBsaXN0W2l0ZXJdLnByb21vdGUoKTsKICAgICAgICBpZiAobm90aWZpZXIgIT0gMCkgewogICAgICAg
ICAgICBub3RpZmllci0+ZGllZCgpOwogICAgICAgIH0KICAgIH0KfQoKSU1lZGlhRGVhdGhOb3RpZmll
cjo6RGVhdGhOb3RpZmllcjo6fkRlYXRoTm90aWZpZXIoKQp7CiAgICBBTE9HVigiRGVhdGhOb3RpZmll
cjo6fkRlYXRoTm90aWZpZXIiKTsKICAgIE11dGV4OjpBdXRvbG9jayBfbChzU2VydmljZUxvY2spOwog
ICAgc09iaXRSZWNpcGllbnRzLmNsZWFyKCk7CiAgICBpZiAoc01lZGlhUGxheWVyU2VydmljZSAhPSAw
KSB7CiAgICAgICAgc01lZGlhUGxheWVyU2VydmljZS0+YXNCaW5kZXIoKS0+dW5saW5rVG9EZWF0aCh0
aGlzKTsKICAgIH0KfQoKfTsgLy8gbmFtZXNwYWNlIGFuZHJvaWQK</data><mime>application/octet-stream</mime><width>0</width><height>0</height><duration>0</duration><resource-attributes><file-name>IMediaDeathNotifier.cpp</file-name></resource-attributes></resource><resource><data encoding="base64">LyoKKioKKiogQ29weXJpZ2h0IDIwMDYsIFRoZSBBbmRyb2lkIE9wZW4gU291cmNlIFByb2plY3QKKioK
KiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNl
bnNlIik7CioqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0
aCB0aGUgTGljZW5zZS4KKiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0Cioq
CioqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKKioKKiogVW5s
ZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0
d2FyZQoqKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAi
QVMgSVMiIEJBU0lTLAoqKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lO
RCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KKiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3Bl
Y2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAoqKiBsaW1pdGF0aW9ucyB1bmRl
ciB0aGUgTGljZW5zZS4KKi8KCi8vI2RlZmluZSBMT0dfTkRFQlVHIDAKI2RlZmluZSBMT0dfVEFHICJN
ZWRpYVBsYXllciIKCiNpbmNsdWRlIDxmY250bC5oPgojaW5jbHVkZSA8aW50dHlwZXMuaD4KI2luY2x1
ZGUgPHN5cy9zdGF0Lmg+CiNpbmNsdWRlIDxzeXMvdHlwZXMuaD4KI2luY2x1ZGUgPHVuaXN0ZC5oPgoK
I2luY2x1ZGUgPHV0aWxzL0xvZy5oPgoKI2luY2x1ZGUgPGJpbmRlci9JU2VydmljZU1hbmFnZXIuaD4K
I2luY2x1ZGUgPGJpbmRlci9JUENUaHJlYWRTdGF0ZS5oPgoKI2luY2x1ZGUgPGd1aS9TdXJmYWNlLmg+
CgojaW5jbHVkZSA8bWVkaWEvbWVkaWFwbGF5ZXIuaD4KI2luY2x1ZGUgPG1lZGlhL0F1ZGlvU3lzdGVt
Lmg+CgojaW5jbHVkZSA8YmluZGVyL01lbW9yeUJhc2UuaD4KCiNpbmNsdWRlIDx1dGlscy9LZXllZFZl
Y3Rvci5oPgojaW5jbHVkZSA8dXRpbHMvU3RyaW5nOC5oPgoKI2luY2x1ZGUgPHN5c3RlbS9hdWRpby5o
PgojaW5jbHVkZSA8c3lzdGVtL3dpbmRvdy5oPgoKbmFtZXNwYWNlIGFuZHJvaWQgewoKTWVkaWFQbGF5
ZXI6Ok1lZGlhUGxheWVyKCkKewogICAgQUxPR1YoImNvbnN0cnVjdG9yIik7CiAgICBtTGlzdGVuZXIg
PSBOVUxMOwogICAgbUNvb2tpZSA9IE5VTEw7CiAgICBtU3RyZWFtVHlwZSA9IEFVRElPX1NUUkVBTV9N
VVNJQzsKICAgIG1BdWRpb0F0dHJpYnV0ZXNQYXJjZWwgPSBOVUxMOwogICAgbUN1cnJlbnRQb3NpdGlv
biA9IC0xOwogICAgbVNlZWtQb3NpdGlvbiA9IC0xOwogICAgbUN1cnJlbnRTdGF0ZSA9IE1FRElBX1BM
QVlFUl9JRExFOwogICAgbVByZXBhcmVTeW5jID0gZmFsc2U7CiAgICBtUHJlcGFyZVN0YXR1cyA9IE5P
X0VSUk9SOwogICAgbUxvb3AgPSBmYWxzZTsKICAgIG1MZWZ0Vm9sdW1lID0gbVJpZ2h0Vm9sdW1lID0g
MS4wOwogICAgbVZpZGVvV2lkdGggPSBtVmlkZW9IZWlnaHQgPSAwOwogICAgbUxvY2tUaHJlYWRJZCA9
IDA7CiAgICBtQXVkaW9TZXNzaW9uSWQgPSBBdWRpb1N5c3RlbTo6bmV3QXVkaW9VbmlxdWVJZCgpOwog
ICAgQXVkaW9TeXN0ZW06OmFjcXVpcmVBdWRpb1Nlc3Npb25JZChtQXVkaW9TZXNzaW9uSWQsIC0xKTsK
ICAgIG1TZW5kTGV2ZWwgPSAwOwogICAgbVJldHJhbnNtaXRFbmRwb2ludFZhbGlkID0gZmFsc2U7Cn0K
Ck1lZGlhUGxheWVyOjp+TWVkaWFQbGF5ZXIoKQp7CiAgICBBTE9HVigiZGVzdHJ1Y3RvciIpOwogICAg
aWYgKG1BdWRpb0F0dHJpYnV0ZXNQYXJjZWwgIT0gTlVMTCkgewogICAgICAgIGRlbGV0ZSBtQXVkaW9B
dHRyaWJ1dGVzUGFyY2VsOwogICAgICAgIG1BdWRpb0F0dHJpYnV0ZXNQYXJjZWwgPSBOVUxMOwogICAg
fQogICAgQXVkaW9TeXN0ZW06OnJlbGVhc2VBdWRpb1Nlc3Npb25JZChtQXVkaW9TZXNzaW9uSWQsIC0x
KTsKICAgIGRpc2Nvbm5lY3QoKTsKICAgIElQQ1RocmVhZFN0YXRlOjpzZWxmKCktPmZsdXNoQ29tbWFu
ZHMoKTsKfQoKdm9pZCBNZWRpYVBsYXllcjo6ZGlzY29ubmVjdCgpCnsKICAgIEFMT0dWKCJkaXNjb25u
ZWN0Iik7CiAgICBzcDxJTWVkaWFQbGF5ZXI+IHA7CiAgICB7CiAgICAgICAgTXV0ZXg6OkF1dG9sb2Nr
IF9sKG1Mb2NrKTsKICAgICAgICBwID0gbVBsYXllcjsKICAgICAgICBtUGxheWVyLmNsZWFyKCk7CiAg
ICB9CgogICAgaWYgKHAgIT0gMCkgewogICAgICAgIHAtPmRpc2Nvbm5lY3QoKTsKICAgIH0KfQoKLy8g
YWx3YXlzIGNhbGwgd2l0aCBsb2NrIGhlbGQKdm9pZCBNZWRpYVBsYXllcjo6Y2xlYXJfbCgpCnsKICAg
IG1DdXJyZW50UG9zaXRpb24gPSAtMTsKICAgIG1TZWVrUG9zaXRpb24gPSAtMTsKICAgIG1WaWRlb1dp
ZHRoID0gbVZpZGVvSGVpZ2h0ID0gMDsKICAgIG1SZXRyYW5zbWl0RW5kcG9pbnRWYWxpZCA9IGZhbHNl
Owp9CgpzdGF0dXNfdCBNZWRpYVBsYXllcjo6c2V0TGlzdGVuZXIoY29uc3Qgc3A8TWVkaWFQbGF5ZXJM
aXN0ZW5lcj4mIGxpc3RlbmVyKQp7CiAgICBBTE9HVigic2V0TGlzdGVuZXIiKTsKICAgIE11dGV4OjpB
dXRvbG9jayBfbChtTG9jayk7CiAgICBtTGlzdGVuZXIgPSBsaXN0ZW5lcjsKICAgIHJldHVybiBOT19F
UlJPUjsKfQoKCnN0YXR1c190IE1lZGlhUGxheWVyOjphdHRhY2hOZXdQbGF5ZXIoY29uc3Qgc3A8SU1l
ZGlhUGxheWVyPiYgcGxheWVyKQp7CiAgICBzdGF0dXNfdCBlcnIgPSBVTktOT1dOX0VSUk9SOwogICAg
c3A8SU1lZGlhUGxheWVyPiBwOwogICAgeyAvLyBzY29wZSBmb3IgdGhlIGxvY2sKICAgICAgICBNdXRl
eDo6QXV0b2xvY2sgX2wobUxvY2spOwoKICAgICAgICBpZiAoICEoIChtQ3VycmVudFN0YXRlICYgTUVE
SUFfUExBWUVSX0lETEUpIHx8CiAgICAgICAgICAgICAgICAobUN1cnJlbnRTdGF0ZSA9PSBNRURJQV9Q
TEFZRVJfU1RBVEVfRVJST1IgKSApICkgewogICAgICAgICAgICBBTE9HRSgiYXR0YWNoTmV3UGxheWVy
IGNhbGxlZCBpbiBzdGF0ZSAlZCIsIG1DdXJyZW50U3RhdGUpOwogICAgICAgICAgICByZXR1cm4gSU5W
QUxJRF9PUEVSQVRJT047CiAgICAgICAgfQoKICAgICAgICBjbGVhcl9sKCk7CiAgICAgICAgcCA9IG1Q
bGF5ZXI7CiAgICAgICAgbVBsYXllciA9IHBsYXllcjsKICAgICAgICBpZiAocGxheWVyICE9IDApIHsK
ICAgICAgICAgICAgbUN1cnJlbnRTdGF0ZSA9IE1FRElBX1BMQVlFUl9JTklUSUFMSVpFRDsKICAgICAg
ICAgICAgZXJyID0gTk9fRVJST1I7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgQUxPR0UoIlVu
YWJsZSB0byBjcmVhdGUgbWVkaWEgcGxheWVyIik7CiAgICAgICAgfQogICAgfQoKICAgIGlmIChwICE9
IDApIHsKICAgICAgICBwLT5kaXNjb25uZWN0KCk7CiAgICB9CgogICAgcmV0dXJuIGVycjsKfQoKc3Rh
dHVzX3QgTWVkaWFQbGF5ZXI6OnNldERhdGFTb3VyY2UoCiAgICAgICAgY29uc3Qgc3A8SU1lZGlhSFRU
UFNlcnZpY2U+ICZodHRwU2VydmljZSwKICAgICAgICBjb25zdCBjaGFyICp1cmwsIGNvbnN0IEtleWVk
VmVjdG9yPFN0cmluZzgsIFN0cmluZzg+ICpoZWFkZXJzKQp7CiAgICBBTE9HVigic2V0RGF0YVNvdXJj
ZSglcykiLCB1cmwpOwogICAgc3RhdHVzX3QgZXJyID0gQkFEX1ZBTFVFOwogICAgaWYgKHVybCAhPSBO
VUxMKSB7CiAgICAgICAgY29uc3Qgc3A8SU1lZGlhUGxheWVyU2VydmljZT4mIHNlcnZpY2UoZ2V0TWVk
aWFQbGF5ZXJTZXJ2aWNlKCkpOwogICAgICAgIGlmIChzZXJ2aWNlICE9IDApIHsKICAgICAgICAgICAg
c3A8SU1lZGlhUGxheWVyPiBwbGF5ZXIoc2VydmljZS0+Y3JlYXRlKHRoaXMsIG1BdWRpb1Nlc3Npb25J
ZCkpOwogICAgICAgICAgICBpZiAoKE5PX0VSUk9SICE9IGRvU2V0UmV0cmFuc21pdEVuZHBvaW50KHBs
YXllcikpIHx8CiAgICAgICAgICAgICAgICAoTk9fRVJST1IgIT0gcGxheWVyLT5zZXREYXRhU291cmNl
KGh0dHBTZXJ2aWNlLCB1cmwsIGhlYWRlcnMpKSkgewogICAgICAgICAgICAgICAgcGxheWVyLmNsZWFy
KCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZXJyID0gYXR0YWNoTmV3UGxheWVyKHBsYXllcik7
CiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIGVycjsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXI6OnNl
dERhdGFTb3VyY2UoaW50IGZkLCBpbnQ2NF90IG9mZnNldCwgaW50NjRfdCBsZW5ndGgpCnsKICAgIEFM
T0dWKCJzZXREYXRhU291cmNlKCVkLCAlIiBQUklkNjQgIiwgJSIgUFJJZDY0ICIpIiwgZmQsIG9mZnNl
dCwgbGVuZ3RoKTsKICAgIHN0YXR1c190IGVyciA9IFVOS05PV05fRVJST1I7CiAgICBjb25zdCBzcDxJ
TWVkaWFQbGF5ZXJTZXJ2aWNlPiYgc2VydmljZShnZXRNZWRpYVBsYXllclNlcnZpY2UoKSk7CiAgICBp
ZiAoc2VydmljZSAhPSAwKSB7CiAgICAgICAgc3A8SU1lZGlhUGxheWVyPiBwbGF5ZXIoc2VydmljZS0+
Y3JlYXRlKHRoaXMsIG1BdWRpb1Nlc3Npb25JZCkpOwogICAgICAgIGlmICgoTk9fRVJST1IgIT0gZG9T
ZXRSZXRyYW5zbWl0RW5kcG9pbnQocGxheWVyKSkgfHwKICAgICAgICAgICAgKE5PX0VSUk9SICE9IHBs
YXllci0+c2V0RGF0YVNvdXJjZShmZCwgb2Zmc2V0LCBsZW5ndGgpKSkgewogICAgICAgICAgICBwbGF5
ZXIuY2xlYXIoKTsKICAgICAgICB9CiAgICAgICAgZXJyID0gYXR0YWNoTmV3UGxheWVyKHBsYXllcik7
CiAgICB9CiAgICByZXR1cm4gZXJyOwp9CgpzdGF0dXNfdCBNZWRpYVBsYXllcjo6c2V0RGF0YVNvdXJj
ZShjb25zdCBzcDxJU3RyZWFtU291cmNlPiAmc291cmNlKQp7CiAgICBBTE9HVigic2V0RGF0YVNvdXJj
ZSIpOwogICAgc3RhdHVzX3QgZXJyID0gVU5LTk9XTl9FUlJPUjsKICAgIGNvbnN0IHNwPElNZWRpYVBs
YXllclNlcnZpY2U+JiBzZXJ2aWNlKGdldE1lZGlhUGxheWVyU2VydmljZSgpKTsKICAgIGlmIChzZXJ2
aWNlICE9IDApIHsKICAgICAgICBzcDxJTWVkaWFQbGF5ZXI+IHBsYXllcihzZXJ2aWNlLT5jcmVhdGUo
dGhpcywgbUF1ZGlvU2Vzc2lvbklkKSk7CiAgICAgICAgaWYgKChOT19FUlJPUiAhPSBkb1NldFJldHJh
bnNtaXRFbmRwb2ludChwbGF5ZXIpKSB8fAogICAgICAgICAgICAoTk9fRVJST1IgIT0gcGxheWVyLT5z
ZXREYXRhU291cmNlKHNvdXJjZSkpKSB7CiAgICAgICAgICAgIHBsYXllci5jbGVhcigpOwogICAgICAg
IH0KICAgICAgICBlcnIgPSBhdHRhY2hOZXdQbGF5ZXIocGxheWVyKTsKICAgIH0KICAgIHJldHVybiBl
cnI7Cn0KCnN0YXR1c190IE1lZGlhUGxheWVyOjppbnZva2UoY29uc3QgUGFyY2VsJiByZXF1ZXN0LCBQ
YXJjZWwgKnJlcGx5KQp7CiAgICBNdXRleDo6QXV0b2xvY2sgX2wobUxvY2spOwogICAgY29uc3QgYm9v
bCBoYXNCZWVuSW5pdGlhbGl6ZWQgPQogICAgICAgICAgICAobUN1cnJlbnRTdGF0ZSAhPSBNRURJQV9Q
TEFZRVJfU1RBVEVfRVJST1IpICYmCiAgICAgICAgICAgICgobUN1cnJlbnRTdGF0ZSAmIE1FRElBX1BM
QVlFUl9JRExFKSAhPSBNRURJQV9QTEFZRVJfSURMRSk7CiAgICBpZiAoKG1QbGF5ZXIgIT0gTlVMTCkg
JiYgaGFzQmVlbkluaXRpYWxpemVkKSB7CiAgICAgICAgQUxPR1YoImludm9rZSAlenUiLCByZXF1ZXN0
LmRhdGFTaXplKCkpOwogICAgICAgIHJldHVybiAgbVBsYXllci0+aW52b2tlKHJlcXVlc3QsIHJlcGx5
KTsKICAgIH0KICAgIEFMT0dFKCJpbnZva2UgZmFpbGVkOiB3cm9uZyBzdGF0ZSAlWCIsIG1DdXJyZW50
U3RhdGUpOwogICAgcmV0dXJuIElOVkFMSURfT1BFUkFUSU9OOwp9CgpzdGF0dXNfdCBNZWRpYVBsYXll
cjo6c2V0TWV0YWRhdGFGaWx0ZXIoY29uc3QgUGFyY2VsJiBmaWx0ZXIpCnsKICAgIEFMT0dEKCJzZXRN
ZXRhZGF0YUZpbHRlciIpOwogICAgTXV0ZXg6OkF1dG9sb2NrIGxvY2sobUxvY2spOwogICAgaWYgKG1Q
bGF5ZXIgPT0gTlVMTCkgewogICAgICAgIHJldHVybiBOT19JTklUOwogICAgfQogICAgcmV0dXJuIG1Q
bGF5ZXItPnNldE1ldGFkYXRhRmlsdGVyKGZpbHRlcik7Cn0KCnN0YXR1c190IE1lZGlhUGxheWVyOjpn
ZXRNZXRhZGF0YShib29sIHVwZGF0ZV9vbmx5LCBib29sIGFwcGx5X2ZpbHRlciwgUGFyY2VsICptZXRh
ZGF0YSkKewogICAgQUxPR0QoImdldE1ldGFkYXRhIik7CiAgICBNdXRleDo6QXV0b2xvY2sgbG9jayht
TG9jayk7CiAgICBpZiAobVBsYXllciA9PSBOVUxMKSB7CiAgICAgICAgcmV0dXJuIE5PX0lOSVQ7CiAg
ICB9CiAgICByZXR1cm4gbVBsYXllci0+Z2V0TWV0YWRhdGEodXBkYXRlX29ubHksIGFwcGx5X2ZpbHRl
ciwgbWV0YWRhdGEpOwp9CgpzdGF0dXNfdCBNZWRpYVBsYXllcjo6c2V0VmlkZW9TdXJmYWNlVGV4dHVy
ZSgKICAgICAgICBjb25zdCBzcDxJR3JhcGhpY0J1ZmZlclByb2R1Y2VyPiYgYnVmZmVyUHJvZHVjZXIp
CnsKICAgIEFMT0dWKCJzZXRWaWRlb1N1cmZhY2VUZXh0dXJlIik7CiAgICBNdXRleDo6QXV0b2xvY2sg
X2wobUxvY2spOwogICAgaWYgKG1QbGF5ZXIgPT0gMCkgcmV0dXJuIE5PX0lOSVQ7CiAgICByZXR1cm4g
bVBsYXllci0+c2V0VmlkZW9TdXJmYWNlVGV4dHVyZShidWZmZXJQcm9kdWNlcik7Cn0KCi8vIG11c3Qg
Y2FsbCB3aXRoIGxvY2sgaGVsZApzdGF0dXNfdCBNZWRpYVBsYXllcjo6cHJlcGFyZUFzeW5jX2woKQp7
CiAgICBpZiAoIChtUGxheWVyICE9IDApICYmICggbUN1cnJlbnRTdGF0ZSAmICggTUVESUFfUExBWUVS
X0lOSVRJQUxJWkVEIHwgTUVESUFfUExBWUVSX1NUT1BQRUQpICkgKSB7CiAgICAgICAgbVBsYXllci0+
c2V0QXVkaW9TdHJlYW1UeXBlKG1TdHJlYW1UeXBlKTsKICAgICAgICBpZiAobUF1ZGlvQXR0cmlidXRl
c1BhcmNlbCAhPSBOVUxMKSB7CiAgICAgICAgICAgIG1QbGF5ZXItPnNldFBhcmFtZXRlcihLRVlfUEFS
QU1FVEVSX0FVRElPX0FUVFJJQlVURVMsICptQXVkaW9BdHRyaWJ1dGVzUGFyY2VsKTsKICAgICAgICB9
CiAgICAgICAgbUN1cnJlbnRTdGF0ZSA9IE1FRElBX1BMQVlFUl9QUkVQQVJJTkc7CiAgICAgICAgcmV0
dXJuIG1QbGF5ZXItPnByZXBhcmVBc3luYygpOwogICAgfQogICAgQUxPR0UoInByZXBhcmVBc3luYyBj
YWxsZWQgaW4gc3RhdGUgJWQiLCBtQ3VycmVudFN0YXRlKTsKICAgIHJldHVybiBJTlZBTElEX09QRVJB
VElPTjsKfQoKLy8gVE9ETzogSW4gY2FzZSBvZiBlcnJvciwgcHJlcGFyZUFzeW5jIHByb3ZpZGVzIHRo
ZSBjYWxsZXIgd2l0aCAyIGVycm9yIGNvZGVzLAovLyBvbmUgZGVmaW5lZCBpbiB0aGUgQW5kcm9pZCBm
cmFtZXdvcmsgYW5kIG9uZSBwcm92aWRlZCBieSB0aGUgaW1wbGVtZW50YXRpb24KLy8gdGhhdCBnZW5l
cmF0ZWQgdGhlIGVycm9yLiBUaGUgc3luYyB2ZXJzaW9uIG9mIHByZXBhcmUgcmV0dXJucyBvbmx5IDEg
ZXJyb3IKLy8gY29kZS4Kc3RhdHVzX3QgTWVkaWFQbGF5ZXI6OnByZXBhcmUoKQp7CiAgICBBTE9HVigi
cHJlcGFyZSIpOwogICAgTXV0ZXg6OkF1dG9sb2NrIF9sKG1Mb2NrKTsKICAgIG1Mb2NrVGhyZWFkSWQg
PSBnZXRUaHJlYWRJZCgpOwogICAgaWYgKG1QcmVwYXJlU3luYykgewogICAgICAgIG1Mb2NrVGhyZWFk
SWQgPSAwOwogICAgICAgIHJldHVybiAtRUFMUkVBRFk7CiAgICB9CiAgICBtUHJlcGFyZVN5bmMgPSB0
cnVlOwogICAgc3RhdHVzX3QgcmV0ID0gcHJlcGFyZUFzeW5jX2woKTsKICAgIGlmIChyZXQgIT0gTk9f
RVJST1IpIHsKICAgICAgICBtTG9ja1RocmVhZElkID0gMDsKICAgICAgICByZXR1cm4gcmV0OwogICAg
fQoKICAgIGlmIChtUHJlcGFyZVN5bmMpIHsKICAgICAgICBtU2lnbmFsLndhaXQobUxvY2spOyAgLy8g
d2FpdCBmb3IgcHJlcGFyZSBkb25lCiAgICAgICAgbVByZXBhcmVTeW5jID0gZmFsc2U7CiAgICB9CiAg
ICBBTE9HVigicHJlcGFyZSBjb21wbGV0ZSAtIHN0YXR1cz0lZCIsIG1QcmVwYXJlU3RhdHVzKTsKICAg
IG1Mb2NrVGhyZWFkSWQgPSAwOwogICAgcmV0dXJuIG1QcmVwYXJlU3RhdHVzOwp9CgpzdGF0dXNfdCBN
ZWRpYVBsYXllcjo6cHJlcGFyZUFzeW5jKCkKewogICAgQUxPR1YoInByZXBhcmVBc3luYyIpOwogICAg
TXV0ZXg6OkF1dG9sb2NrIF9sKG1Mb2NrKTsKICAgIHJldHVybiBwcmVwYXJlQXN5bmNfbCgpOwp9Cgpz
dGF0dXNfdCBNZWRpYVBsYXllcjo6c3RhcnQoKQp7CiAgICBBTE9HVigic3RhcnQiKTsKCiAgICBzdGF0
dXNfdCByZXQgPSBOT19FUlJPUjsKICAgIE11dGV4OjpBdXRvbG9jayBfbChtTG9jayk7CgogICAgbUxv
Y2tUaHJlYWRJZCA9IGdldFRocmVhZElkKCk7CgogICAgaWYgKG1DdXJyZW50U3RhdGUgJiBNRURJQV9Q
TEFZRVJfU1RBUlRFRCkgewogICAgICAgIHJldCA9IE5PX0VSUk9SOwogICAgfSBlbHNlIGlmICggKG1Q
bGF5ZXIgIT0gMCkgJiYgKCBtQ3VycmVudFN0YXRlICYgKCBNRURJQV9QTEFZRVJfUFJFUEFSRUQgfAog
ICAgICAgICAgICAgICAgICAgIE1FRElBX1BMQVlFUl9QTEFZQkFDS19DT01QTEVURSB8IE1FRElBX1BM
QVlFUl9QQVVTRUQgKSApICkgewogICAgICAgIG1QbGF5ZXItPnNldExvb3BpbmcobUxvb3ApOwogICAg
ICAgIG1QbGF5ZXItPnNldFZvbHVtZShtTGVmdFZvbHVtZSwgbVJpZ2h0Vm9sdW1lKTsKICAgICAgICBt
UGxheWVyLT5zZXRBdXhFZmZlY3RTZW5kTGV2ZWwobVNlbmRMZXZlbCk7CiAgICAgICAgbUN1cnJlbnRT
dGF0ZSA9IE1FRElBX1BMQVlFUl9TVEFSVEVEOwogICAgICAgIHJldCA9IG1QbGF5ZXItPnN0YXJ0KCk7
CiAgICAgICAgaWYgKHJldCAhPSBOT19FUlJPUikgewogICAgICAgICAgICBtQ3VycmVudFN0YXRlID0g
TUVESUFfUExBWUVSX1NUQVRFX0VSUk9SOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmICht
Q3VycmVudFN0YXRlID09IE1FRElBX1BMQVlFUl9QTEFZQkFDS19DT01QTEVURSkgewogICAgICAgICAg
ICAgICAgQUxPR1YoInBsYXliYWNrIGNvbXBsZXRlZCBpbW1lZGlhdGVseSBmb2xsb3dpbmcgc3RhcnQo
KSIpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgICBBTE9HRSgic3Rh
cnQgY2FsbGVkIGluIHN0YXRlICVkIiwgbUN1cnJlbnRTdGF0ZSk7CiAgICAgICAgcmV0ID0gSU5WQUxJ
RF9PUEVSQVRJT047CiAgICB9CgogICAgbUxvY2tUaHJlYWRJZCA9IDA7CgogICAgcmV0dXJuIHJldDsK
fQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXI6OnN0b3AoKQp7CiAgICBBTE9HVigic3RvcCIpOwogICAgTXV0
ZXg6OkF1dG9sb2NrIF9sKG1Mb2NrKTsKICAgIGlmIChtQ3VycmVudFN0YXRlICYgTUVESUFfUExBWUVS
X1NUT1BQRUQpIHJldHVybiBOT19FUlJPUjsKICAgIGlmICggKG1QbGF5ZXIgIT0gMCkgJiYgKCBtQ3Vy
cmVudFN0YXRlICYgKCBNRURJQV9QTEFZRVJfU1RBUlRFRCB8IE1FRElBX1BMQVlFUl9QUkVQQVJFRCB8
CiAgICAgICAgICAgICAgICAgICAgTUVESUFfUExBWUVSX1BBVVNFRCB8IE1FRElBX1BMQVlFUl9QTEFZ
QkFDS19DT01QTEVURSApICkgKSB7CiAgICAgICAgc3RhdHVzX3QgcmV0ID0gbVBsYXllci0+c3RvcCgp
OwogICAgICAgIGlmIChyZXQgIT0gTk9fRVJST1IpIHsKICAgICAgICAgICAgbUN1cnJlbnRTdGF0ZSA9
IE1FRElBX1BMQVlFUl9TVEFURV9FUlJPUjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBtQ3Vy
cmVudFN0YXRlID0gTUVESUFfUExBWUVSX1NUT1BQRUQ7CiAgICAgICAgfQogICAgICAgIHJldHVybiBy
ZXQ7CiAgICB9CiAgICBBTE9HRSgic3RvcCBjYWxsZWQgaW4gc3RhdGUgJWQiLCBtQ3VycmVudFN0YXRl
KTsKICAgIHJldHVybiBJTlZBTElEX09QRVJBVElPTjsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXI6OnBh
dXNlKCkKewogICAgQUxPR1YoInBhdXNlIik7CiAgICBNdXRleDo6QXV0b2xvY2sgX2wobUxvY2spOwog
ICAgaWYgKG1DdXJyZW50U3RhdGUgJiAoTUVESUFfUExBWUVSX1BBVVNFRHxNRURJQV9QTEFZRVJfUExB
WUJBQ0tfQ09NUExFVEUpKQogICAgICAgIHJldHVybiBOT19FUlJPUjsKICAgIGlmICgobVBsYXllciAh
PSAwKSAmJiAobUN1cnJlbnRTdGF0ZSAmIE1FRElBX1BMQVlFUl9TVEFSVEVEKSkgewogICAgICAgIHN0
YXR1c190IHJldCA9IG1QbGF5ZXItPnBhdXNlKCk7CiAgICAgICAgaWYgKHJldCAhPSBOT19FUlJPUikg
ewogICAgICAgICAgICBtQ3VycmVudFN0YXRlID0gTUVESUFfUExBWUVSX1NUQVRFX0VSUk9SOwogICAg
ICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG1DdXJyZW50U3RhdGUgPSBNRURJQV9QTEFZRVJfUEFVU0VE
OwogICAgICAgIH0KICAgICAgICByZXR1cm4gcmV0OwogICAgfQogICAgQUxPR0UoInBhdXNlIGNhbGxl
ZCBpbiBzdGF0ZSAlZCIsIG1DdXJyZW50U3RhdGUpOwogICAgcmV0dXJuIElOVkFMSURfT1BFUkFUSU9O
Owp9Cgpib29sIE1lZGlhUGxheWVyOjppc1BsYXlpbmcoKQp7CiAgICBNdXRleDo6QXV0b2xvY2sgX2wo
bUxvY2spOwogICAgaWYgKG1QbGF5ZXIgIT0gMCkgewogICAgICAgIGJvb2wgdGVtcCA9IGZhbHNlOwog
ICAgICAgIG1QbGF5ZXItPmlzUGxheWluZygmdGVtcCk7CiAgICAgICAgQUxPR1YoImlzUGxheWluZzog
JWQiLCB0ZW1wKTsKICAgICAgICBpZiAoKG1DdXJyZW50U3RhdGUgJiBNRURJQV9QTEFZRVJfU1RBUlRF
RCkgJiYgISB0ZW1wKSB7CiAgICAgICAgICAgIEFMT0dFKCJpbnRlcm5hbC9leHRlcm5hbCBzdGF0ZSBt
aXNtYXRjaCBjb3JyZWN0ZWQiKTsKICAgICAgICAgICAgbUN1cnJlbnRTdGF0ZSA9IE1FRElBX1BMQVlF
Ul9QQVVTRUQ7CiAgICAgICAgfQogICAgICAgIHJldHVybiB0ZW1wOwogICAgfQogICAgQUxPR1YoImlz
UGxheWluZzogbm8gYWN0aXZlIHBsYXllciIpOwogICAgcmV0dXJuIGZhbHNlOwp9CgpzdGF0dXNfdCBN
ZWRpYVBsYXllcjo6Z2V0VmlkZW9XaWR0aChpbnQgKncpCnsKICAgIEFMT0dWKCJnZXRWaWRlb1dpZHRo
Iik7CiAgICBNdXRleDo6QXV0b2xvY2sgX2wobUxvY2spOwogICAgaWYgKG1QbGF5ZXIgPT0gMCkgcmV0
dXJuIElOVkFMSURfT1BFUkFUSU9OOwogICAgKncgPSBtVmlkZW9XaWR0aDsKICAgIHJldHVybiBOT19F
UlJPUjsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXI6OmdldFZpZGVvSGVpZ2h0KGludCAqaCkKewogICAg
QUxPR1YoImdldFZpZGVvSGVpZ2h0Iik7CiAgICBNdXRleDo6QXV0b2xvY2sgX2wobUxvY2spOwogICAg
aWYgKG1QbGF5ZXIgPT0gMCkgcmV0dXJuIElOVkFMSURfT1BFUkFUSU9OOwogICAgKmggPSBtVmlkZW9I
ZWlnaHQ7CiAgICByZXR1cm4gTk9fRVJST1I7Cn0KCnN0YXR1c190IE1lZGlhUGxheWVyOjpnZXRDdXJy
ZW50UG9zaXRpb24oaW50ICptc2VjKQp7CiAgICBBTE9HVigiZ2V0Q3VycmVudFBvc2l0aW9uIik7CiAg
ICBNdXRleDo6QXV0b2xvY2sgX2wobUxvY2spOwogICAgaWYgKG1QbGF5ZXIgIT0gMCkgewogICAgICAg
IGlmIChtQ3VycmVudFBvc2l0aW9uID49IDApIHsKICAgICAgICAgICAgQUxPR1YoIlVzaW5nIGNhY2hl
ZCBzZWVrIHBvc2l0aW9uOiAlZCIsIG1DdXJyZW50UG9zaXRpb24pOwogICAgICAgICAgICAqbXNlYyA9
IG1DdXJyZW50UG9zaXRpb247CiAgICAgICAgICAgIHJldHVybiBOT19FUlJPUjsKICAgICAgICB9CiAg
ICAgICAgcmV0dXJuIG1QbGF5ZXItPmdldEN1cnJlbnRQb3NpdGlvbihtc2VjKTsKICAgIH0KICAgIHJl
dHVybiBJTlZBTElEX09QRVJBVElPTjsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXI6OmdldER1cmF0aW9u
X2woaW50ICptc2VjKQp7CiAgICBBTE9HVigiZ2V0RHVyYXRpb25fbCIpOwogICAgYm9vbCBpc1ZhbGlk
U3RhdGUgPSAobUN1cnJlbnRTdGF0ZSAmIChNRURJQV9QTEFZRVJfUFJFUEFSRUQgfCBNRURJQV9QTEFZ
RVJfU1RBUlRFRCB8IE1FRElBX1BMQVlFUl9QQVVTRUQgfCBNRURJQV9QTEFZRVJfU1RPUFBFRCB8IE1F
RElBX1BMQVlFUl9QTEFZQkFDS19DT01QTEVURSkpOwogICAgaWYgKG1QbGF5ZXIgIT0gMCAmJiBpc1Zh
bGlkU3RhdGUpIHsKICAgICAgICBpbnQgZHVyYXRpb25NczsKICAgICAgICBzdGF0dXNfdCByZXQgPSBt
UGxheWVyLT5nZXREdXJhdGlvbigmZHVyYXRpb25Ncyk7CgogICAgICAgIGlmIChyZXQgIT0gT0spIHsK
ICAgICAgICAgICAgLy8gRG8gbm90IGVudGVyIGVycm9yIHN0YXRlIGp1c3QgYmVjYXVzZSBubyBkdXJh
dGlvbiB3YXMgYXZhaWxhYmxlLgogICAgICAgICAgICBkdXJhdGlvbk1zID0gLTE7CiAgICAgICAgICAg
IHJldCA9IE9LOwogICAgICAgIH0KCiAgICAgICAgaWYgKG1zZWMpIHsKICAgICAgICAgICAgKm1zZWMg
PSBkdXJhdGlvbk1zOwogICAgICAgIH0KICAgICAgICByZXR1cm4gcmV0OwogICAgfQogICAgQUxPR0Uo
IkF0dGVtcHQgdG8gY2FsbCBnZXREdXJhdGlvbiB3aXRob3V0IGEgdmFsaWQgbWVkaWFwbGF5ZXIiKTsK
ICAgIHJldHVybiBJTlZBTElEX09QRVJBVElPTjsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXI6OmdldER1
cmF0aW9uKGludCAqbXNlYykKewogICAgTXV0ZXg6OkF1dG9sb2NrIF9sKG1Mb2NrKTsKICAgIHJldHVy
biBnZXREdXJhdGlvbl9sKG1zZWMpOwp9CgpzdGF0dXNfdCBNZWRpYVBsYXllcjo6c2Vla1RvX2woaW50
IG1zZWMpCnsKICAgIEFMT0dWKCJzZWVrVG8gJWQiLCBtc2VjKTsKICAgIGlmICgobVBsYXllciAhPSAw
KSAmJiAoIG1DdXJyZW50U3RhdGUgJiAoIE1FRElBX1BMQVlFUl9TVEFSVEVEIHwgTUVESUFfUExBWUVS
X1BSRVBBUkVEIHwgTUVESUFfUExBWUVSX1BBVVNFRCB8ICBNRURJQV9QTEFZRVJfUExBWUJBQ0tfQ09N
UExFVEUpICkgKSB7CiAgICAgICAgaWYgKCBtc2VjIDwgMCApIHsKICAgICAgICAgICAgQUxPR1coIkF0
dGVtcHQgdG8gc2VlayB0byBpbnZhbGlkIHBvc2l0aW9uOiAlZCIsIG1zZWMpOwogICAgICAgICAgICBt
c2VjID0gMDsKICAgICAgICB9CgogICAgICAgIGludCBkdXJhdGlvbk1zOwogICAgICAgIHN0YXR1c190
IGVyciA9IG1QbGF5ZXItPmdldER1cmF0aW9uKCZkdXJhdGlvbk1zKTsKCiAgICAgICAgaWYgKGVyciAh
PSBPSykgewogICAgICAgICAgICBBTE9HVygiU3RyZWFtIGhhcyBubyBkdXJhdGlvbiBhbmQgaXMgdGhl
cmVmb3JlIG5vdCBzZWVrYWJsZS4iKTsKICAgICAgICAgICAgcmV0dXJuIGVycjsKICAgICAgICB9Cgog
ICAgICAgIGlmIChtc2VjID4gZHVyYXRpb25NcykgewogICAgICAgICAgICBBTE9HVygiQXR0ZW1wdCB0
byBzZWVrIHRvIHBhc3QgZW5kIG9mIGZpbGU6IHJlcXVlc3QgPSAlZCwgIgogICAgICAgICAgICAgICAg
ICAiZHVyYXRpb25NcyA9ICVkIiwKICAgICAgICAgICAgICAgICAgbXNlYywKICAgICAgICAgICAgICAg
ICAgZHVyYXRpb25Ncyk7CgogICAgICAgICAgICBtc2VjID0gZHVyYXRpb25NczsKICAgICAgICB9Cgog
ICAgICAgIC8vIGNhY2hlIGR1cmF0aW9uCiAgICAgICAgbUN1cnJlbnRQb3NpdGlvbiA9IG1zZWM7CiAg
ICAgICAgaWYgKG1TZWVrUG9zaXRpb24gPCAwKSB7CiAgICAgICAgICAgIG1TZWVrUG9zaXRpb24gPSBt
c2VjOwogICAgICAgICAgICByZXR1cm4gbVBsYXllci0+c2Vla1RvKG1zZWMpOwogICAgICAgIH0KICAg
ICAgICBlbHNlIHsKICAgICAgICAgICAgQUxPR1YoIlNlZWsgaW4gcHJvZ3Jlc3MgLSBxdWV1ZSB1cCBz
ZWVrVG9bJWRdIiwgbXNlYyk7CiAgICAgICAgICAgIHJldHVybiBOT19FUlJPUjsKICAgICAgICB9CiAg
ICB9CiAgICBBTE9HRSgiQXR0ZW1wdCB0byBwZXJmb3JtIHNlZWtUbyBpbiB3cm9uZyBzdGF0ZTogbVBs
YXllcj0lcCwgbUN1cnJlbnRTdGF0ZT0ldSIsIG1QbGF5ZXIuZ2V0KCksIG1DdXJyZW50U3RhdGUpOwog
ICAgcmV0dXJuIElOVkFMSURfT1BFUkFUSU9OOwp9CgpzdGF0dXNfdCBNZWRpYVBsYXllcjo6c2Vla1Rv
KGludCBtc2VjKQp7CiAgICBtTG9ja1RocmVhZElkID0gZ2V0VGhyZWFkSWQoKTsKICAgIE11dGV4OjpB
dXRvbG9jayBfbChtTG9jayk7CiAgICBzdGF0dXNfdCByZXN1bHQgPSBzZWVrVG9fbChtc2VjKTsKICAg
IG1Mb2NrVGhyZWFkSWQgPSAwOwoKICAgIHJldHVybiByZXN1bHQ7Cn0KCnN0YXR1c190IE1lZGlhUGxh
eWVyOjpyZXNldF9sKCkKewogICAgbUxvb3AgPSBmYWxzZTsKICAgIGlmIChtQ3VycmVudFN0YXRlID09
IE1FRElBX1BMQVlFUl9JRExFKSByZXR1cm4gTk9fRVJST1I7CiAgICBtUHJlcGFyZVN5bmMgPSBmYWxz
ZTsKICAgIGlmIChtUGxheWVyICE9IDApIHsKICAgICAgICBzdGF0dXNfdCByZXQgPSBtUGxheWVyLT5y
ZXNldCgpOwogICAgICAgIGlmIChyZXQgIT0gTk9fRVJST1IpIHsKICAgICAgICAgICAgQUxPR0UoInJl
c2V0KCkgZmFpbGVkIHdpdGggcmV0dXJuIGNvZGUgKCVkKSIsIHJldCk7CiAgICAgICAgICAgIG1DdXJy
ZW50U3RhdGUgPSBNRURJQV9QTEFZRVJfU1RBVEVfRVJST1I7CiAgICAgICAgfSBlbHNlIHsKICAgICAg
ICAgICAgbUN1cnJlbnRTdGF0ZSA9IE1FRElBX1BMQVlFUl9JRExFOwogICAgICAgIH0KICAgICAgICAv
LyBzZXREYXRhU291cmNlIGhhcyB0byBiZSBjYWxsZWQgYWdhaW4gdG8gY3JlYXRlIGEKICAgICAgICAv
LyBuZXcgbWVkaWFwbGF5ZXIuCiAgICAgICAgbVBsYXllciA9IDA7CiAgICAgICAgcmV0dXJuIHJldDsK
ICAgIH0KICAgIGNsZWFyX2woKTsKICAgIHJldHVybiBOT19FUlJPUjsKfQoKc3RhdHVzX3QgTWVkaWFQ
bGF5ZXI6OmRvU2V0UmV0cmFuc21pdEVuZHBvaW50KGNvbnN0IHNwPElNZWRpYVBsYXllcj4mIHBsYXll
cikgewogICAgTXV0ZXg6OkF1dG9sb2NrIF9sKG1Mb2NrKTsKCiAgICBpZiAocGxheWVyID09IE5VTEwp
IHsKICAgICAgICByZXR1cm4gVU5LTk9XTl9FUlJPUjsKICAgIH0KCiAgICBpZiAobVJldHJhbnNtaXRF
bmRwb2ludFZhbGlkKSB7CiAgICAgICAgcmV0dXJuIHBsYXllci0+c2V0UmV0cmFuc21pdEVuZHBvaW50
KCZtUmV0cmFuc21pdEVuZHBvaW50KTsKICAgIH0KCiAgICByZXR1cm4gT0s7Cn0KCnN0YXR1c190IE1l
ZGlhUGxheWVyOjpyZXNldCgpCnsKICAgIEFMT0dWKCJyZXNldCIpOwogICAgTXV0ZXg6OkF1dG9sb2Nr
IF9sKG1Mb2NrKTsKICAgIHJldHVybiByZXNldF9sKCk7Cn0KCnN0YXR1c190IE1lZGlhUGxheWVyOjpz
ZXRBdWRpb1N0cmVhbVR5cGUoYXVkaW9fc3RyZWFtX3R5cGVfdCB0eXBlKQp7CiAgICBBTE9HVigiTWVk
aWFQbGF5ZXI6OnNldEF1ZGlvU3RyZWFtVHlwZSIpOwogICAgTXV0ZXg6OkF1dG9sb2NrIF9sKG1Mb2Nr
KTsKICAgIGlmIChtU3RyZWFtVHlwZSA9PSB0eXBlKSByZXR1cm4gTk9fRVJST1I7CiAgICBpZiAobUN1
cnJlbnRTdGF0ZSAmICggTUVESUFfUExBWUVSX1BSRVBBUkVEIHwgTUVESUFfUExBWUVSX1NUQVJURUQg
fAogICAgICAgICAgICAgICAgTUVESUFfUExBWUVSX1BBVVNFRCB8IE1FRElBX1BMQVlFUl9QTEFZQkFD
S19DT01QTEVURSApICkgewogICAgICAgIC8vIENhbid0IGNoYW5nZSB0aGUgc3RyZWFtIHR5cGUgYWZ0
ZXIgcHJlcGFyZQogICAgICAgIEFMT0dFKCJzZXRBdWRpb1N0cmVhbSBjYWxsZWQgaW4gc3RhdGUgJWQi
LCBtQ3VycmVudFN0YXRlKTsKICAgICAgICByZXR1cm4gSU5WQUxJRF9PUEVSQVRJT047CiAgICB9CiAg
ICAvLyBjYWNoZQogICAgbVN0cmVhbVR5cGUgPSB0eXBlOwogICAgcmV0dXJuIE9LOwp9CgpzdGF0dXNf
dCBNZWRpYVBsYXllcjo6Z2V0QXVkaW9TdHJlYW1UeXBlKGF1ZGlvX3N0cmVhbV90eXBlX3QgKnR5cGUp
CnsKICAgIEFMT0dWKCJnZXRBdWRpb1N0cmVhbVR5cGUiKTsKICAgIE11dGV4OjpBdXRvbG9jayBfbCht
TG9jayk7CiAgICAqdHlwZSA9IG1TdHJlYW1UeXBlOwogICAgcmV0dXJuIE9LOwp9CgpzdGF0dXNfdCBN
ZWRpYVBsYXllcjo6c2V0TG9vcGluZyhpbnQgbG9vcCkKewogICAgQUxPR1YoIk1lZGlhUGxheWVyOjpz
ZXRMb29waW5nIik7CiAgICBNdXRleDo6QXV0b2xvY2sgX2wobUxvY2spOwogICAgbUxvb3AgPSAobG9v
cCAhPSAwKTsKICAgIGlmIChtUGxheWVyICE9IDApIHsKICAgICAgICByZXR1cm4gbVBsYXllci0+c2V0
TG9vcGluZyhsb29wKTsKICAgIH0KICAgIHJldHVybiBPSzsKfQoKYm9vbCBNZWRpYVBsYXllcjo6aXNM
b29waW5nKCkgewogICAgQUxPR1YoImlzTG9vcGluZyIpOwogICAgTXV0ZXg6OkF1dG9sb2NrIF9sKG1M
b2NrKTsKICAgIGlmIChtUGxheWVyICE9IDApIHsKICAgICAgICByZXR1cm4gbUxvb3A7CiAgICB9CiAg
ICBBTE9HVigiaXNMb29waW5nOiBubyBhY3RpdmUgcGxheWVyIik7CiAgICByZXR1cm4gZmFsc2U7Cn0K
CnN0YXR1c190IE1lZGlhUGxheWVyOjpzZXRWb2x1bWUoZmxvYXQgbGVmdFZvbHVtZSwgZmxvYXQgcmln
aHRWb2x1bWUpCnsKICAgIEFMT0dWKCJNZWRpYVBsYXllcjo6c2V0Vm9sdW1lKCVmLCAlZikiLCBsZWZ0
Vm9sdW1lLCByaWdodFZvbHVtZSk7CiAgICBNdXRleDo6QXV0b2xvY2sgX2wobUxvY2spOwogICAgbUxl
ZnRWb2x1bWUgPSBsZWZ0Vm9sdW1lOwogICAgbVJpZ2h0Vm9sdW1lID0gcmlnaHRWb2x1bWU7CiAgICBp
ZiAobVBsYXllciAhPSAwKSB7CiAgICAgICAgcmV0dXJuIG1QbGF5ZXItPnNldFZvbHVtZShsZWZ0Vm9s
dW1lLCByaWdodFZvbHVtZSk7CiAgICB9CiAgICByZXR1cm4gT0s7Cn0KCnN0YXR1c190IE1lZGlhUGxh
eWVyOjpzZXRBdWRpb1Nlc3Npb25JZChpbnQgc2Vzc2lvbklkKQp7CiAgICBBTE9HVigiTWVkaWFQbGF5
ZXI6OnNldEF1ZGlvU2Vzc2lvbklkKCVkKSIsIHNlc3Npb25JZCk7CiAgICBNdXRleDo6QXV0b2xvY2sg
X2wobUxvY2spOwogICAgaWYgKCEobUN1cnJlbnRTdGF0ZSAmIE1FRElBX1BMQVlFUl9JRExFKSkgewog
ICAgICAgIEFMT0dFKCJzZXRBdWRpb1Nlc3Npb25JZCBjYWxsZWQgaW4gc3RhdGUgJWQiLCBtQ3VycmVu
dFN0YXRlKTsKICAgICAgICByZXR1cm4gSU5WQUxJRF9PUEVSQVRJT047CiAgICB9CiAgICBpZiAoc2Vz
c2lvbklkIDwgMCkgewogICAgICAgIHJldHVybiBCQURfVkFMVUU7CiAgICB9CiAgICBpZiAoc2Vzc2lv
bklkICE9IG1BdWRpb1Nlc3Npb25JZCkgewogICAgICAgIEF1ZGlvU3lzdGVtOjphY3F1aXJlQXVkaW9T
ZXNzaW9uSWQoc2Vzc2lvbklkLCAtMSk7CiAgICAgICAgQXVkaW9TeXN0ZW06OnJlbGVhc2VBdWRpb1Nl
c3Npb25JZChtQXVkaW9TZXNzaW9uSWQsIC0xKTsKICAgICAgICBtQXVkaW9TZXNzaW9uSWQgPSBzZXNz
aW9uSWQ7CiAgICB9CiAgICByZXR1cm4gTk9fRVJST1I7Cn0KCmludCBNZWRpYVBsYXllcjo6Z2V0QXVk
aW9TZXNzaW9uSWQoKQp7CiAgICBNdXRleDo6QXV0b2xvY2sgX2wobUxvY2spOwogICAgcmV0dXJuIG1B
dWRpb1Nlc3Npb25JZDsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXI6OnNldEF1eEVmZmVjdFNlbmRMZXZl
bChmbG9hdCBsZXZlbCkKewogICAgQUxPR1YoIk1lZGlhUGxheWVyOjpzZXRBdXhFZmZlY3RTZW5kTGV2
ZWwoJWYpIiwgbGV2ZWwpOwogICAgTXV0ZXg6OkF1dG9sb2NrIF9sKG1Mb2NrKTsKICAgIG1TZW5kTGV2
ZWwgPSBsZXZlbDsKICAgIGlmIChtUGxheWVyICE9IDApIHsKICAgICAgICByZXR1cm4gbVBsYXllci0+
c2V0QXV4RWZmZWN0U2VuZExldmVsKGxldmVsKTsKICAgIH0KICAgIHJldHVybiBPSzsKfQoKc3RhdHVz
X3QgTWVkaWFQbGF5ZXI6OmF0dGFjaEF1eEVmZmVjdChpbnQgZWZmZWN0SWQpCnsKICAgIEFMT0dWKCJN
ZWRpYVBsYXllcjo6YXR0YWNoQXV4RWZmZWN0KCVkKSIsIGVmZmVjdElkKTsKICAgIE11dGV4OjpBdXRv
bG9jayBfbChtTG9jayk7CiAgICBpZiAobVBsYXllciA9PSAwIHx8CiAgICAgICAgKG1DdXJyZW50U3Rh
dGUgJiBNRURJQV9QTEFZRVJfSURMRSkgfHwKICAgICAgICAobUN1cnJlbnRTdGF0ZSA9PSBNRURJQV9Q
TEFZRVJfU1RBVEVfRVJST1IgKSkgewogICAgICAgIEFMT0dFKCJhdHRhY2hBdXhFZmZlY3QgY2FsbGVk
IGluIHN0YXRlICVkIiwgbUN1cnJlbnRTdGF0ZSk7CiAgICAgICAgcmV0dXJuIElOVkFMSURfT1BFUkFU
SU9OOwogICAgfQoKICAgIHJldHVybiBtUGxheWVyLT5hdHRhY2hBdXhFZmZlY3QoZWZmZWN0SWQpOwp9
CgovLyBhbHdheXMgY2FsbCB3aXRoIGxvY2sgaGVsZApzdGF0dXNfdCBNZWRpYVBsYXllcjo6Y2hlY2tT
dGF0ZUZvcktleVNldF9sKGludCBrZXkpCnsKICAgIHN3aXRjaChrZXkpIHsKICAgIGNhc2UgS0VZX1BB
UkFNRVRFUl9BVURJT19BVFRSSUJVVEVTOgogICAgICAgIGlmIChtQ3VycmVudFN0YXRlICYgKCBNRURJ
QV9QTEFZRVJfUFJFUEFSRUQgfCBNRURJQV9QTEFZRVJfU1RBUlRFRCB8CiAgICAgICAgICAgICAgICBN
RURJQV9QTEFZRVJfUEFVU0VEIHwgTUVESUFfUExBWUVSX1BMQVlCQUNLX0NPTVBMRVRFKSApIHsKICAg
ICAgICAgICAgLy8gQ2FuJ3QgY2hhbmdlIHRoZSBhdWRpbyBhdHRyaWJ1dGVzIGFmdGVyIHByZXBhcmUK
ICAgICAgICAgICAgQUxPR0UoInRyeWluZyB0byBzZXQgYXVkaW8gYXR0cmlidXRlcyBjYWxsZWQgaW4g
c3RhdGUgJWQiLCBtQ3VycmVudFN0YXRlKTsKICAgICAgICAgICAgcmV0dXJuIElOVkFMSURfT1BFUkFU
SU9OOwogICAgICAgIH0KICAgICAgICBicmVhazsKICAgIGRlZmF1bHQ6CiAgICAgICAgLy8gcGFyYW1l
dGVyIGRvZXNuJ3QgcmVxdWlyZSBwbGF5ZXIgc3RhdGUgY2hlY2sKICAgICAgICBicmVhazsKICAgIH0K
ICAgIHJldHVybiBPSzsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXI6OnNldFBhcmFtZXRlcihpbnQga2V5
LCBjb25zdCBQYXJjZWwmIHJlcXVlc3QpCnsKICAgIEFMT0dWKCJNZWRpYVBsYXllcjo6c2V0UGFyYW1l
dGVyKCVkKSIsIGtleSk7CiAgICBNdXRleDo6QXV0b2xvY2sgX2wobUxvY2spOwogICAgaWYgKGNoZWNr
U3RhdGVGb3JLZXlTZXRfbChrZXkpICE9IE9LKSB7CiAgICAgICAgcmV0dXJuIElOVkFMSURfT1BFUkFU
SU9OOwogICAgfQogICAgaWYgKG1QbGF5ZXIgIT0gTlVMTCkgewogICAgICAgIHJldHVybiAgbVBsYXll
ci0+c2V0UGFyYW1ldGVyKGtleSwgcmVxdWVzdCk7CiAgICB9CiAgICBzd2l0Y2ggKGtleSkgewogICAg
Y2FzZSBLRVlfUEFSQU1FVEVSX0FVRElPX0FUVFJJQlVURVM6CiAgICAgICAgLy8gbm8gcGxheWVyLCBz
YXZlIHRoZSBtYXJzaGFsbGVkIGF1ZGlvIGF0dHJpYnV0ZXMKICAgICAgICBpZiAobUF1ZGlvQXR0cmli
dXRlc1BhcmNlbCAhPSBOVUxMKSB7IGRlbGV0ZSBtQXVkaW9BdHRyaWJ1dGVzUGFyY2VsOyB9OwogICAg
ICAgIG1BdWRpb0F0dHJpYnV0ZXNQYXJjZWwgPSBuZXcgUGFyY2VsKCk7CiAgICAgICAgbUF1ZGlvQXR0
cmlidXRlc1BhcmNlbC0+YXBwZW5kRnJvbSgmcmVxdWVzdCwgMCwgcmVxdWVzdC5kYXRhU2l6ZSgpKTsK
ICAgICAgICByZXR1cm4gT0s7CiAgICBkZWZhdWx0OgogICAgICAgIEFMT0dWKCJzZXRQYXJhbWV0ZXI6
IG5vIGFjdGl2ZSBwbGF5ZXIiKTsKICAgICAgICByZXR1cm4gSU5WQUxJRF9PUEVSQVRJT047CiAgICB9
Cn0KCnN0YXR1c190IE1lZGlhUGxheWVyOjpnZXRQYXJhbWV0ZXIoaW50IGtleSwgUGFyY2VsICpyZXBs
eSkKewogICAgQUxPR1YoIk1lZGlhUGxheWVyOjpnZXRQYXJhbWV0ZXIoJWQpIiwga2V5KTsKICAgIE11
dGV4OjpBdXRvbG9jayBfbChtTG9jayk7CiAgICBpZiAobVBsYXllciAhPSBOVUxMKSB7CiAgICAgICAg
cmV0dXJuICBtUGxheWVyLT5nZXRQYXJhbWV0ZXIoa2V5LCByZXBseSk7CiAgICB9CiAgICBBTE9HVigi
Z2V0UGFyYW1ldGVyOiBubyBhY3RpdmUgcGxheWVyIik7CiAgICByZXR1cm4gSU5WQUxJRF9PUEVSQVRJ
T047Cn0KCnN0YXR1c190IE1lZGlhUGxheWVyOjpzZXRSZXRyYW5zbWl0RW5kcG9pbnQoY29uc3QgY2hh
ciogYWRkclN0cmluZywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1
aW50MTZfdCBwb3J0KSB7CiAgICBBTE9HVigiTWVkaWFQbGF5ZXI6OnNldFJldHJhbnNtaXRFbmRwb2lu
dCglczolaHUpIiwKICAgICAgICAgICAgYWRkclN0cmluZyA/IGFkZHJTdHJpbmcgOiAiKG51bGwpIiwg
cG9ydCk7CgogICAgTXV0ZXg6OkF1dG9sb2NrIF9sKG1Mb2NrKTsKICAgIGlmICgobVBsYXllciAhPSBO
VUxMKSB8fCAobUN1cnJlbnRTdGF0ZSAhPSBNRURJQV9QTEFZRVJfSURMRSkpCiAgICAgICAgcmV0dXJu
IElOVkFMSURfT1BFUkFUSU9OOwoKICAgIGlmIChOVUxMID09IGFkZHJTdHJpbmcpIHsKICAgICAgICBt
UmV0cmFuc21pdEVuZHBvaW50VmFsaWQgPSBmYWxzZTsKICAgICAgICByZXR1cm4gT0s7CiAgICB9Cgog
ICAgc3RydWN0IGluX2FkZHIgc2FkZHI7CiAgICBpZighaW5ldF9hdG9uKGFkZHJTdHJpbmcsICZzYWRk
cikpIHsKICAgICAgICByZXR1cm4gQkFEX1ZBTFVFOwogICAgfQoKICAgIG1lbXNldCgmbVJldHJhbnNt
aXRFbmRwb2ludCwgMCwgc2l6ZW9mKG1SZXRyYW5zbWl0RW5kcG9pbnQpKTsKICAgIG1SZXRyYW5zbWl0
RW5kcG9pbnQuc2luX2ZhbWlseSA9IEFGX0lORVQ7CiAgICBtUmV0cmFuc21pdEVuZHBvaW50LnNpbl9h
ZGRyICAgPSBzYWRkcjsKICAgIG1SZXRyYW5zbWl0RW5kcG9pbnQuc2luX3BvcnQgICA9IGh0b25zKHBv
cnQpOwogICAgbVJldHJhbnNtaXRFbmRwb2ludFZhbGlkICAgICAgID0gdHJ1ZTsKCiAgICByZXR1cm4g
T0s7Cn0KCnZvaWQgTWVkaWFQbGF5ZXI6Om5vdGlmeShpbnQgbXNnLCBpbnQgZXh0MSwgaW50IGV4dDIs
IGNvbnN0IFBhcmNlbCAqb2JqKQp7CiAgICBBTE9HVigibWVzc2FnZSByZWNlaXZlZCBtc2c9JWQsIGV4
dDE9JWQsIGV4dDI9JWQiLCBtc2csIGV4dDEsIGV4dDIpOwogICAgYm9vbCBzZW5kID0gdHJ1ZTsKICAg
IGJvb2wgbG9ja2VkID0gZmFsc2U7CgogICAgLy8gVE9ETzogSW4gdGhlIGZ1dHVyZSwgd2UgbWlnaHQg
YmUgb24gdGhlIHNhbWUgdGhyZWFkIGlmIHRoZSBhcHAgaXMKICAgIC8vIHJ1bm5pbmcgaW4gdGhlIHNh
bWUgcHJvY2VzcyBhcyB0aGUgbWVkaWEgc2VydmVyLiBJbiB0aGF0IGNhc2UsCiAgICAvLyB0aGlzIHdp
bGwgZGVhZGxvY2suCiAgICAvLwogICAgLy8gVGhlIHRocmVhZElkIGhhY2sgYmVsb3cgd29ya3MgYXJv
dW5kIHRoaXMgZm9yIHRoZSBjYXJlIG9mIHByZXBhcmUsCiAgICAvLyBzZWVrVG8gYW5kIHN0YXJ0IHdp
dGhpbiB0aGUgc2FtZSBwcm9jZXNzLgogICAgLy8gRklYTUU6IFJlbWVtYmVyLCB0aGlzIGlzIGEgaGFj
aywgaXQncyBub3QgZXZlbiBhIGhhY2sgdGhhdCBpcyBhcHBsaWVkCiAgICAvLyBjb25zaXN0ZW50bHkg
Zm9yIGFsbCB1c2UtY2FzZXMsIHRoaXMgbmVlZHMgdG8gYmUgcmV2aXNpdGVkLgogICAgaWYgKG1Mb2Nr
VGhyZWFkSWQgIT0gZ2V0VGhyZWFkSWQoKSkgewogICAgICAgIG1Mb2NrLmxvY2soKTsKICAgICAgICBs
b2NrZWQgPSB0cnVlOwogICAgfQoKICAgIC8vIEFsbG93cyBjYWxscyBmcm9tIEpOSSBpbiBpZGxlIHN0
YXRlIHRvIG5vdGlmeSBlcnJvcnMKICAgIGlmICghKG1zZyA9PSBNRURJQV9FUlJPUiAmJiBtQ3VycmVu
dFN0YXRlID09IE1FRElBX1BMQVlFUl9JRExFKSAmJiBtUGxheWVyID09IDApIHsKICAgICAgICBBTE9H
Vigibm90aWZ5KCVkLCAlZCwgJWQpIGNhbGxiYWNrIG9uIGRpc2Nvbm5lY3RlZCBtZWRpYXBsYXllciIs
IG1zZywgZXh0MSwgZXh0Mik7CiAgICAgICAgaWYgKGxvY2tlZCkgbUxvY2sudW5sb2NrKCk7ICAgLy8g
cmVsZWFzZSB0aGUgbG9jayB3aGVuIGRvbmUuCiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIHN3aXRj
aCAobXNnKSB7CiAgICBjYXNlIE1FRElBX05PUDogLy8gaW50ZXJmYWNlIHRlc3QgbWVzc2FnZQogICAg
ICAgIGJyZWFrOwogICAgY2FzZSBNRURJQV9QUkVQQVJFRDoKICAgICAgICBBTE9HVigicHJlcGFyZWQi
KTsKICAgICAgICBtQ3VycmVudFN0YXRlID0gTUVESUFfUExBWUVSX1BSRVBBUkVEOwogICAgICAgIGlm
IChtUHJlcGFyZVN5bmMpIHsKICAgICAgICAgICAgQUxPR1YoInNpZ25hbCBhcHBsaWNhdGlvbiB0aHJl
YWQiKTsKICAgICAgICAgICAgbVByZXBhcmVTeW5jID0gZmFsc2U7CiAgICAgICAgICAgIG1QcmVwYXJl
U3RhdHVzID0gTk9fRVJST1I7CiAgICAgICAgICAgIG1TaWduYWwuc2lnbmFsKCk7CiAgICAgICAgfQog
ICAgICAgIGJyZWFrOwogICAgY2FzZSBNRURJQV9QTEFZQkFDS19DT01QTEVURToKICAgICAgICBBTE9H
VigicGxheWJhY2sgY29tcGxldGUiKTsKICAgICAgICBpZiAobUN1cnJlbnRTdGF0ZSA9PSBNRURJQV9Q
TEFZRVJfSURMRSkgewogICAgICAgICAgICBBTE9HRSgicGxheWJhY2sgY29tcGxldGUgaW4gaWRsZSBz
dGF0ZSIpOwogICAgICAgIH0KICAgICAgICBpZiAoIW1Mb29wKSB7CiAgICAgICAgICAgIG1DdXJyZW50
U3RhdGUgPSBNRURJQV9QTEFZRVJfUExBWUJBQ0tfQ09NUExFVEU7CiAgICAgICAgfQogICAgICAgIGJy
ZWFrOwogICAgY2FzZSBNRURJQV9FUlJPUjoKICAgICAgICAvLyBBbHdheXMgbG9nIGVycm9ycy4KICAg
ICAgICAvLyBleHQxOiBNZWRpYSBmcmFtZXdvcmsgZXJyb3IgY29kZS4KICAgICAgICAvLyBleHQyOiBJ
bXBsZW1lbnRhdGlvbiBkZXBlbmRhbnQgZXJyb3IgY29kZS4KICAgICAgICBBTE9HRSgiZXJyb3IgKCVk
LCAlZCkiLCBleHQxLCBleHQyKTsKICAgICAgICBtQ3VycmVudFN0YXRlID0gTUVESUFfUExBWUVSX1NU
QVRFX0VSUk9SOwogICAgICAgIGlmIChtUHJlcGFyZVN5bmMpCiAgICAgICAgewogICAgICAgICAgICBB
TE9HVigic2lnbmFsIGFwcGxpY2F0aW9uIHRocmVhZCIpOwogICAgICAgICAgICBtUHJlcGFyZVN5bmMg
PSBmYWxzZTsKICAgICAgICAgICAgbVByZXBhcmVTdGF0dXMgPSBleHQxOwogICAgICAgICAgICBtU2ln
bmFsLnNpZ25hbCgpOwogICAgICAgICAgICBzZW5kID0gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGJy
ZWFrOwogICAgY2FzZSBNRURJQV9JTkZPOgogICAgICAgIC8vIGV4dDE6IE1lZGlhIGZyYW1ld29yayBl
cnJvciBjb2RlLgogICAgICAgIC8vIGV4dDI6IEltcGxlbWVudGF0aW9uIGRlcGVuZGFudCBlcnJvciBj
b2RlLgogICAgICAgIGlmIChleHQxICE9IE1FRElBX0lORk9fVklERU9fVFJBQ0tfTEFHR0lORykgewog
ICAgICAgICAgICBBTE9HVygiaW5mby93YXJuaW5nICglZCwgJWQpIiwgZXh0MSwgZXh0Mik7CiAgICAg
ICAgfQogICAgICAgIGJyZWFrOwogICAgY2FzZSBNRURJQV9TRUVLX0NPTVBMRVRFOgogICAgICAgIEFM
T0dWKCJSZWNlaXZlZCBzZWVrIGNvbXBsZXRlIik7CiAgICAgICAgaWYgKG1TZWVrUG9zaXRpb24gIT0g
bUN1cnJlbnRQb3NpdGlvbikgewogICAgICAgICAgICBBTE9HVigiRXhlY3V0aW5nIHF1ZXVlZCBzZWVr
VG8oJWQpIiwgbVNlZWtQb3NpdGlvbik7CiAgICAgICAgICAgIG1TZWVrUG9zaXRpb24gPSAtMTsKICAg
ICAgICAgICAgc2Vla1RvX2wobUN1cnJlbnRQb3NpdGlvbik7CiAgICAgICAgfQogICAgICAgIGVsc2Ug
ewogICAgICAgICAgICBBTE9HVigiQWxsIHNlZWtzIGNvbXBsZXRlIC0gcmV0dXJuIHRvIHJlZ3VsYXJs
eSBzY2hlZHVsZWQgcHJvZ3JhbSIpOwogICAgICAgICAgICBtQ3VycmVudFBvc2l0aW9uID0gbVNlZWtQ
b3NpdGlvbiA9IC0xOwogICAgICAgIH0KICAgICAgICBicmVhazsKICAgIGNhc2UgTUVESUFfQlVGRkVS
SU5HX1VQREFURToKICAgICAgICBBTE9HVigiYnVmZmVyaW5nICVkIiwgZXh0MSk7CiAgICAgICAgYnJl
YWs7CiAgICBjYXNlIE1FRElBX1NFVF9WSURFT19TSVpFOgogICAgICAgIEFMT0dWKCJOZXcgdmlkZW8g
c2l6ZSAlZCB4ICVkIiwgZXh0MSwgZXh0Mik7CiAgICAgICAgbVZpZGVvV2lkdGggPSBleHQxOwogICAg
ICAgIG1WaWRlb0hlaWdodCA9IGV4dDI7CiAgICAgICAgYnJlYWs7CiAgICBjYXNlIE1FRElBX1RJTUVE
X1RFWFQ6CiAgICAgICAgQUxPR1YoIlJlY2VpdmVkIHRpbWVkIHRleHQgbWVzc2FnZSIpOwogICAgICAg
IGJyZWFrOwogICAgY2FzZSBNRURJQV9TVUJUSVRMRV9EQVRBOgogICAgICAgIEFMT0dWKCJSZWNlaXZl
ZCBzdWJ0aXRsZSBkYXRhIG1lc3NhZ2UiKTsKICAgICAgICBicmVhazsKICAgIGRlZmF1bHQ6CiAgICAg
ICAgQUxPR1YoInVucmVjb2duaXplZCBtZXNzYWdlOiAoJWQsICVkLCAlZCkiLCBtc2csIGV4dDEsIGV4
dDIpOwogICAgICAgIGJyZWFrOwogICAgfQoKICAgIHNwPE1lZGlhUGxheWVyTGlzdGVuZXI+IGxpc3Rl
bmVyID0gbUxpc3RlbmVyOwogICAgaWYgKGxvY2tlZCkgbUxvY2sudW5sb2NrKCk7CgogICAgLy8gdGhp
cyBwcmV2ZW50cyByZS1lbnRyYW50IGNhbGxzIGludG8gY2xpZW50IGNvZGUKICAgIGlmICgobGlzdGVu
ZXIgIT0gMCkgJiYgc2VuZCkgewogICAgICAgIE11dGV4OjpBdXRvbG9jayBfbChtTm90aWZ5TG9jayk7
CiAgICAgICAgQUxPR1YoImNhbGxiYWNrIGFwcGxpY2F0aW9uIik7CiAgICAgICAgbGlzdGVuZXItPm5v
dGlmeShtc2csIGV4dDEsIGV4dDIsIG9iaik7CiAgICAgICAgQUxPR1YoImJhY2sgZnJvbSBjYWxsYmFj
ayIpOwogICAgfQp9CgovKnN0YXRpYyovIHN0YXR1c190IE1lZGlhUGxheWVyOjpkZWNvZGUoCiAgICAg
ICAgY29uc3Qgc3A8SU1lZGlhSFRUUFNlcnZpY2U+ICZodHRwU2VydmljZSwKICAgICAgICBjb25zdCBj
aGFyKiB1cmwsCiAgICAgICAgdWludDMyX3QgKnBTYW1wbGVSYXRlLAogICAgICAgIGludCogcE51bUNo
YW5uZWxzLAogICAgICAgIGF1ZGlvX2Zvcm1hdF90KiBwRm9ybWF0LAogICAgICAgIGNvbnN0IHNwPElN
ZW1vcnlIZWFwPiYgaGVhcCwKICAgICAgICBzaXplX3QgKnBTaXplKQp7CiAgICBBTE9HVigiZGVjb2Rl
KCVzKSIsIHVybCk7CiAgICBzdGF0dXNfdCBzdGF0dXM7CiAgICBjb25zdCBzcDxJTWVkaWFQbGF5ZXJT
ZXJ2aWNlPiYgc2VydmljZSA9IGdldE1lZGlhUGxheWVyU2VydmljZSgpOwogICAgaWYgKHNlcnZpY2Ug
IT0gMCkgewogICAgICAgIHN0YXR1cyA9IHNlcnZpY2UtPmRlY29kZShodHRwU2VydmljZSwgdXJsLCBw
U2FtcGxlUmF0ZSwgcE51bUNoYW5uZWxzLCBwRm9ybWF0LCBoZWFwLCBwU2l6ZSk7CiAgICB9IGVsc2Ug
ewogICAgICAgIEFMT0dFKCJVbmFibGUgdG8gbG9jYXRlIG1lZGlhIHNlcnZpY2UiKTsKICAgICAgICBz
dGF0dXMgPSBERUFEX09CSkVDVDsKICAgIH0KICAgIHJldHVybiBzdGF0dXM7Cgp9Cgp2b2lkIE1lZGlh
UGxheWVyOjpkaWVkKCkKewogICAgQUxPR1YoImRpZWQiKTsKICAgIG5vdGlmeShNRURJQV9FUlJPUiwg
TUVESUFfRVJST1JfU0VSVkVSX0RJRUQsIDApOwp9CgovKnN0YXRpYyovIHN0YXR1c190IE1lZGlhUGxh
eWVyOjpkZWNvZGUoaW50IGZkLCBpbnQ2NF90IG9mZnNldCwgaW50NjRfdCBsZW5ndGgsCiAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aW50MzJfdCAqcFNhbXBsZVJhdGUsIGludCog
cE51bUNoYW5uZWxzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXVkaW9f
Zm9ybWF0X3QqIHBGb3JtYXQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBj
b25zdCBzcDxJTWVtb3J5SGVhcD4mIGhlYXAsIHNpemVfdCAqcFNpemUpCnsKICAgIEFMT0dWKCJkZWNv
ZGUoJWQsICUiIFBSSWQ2NCAiLCAlIiBQUklkNjQgIikiLCBmZCwgb2Zmc2V0LCBsZW5ndGgpOwogICAg
c3RhdHVzX3Qgc3RhdHVzOwogICAgY29uc3Qgc3A8SU1lZGlhUGxheWVyU2VydmljZT4mIHNlcnZpY2Ug
PSBnZXRNZWRpYVBsYXllclNlcnZpY2UoKTsKICAgIGlmIChzZXJ2aWNlICE9IDApIHsKICAgICAgICBz
dGF0dXMgPSBzZXJ2aWNlLT5kZWNvZGUoZmQsIG9mZnNldCwgbGVuZ3RoLCBwU2FtcGxlUmF0ZSwKICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcE51bUNoYW5uZWxzLCBwRm9ybWF0LCBoZWFwLCBw
U2l6ZSk7CiAgICB9IGVsc2UgewogICAgICAgIEFMT0dFKCJVbmFibGUgdG8gbG9jYXRlIG1lZGlhIHNl
cnZpY2UiKTsKICAgICAgICBzdGF0dXMgPSBERUFEX09CSkVDVDsKICAgIH0KICAgIHJldHVybiBzdGF0
dXM7Cgp9CgpzdGF0dXNfdCBNZWRpYVBsYXllcjo6c2V0TmV4dE1lZGlhUGxheWVyKGNvbnN0IHNwPE1l
ZGlhUGxheWVyPiYgbmV4dCkgewogICAgaWYgKG1QbGF5ZXIgPT0gTlVMTCkgewogICAgICAgIHJldHVy
biBOT19JTklUOwogICAgfQoKICAgIGlmIChuZXh0ICE9IE5VTEwgJiYgIShuZXh0LT5tQ3VycmVudFN0
YXRlICYKICAgICAgICAgICAgKE1FRElBX1BMQVlFUl9QUkVQQVJFRCB8IE1FRElBX1BMQVlFUl9QQVVT
RUQgfCBNRURJQV9QTEFZRVJfUExBWUJBQ0tfQ09NUExFVEUpKSkgewogICAgICAgIEFMT0dFKCJuZXh0
IHBsYXllciBpcyBub3QgcHJlcGFyZWQiKTsKICAgICAgICByZXR1cm4gSU5WQUxJRF9PUEVSQVRJT047
CiAgICB9CgogICAgcmV0dXJuIG1QbGF5ZXItPnNldE5leHRQbGF5ZXIobmV4dCA9PSBOVUxMID8gTlVM
TCA6IG5leHQtPm1QbGF5ZXIpOwp9Cgp9OyAvLyBuYW1lc3BhY2UgYW5kcm9pZAo=</data><mime>application/octet-stream</mime><width>0</width><height>0</height><duration>0</duration><resource-attributes><file-name>mediaplayer.cpp</file-name></resource-attributes></resource><resource><data encoding="base64">LyoKICogQ29weXJpZ2h0IChDKSAyMDA4IEdvb2dsZSwgSW5jLgogKgogKiBCYXNlZCBvbiwgYnV0IG5v
IGxvbmdlciBjb21wYXRpYmxlIHdpdGgsIHRoZSBvcmlnaW5hbAogKiBPcGVuQmluZGVyLm9yZyBiaW5k
ZXIgZHJpdmVyIGludGVyZmFjZSwgd2hpY2ggaXM6CiAqCiAqIENvcHlyaWdodCAoYykgMjAwNSBQYWxt
c291cmNlLCBJbmMuCiAqCiAqIFRoaXMgc29mdHdhcmUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIHRlcm1z
IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMKICogTGljZW5zZSB2ZXJzaW9uIDIsIGFzIHB1Ymxpc2hl
ZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBhbmQKICogbWF5IGJlIGNvcGllZCwgZGlz
dHJpYnV0ZWQsIGFuZCBtb2RpZmllZCB1bmRlciB0aG9zZSB0ZXJtcy4KICoKICogVGhpcyBwcm9ncmFt
IGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCiAqIGJ1dCBX
SVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCiAq
IE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0
aGUKICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KICoKICovCgoj
aWZuZGVmIF9VQVBJX0xJTlVYX0JJTkRFUl9ICiNkZWZpbmUgX1VBUElfTElOVVhfQklOREVSX0gKCiNp
bmNsdWRlIDxsaW51eC90eXBlcy5oPgojaW5jbHVkZSA8bGludXgvaW9jdGwuaD4KCiNkZWZpbmUgQl9Q
QUNLX0NIQVJTKGMxLCBjMiwgYzMsIGM0KSBcCgkoKCgoYzEpPDwyNCkpIHwgKCgoYzIpPDwxNikpIHwg
KCgoYzMpPDw4KSkgfCAoYzQpKQojZGVmaW5lIEJfVFlQRV9MQVJHRSAweDg1CgplbnVtIHsKCUJJTkRF
Ul9UWVBFX0JJTkRFUgk9IEJfUEFDS19DSEFSUygncycsICdiJywgJyonLCBCX1RZUEVfTEFSR0UpLAoJ
QklOREVSX1RZUEVfV0VBS19CSU5ERVIJPSBCX1BBQ0tfQ0hBUlMoJ3cnLCAnYicsICcqJywgQl9UWVBF
X0xBUkdFKSwKCUJJTkRFUl9UWVBFX0hBTkRMRQk9IEJfUEFDS19DSEFSUygncycsICdoJywgJyonLCBC
X1RZUEVfTEFSR0UpLAoJQklOREVSX1RZUEVfV0VBS19IQU5ETEUJPSBCX1BBQ0tfQ0hBUlMoJ3cnLCAn
aCcsICcqJywgQl9UWVBFX0xBUkdFKSwKCUJJTkRFUl9UWVBFX0ZECQk9IEJfUEFDS19DSEFSUygnZics
ICdkJywgJyonLCBCX1RZUEVfTEFSR0UpLAp9OwoKZW51bSB7CglGTEFUX0JJTkRFUl9GTEFHX1BSSU9S
SVRZX01BU0sgPSAweGZmLAoJRkxBVF9CSU5ERVJfRkxBR19BQ0NFUFRTX0ZEUyA9IDB4MTAwLAp9OwoK
I2lmZGVmIEJJTkRFUl9JUENfMzJCSVQKdHlwZWRlZiBfX3UzMiBiaW5kZXJfc2l6ZV90Owp0eXBlZGVm
IF9fdTMyIGJpbmRlcl91aW50cHRyX3Q7CiNlbHNlCnR5cGVkZWYgX191NjQgYmluZGVyX3NpemVfdDsK
dHlwZWRlZiBfX3U2NCBiaW5kZXJfdWludHB0cl90OwojZW5kaWYKCi8qCiAqIFRoaXMgaXMgdGhlIGZs
YXR0ZW5lZCByZXByZXNlbnRhdGlvbiBvZiBhIEJpbmRlciBvYmplY3QgZm9yIHRyYW5zZmVyCiAqIGJl
dHdlZW4gcHJvY2Vzc2VzLiAgVGhlICdvZmZzZXRzJyBzdXBwbGllZCBhcyBwYXJ0IG9mIGEgYmluZGVy
IHRyYW5zYWN0aW9uCiAqIGNvbnRhaW5zIG9mZnNldHMgaW50byB0aGUgZGF0YSB3aGVyZSB0aGVzZSBz
dHJ1Y3R1cmVzIG9jY3VyLiAgVGhlIEJpbmRlcgogKiBkcml2ZXIgdGFrZXMgY2FyZSBvZiByZS13cml0
aW5nIHRoZSBzdHJ1Y3R1cmUgdHlwZSBhbmQgZGF0YSBhcyBpdCBtb3ZlcwogKiBiZXR3ZWVuIHByb2Nl
c3Nlcy4KICovCnN0cnVjdCBmbGF0X2JpbmRlcl9vYmplY3QgewoJLyogOCBieXRlcyBmb3IgbGFyZ2Vf
ZmxhdF9oZWFkZXIuICovCglfX3UzMgkJdHlwZTsKCV9fdTMyCQlmbGFnczsKCgkvKiA4IGJ5dGVzIG9m
IGRhdGEuICovCgl1bmlvbiB7CgkJYmluZGVyX3VpbnRwdHJfdAliaW5kZXI7CS8qIGxvY2FsIG9iamVj
dCAqLwoJCV9fdTMyCQkJaGFuZGxlOwkvKiByZW1vdGUgb2JqZWN0ICovCgl9OwoKCS8qIGV4dHJhIGRh
dGEgYXNzb2NpYXRlZCB3aXRoIGxvY2FsIG9iamVjdCAqLwoJYmluZGVyX3VpbnRwdHJfdAljb29raWU7
Cn07CgovKgogKiBPbiA2NC1iaXQgcGxhdGZvcm1zIHdoZXJlIHVzZXIgY29kZSBtYXkgcnVuIGluIDMy
LWJpdHMgdGhlIGRyaXZlciBtdXN0CiAqIHRyYW5zbGF0ZSB0aGUgYnVmZmVyIChhbmQgbG9jYWwgYmlu
ZGVyKSBhZGRyZXNzZXMgYXBwcm9wcmlhdGVseS4KICovCgpzdHJ1Y3QgYmluZGVyX3dyaXRlX3JlYWQg
ewoJYmluZGVyX3NpemVfdAkJd3JpdGVfc2l6ZTsJLyogYnl0ZXMgdG8gd3JpdGUgKi8KCWJpbmRlcl9z
aXplX3QJCXdyaXRlX2NvbnN1bWVkOwkvKiBieXRlcyBjb25zdW1lZCBieSBkcml2ZXIgKi8KCWJpbmRl
cl91aW50cHRyX3QJd3JpdGVfYnVmZmVyOwoJYmluZGVyX3NpemVfdAkJcmVhZF9zaXplOwkvKiBieXRl
cyB0byByZWFkICovCgliaW5kZXJfc2l6ZV90CQlyZWFkX2NvbnN1bWVkOwkvKiBieXRlcyBjb25zdW1l
ZCBieSBkcml2ZXIgKi8KCWJpbmRlcl91aW50cHRyX3QJcmVhZF9idWZmZXI7Cn07CgovKiBVc2Ugd2l0
aCBCSU5ERVJfVkVSU0lPTiwgZHJpdmVyIGZpbGxzIGluIGZpZWxkcy4gKi8Kc3RydWN0IGJpbmRlcl92
ZXJzaW9uIHsKCS8qIGRyaXZlciBwcm90b2NvbCB2ZXJzaW9uIC0tIGluY3JlbWVudCB3aXRoIGluY29t
cGF0aWJsZSBjaGFuZ2UgKi8KCV9fczMyICAgICAgIHByb3RvY29sX3ZlcnNpb247Cn07CgovKiBUaGlz
IGlzIHRoZSBjdXJyZW50IHByb3RvY29sIHZlcnNpb24uICovCiNpZmRlZiBCSU5ERVJfSVBDXzMyQklU
CiNkZWZpbmUgQklOREVSX0NVUlJFTlRfUFJPVE9DT0xfVkVSU0lPTiA3CiNlbHNlCiNkZWZpbmUgQklO
REVSX0NVUlJFTlRfUFJPVE9DT0xfVkVSU0lPTiA4CiNlbmRpZgoKI2RlZmluZSBCSU5ERVJfV1JJVEVf
UkVBRAkJX0lPV1IoJ2InLCAxLCBzdHJ1Y3QgYmluZGVyX3dyaXRlX3JlYWQpCiNkZWZpbmUgQklOREVS
X1NFVF9JRExFX1RJTUVPVVQJCV9JT1coJ2InLCAzLCBfX3M2NCkKI2RlZmluZSBCSU5ERVJfU0VUX01B
WF9USFJFQURTCQlfSU9XKCdiJywgNSwgX191MzIpCiNkZWZpbmUgQklOREVSX1NFVF9JRExFX1BSSU9S
SVRZCV9JT1coJ2InLCA2LCBfX3MzMikKI2RlZmluZSBCSU5ERVJfU0VUX0NPTlRFWFRfTUdSCQlfSU9X
KCdiJywgNywgX19zMzIpCiNkZWZpbmUgQklOREVSX1RIUkVBRF9FWElUCQlfSU9XKCdiJywgOCwgX19z
MzIpCiNkZWZpbmUgQklOREVSX1ZFUlNJT04JCQlfSU9XUignYicsIDksIHN0cnVjdCBiaW5kZXJfdmVy
c2lvbikKCi8qCiAqIE5PVEU6IFR3byBzcGVjaWFsIGVycm9yIGNvZGVzIHlvdSBzaG91bGQgY2hlY2sg
Zm9yIHdoZW4gY2FsbGluZwogKiBpbiB0byB0aGUgZHJpdmVyIGFyZToKICoKICogRUlOVFIgLS0gVGhl
IG9wZXJhdGlvbiBoYXMgYmVlbiBpbnRlcnVwdGVkLiAgVGhpcyBzaG91bGQgYmUKICogaGFuZGxlZCBi
eSByZXRyeWluZyB0aGUgaW9jdGwoKSB1bnRpbCBhIGRpZmZlcmVudCBlcnJvciBjb2RlCiAqIGlzIHJl
dHVybmVkLgogKgogKiBFQ09OTlJFRlVTRUQgLS0gVGhlIGRyaXZlciBpcyBubyBsb25nZXIgYWNjZXB0
aW5nIG9wZXJhdGlvbnMKICogZnJvbSB5b3VyIHByb2Nlc3MuICBUaGF0IGlzLCB0aGUgcHJvY2VzcyBp
cyBiZWluZyBkZXN0cm95ZWQuCiAqIFlvdSBzaG91bGQgaGFuZGxlIHRoaXMgYnkgZXhpdGluZyBmcm9t
IHlvdXIgcHJvY2Vzcy4gIE5vdGUKICogdGhhdCBvbmNlIHRoaXMgZXJyb3IgY29kZSBpcyByZXR1cm5l
ZCwgYWxsIGZ1cnRoZXIgY2FsbHMgdG8KICogdGhlIGRyaXZlciBmcm9tIGFueSB0aHJlYWQgd2lsbCBy
ZXR1cm4gdGhpcyBzYW1lIGNvZGUuCiAqLwoKZW51bSB0cmFuc2FjdGlvbl9mbGFncyB7CglURl9PTkVf
V0FZCT0gMHgwMSwJLyogdGhpcyBpcyBhIG9uZS13YXkgY2FsbDogYXN5bmMsIG5vIHJldHVybiAqLwoJ
VEZfUk9PVF9PQkpFQ1QJPSAweDA0LAkvKiBjb250ZW50cyBhcmUgdGhlIGNvbXBvbmVudCdzIHJvb3Qg
b2JqZWN0ICovCglURl9TVEFUVVNfQ09ERQk9IDB4MDgsCS8qIGNvbnRlbnRzIGFyZSBhIDMyLWJpdCBz
dGF0dXMgY29kZSAqLwoJVEZfQUNDRVBUX0ZEUwk9IDB4MTAsCS8qIGFsbG93IHJlcGxpZXMgd2l0aCBm
aWxlIGRlc2NyaXB0b3JzICovCn07CgpzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uX2RhdGEgewoJLyog
VGhlIGZpcnN0IHR3byBhcmUgb25seSB1c2VkIGZvciBiY1RSQU5TQUNUSU9OIGFuZCBiclRSQU5TQUNU
SU9OLAoJICogaWRlbnRpZnlpbmcgdGhlIHRhcmdldCBhbmQgY29udGVudHMgb2YgdGhlIHRyYW5zYWN0
aW9uLgoJICovCgl1bmlvbiB7CgkJLyogdGFyZ2V0IGRlc2NyaXB0b3Igb2YgY29tbWFuZCB0cmFuc2Fj
dGlvbiAqLwoJCV9fdTMyCWhhbmRsZTsKCQkvKiB0YXJnZXQgZGVzY3JpcHRvciBvZiByZXR1cm4gdHJh
bnNhY3Rpb24gKi8KCQliaW5kZXJfdWludHB0cl90IHB0cjsKCX0gdGFyZ2V0OwoJYmluZGVyX3VpbnRw
dHJfdAljb29raWU7CS8qIHRhcmdldCBvYmplY3QgY29va2llICovCglfX3UzMgkJY29kZTsJCS8qIHRy
YW5zYWN0aW9uIGNvbW1hbmQgKi8KCgkvKiBHZW5lcmFsIGluZm9ybWF0aW9uIGFib3V0IHRoZSB0cmFu
c2FjdGlvbi4gKi8KCV9fdTMyCSAgICAgICAgZmxhZ3M7CglwaWRfdAkJc2VuZGVyX3BpZDsKCXVpZF90
CQlzZW5kZXJfZXVpZDsKCWJpbmRlcl9zaXplX3QJZGF0YV9zaXplOwkvKiBudW1iZXIgb2YgYnl0ZXMg
b2YgZGF0YSAqLwoJYmluZGVyX3NpemVfdAlvZmZzZXRzX3NpemU7CS8qIG51bWJlciBvZiBieXRlcyBv
ZiBvZmZzZXRzICovCgoJLyogSWYgdGhpcyB0cmFuc2FjdGlvbiBpcyBpbmxpbmUsIHRoZSBkYXRhIGlt
bWVkaWF0ZWx5CgkgKiBmb2xsb3dzIGhlcmU7IG90aGVyd2lzZSwgaXQgZW5kcyB3aXRoIGEgcG9pbnRl
ciB0bwoJICogdGhlIGRhdGEgYnVmZmVyLgoJICovCgl1bmlvbiB7CgkJc3RydWN0IHsKCQkJLyogdHJh
bnNhY3Rpb24gZGF0YSAqLwoJCQliaW5kZXJfdWludHB0cl90CWJ1ZmZlcjsKCQkJLyogb2Zmc2V0cyBm
cm9tIGJ1ZmZlciB0byBmbGF0X2JpbmRlcl9vYmplY3Qgc3RydWN0cyAqLwoJCQliaW5kZXJfdWludHB0
cl90CW9mZnNldHM7CgkJfSBwdHI7CgkJX191OAlidWZbOF07Cgl9IGRhdGE7Cn07CgpzdHJ1Y3QgYmlu
ZGVyX3B0cl9jb29raWUgewoJYmluZGVyX3VpbnRwdHJfdCBwdHI7CgliaW5kZXJfdWludHB0cl90IGNv
b2tpZTsKfTsKCnN0cnVjdCBiaW5kZXJfaGFuZGxlX2Nvb2tpZSB7CglfX3UzMiBoYW5kbGU7CgliaW5k
ZXJfdWludHB0cl90IGNvb2tpZTsKfSBfX3BhY2tlZDsKCnN0cnVjdCBiaW5kZXJfcHJpX2Rlc2MgewoJ
X19zMzIgcHJpb3JpdHk7CglfX3UzMiBkZXNjOwp9OwoKc3RydWN0IGJpbmRlcl9wcmlfcHRyX2Nvb2tp
ZSB7CglfX3MzMiBwcmlvcml0eTsKCWJpbmRlcl91aW50cHRyX3QgcHRyOwoJYmluZGVyX3VpbnRwdHJf
dCBjb29raWU7Cn07CgplbnVtIGJpbmRlcl9kcml2ZXJfcmV0dXJuX3Byb3RvY29sIHsKCUJSX0VSUk9S
ID0gX0lPUigncicsIDAsIF9fczMyKSwKCS8qCgkgKiBpbnQ6IGVycm9yIGNvZGUKCSAqLwoKCUJSX09L
ID0gX0lPKCdyJywgMSksCgkvKiBObyBwYXJhbWV0ZXJzISAqLwoKCUJSX1RSQU5TQUNUSU9OID0gX0lP
UigncicsIDIsIHN0cnVjdCBiaW5kZXJfdHJhbnNhY3Rpb25fZGF0YSksCglCUl9SRVBMWSA9IF9JT1Io
J3InLCAzLCBzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uX2RhdGEpLAoJLyoKCSAqIGJpbmRlcl90cmFu
c2FjdGlvbl9kYXRhOiB0aGUgcmVjZWl2ZWQgY29tbWFuZC4KCSAqLwoKCUJSX0FDUVVJUkVfUkVTVUxU
ID0gX0lPUigncicsIDQsIF9fczMyKSwKCS8qCgkgKiBub3QgY3VycmVudGx5IHN1cHBvcnRlZAoJICog
aW50OiAwIGlmIHRoZSBsYXN0IGJjQVRURU1QVF9BQ1FVSVJFIHdhcyBub3Qgc3VjY2Vzc2Z1bC4KCSAq
IEVsc2UgdGhlIHJlbW90ZSBvYmplY3QgaGFzIGFjcXVpcmVkIGEgcHJpbWFyeSByZWZlcmVuY2UuCgkg
Ki8KCglCUl9ERUFEX1JFUExZID0gX0lPKCdyJywgNSksCgkvKgoJICogVGhlIHRhcmdldCBvZiB0aGUg
bGFzdCB0cmFuc2FjdGlvbiAoZWl0aGVyIGEgYmNUUkFOU0FDVElPTiBvcgoJICogYSBiY0FUVEVNUFRf
QUNRVUlSRSkgaXMgbm8gbG9uZ2VyIHdpdGggdXMuICBObyBwYXJhbWV0ZXJzLgoJICovCgoJQlJfVFJB
TlNBQ1RJT05fQ09NUExFVEUgPSBfSU8oJ3InLCA2KSwKCS8qCgkgKiBObyBwYXJhbWV0ZXJzLi4uIGFs
d2F5cyByZWZlcnMgdG8gdGhlIGxhc3QgdHJhbnNhY3Rpb24gcmVxdWVzdGVkCgkgKiAoaW5jbHVkaW5n
IHJlcGxpZXMpLiAgTm90ZSB0aGF0IHRoaXMgd2lsbCBiZSBzZW50IGV2ZW4gZm9yCgkgKiBhc3luY2hy
b25vdXMgdHJhbnNhY3Rpb25zLgoJICovCgoJQlJfSU5DUkVGUyA9IF9JT1IoJ3InLCA3LCBzdHJ1Y3Qg
YmluZGVyX3B0cl9jb29raWUpLAoJQlJfQUNRVUlSRSA9IF9JT1IoJ3InLCA4LCBzdHJ1Y3QgYmluZGVy
X3B0cl9jb29raWUpLAoJQlJfUkVMRUFTRSA9IF9JT1IoJ3InLCA5LCBzdHJ1Y3QgYmluZGVyX3B0cl9j
b29raWUpLAoJQlJfREVDUkVGUyA9IF9JT1IoJ3InLCAxMCwgc3RydWN0IGJpbmRlcl9wdHJfY29va2ll
KSwKCS8qCgkgKiB2b2lkICo6CXB0ciB0byBiaW5kZXIKCSAqIHZvaWQgKjogY29va2llIGZvciBiaW5k
ZXIKCSAqLwoKCUJSX0FUVEVNUFRfQUNRVUlSRSA9IF9JT1IoJ3InLCAxMSwgc3RydWN0IGJpbmRlcl9w
cmlfcHRyX2Nvb2tpZSksCgkvKgoJICogbm90IGN1cnJlbnRseSBzdXBwb3J0ZWQKCSAqIGludDoJcHJp
b3JpdHkKCSAqIHZvaWQgKjogcHRyIHRvIGJpbmRlcgoJICogdm9pZCAqOiBjb29raWUgZm9yIGJpbmRl
cgoJICovCgoJQlJfTk9PUCA9IF9JTygncicsIDEyKSwKCS8qCgkgKiBObyBwYXJhbWV0ZXJzLiAgRG8g
bm90aGluZyBhbmQgZXhhbWluZSB0aGUgbmV4dCBjb21tYW5kLiAgSXQgZXhpc3RzCgkgKiBwcmltYXJp
bHkgc28gdGhhdCB3ZSBjYW4gcmVwbGFjZSBpdCB3aXRoIGEgQlJfU1BBV05fTE9PUEVSIGNvbW1hbmQu
CgkgKi8KCglCUl9TUEFXTl9MT09QRVIgPSBfSU8oJ3InLCAxMyksCgkvKgoJICogTm8gcGFyYW1ldGVy
cy4gIFRoZSBkcml2ZXIgaGFzIGRldGVybWluZWQgdGhhdCBhIHByb2Nlc3MgaGFzIG5vCgkgKiB0aHJl
YWRzIHdhaXRpbmcgdG8gc2VydmljZSBpbmNvbWluZyB0cmFuc2FjdGlvbnMuICBXaGVuIGEgcHJvY2Vz
cwoJICogcmVjZWl2ZXMgdGhpcyBjb21tYW5kLCBpdCBtdXN0IHNwYXduIGEgbmV3IHNlcnZpY2UgdGhy
ZWFkIGFuZAoJICogcmVnaXN0ZXIgaXQgdmlhIGJjRU5URVJfTE9PUEVSLgoJICovCgoJQlJfRklOSVNI
RUQgPSBfSU8oJ3InLCAxNCksCgkvKgoJICogbm90IGN1cnJlbnRseSBzdXBwb3J0ZWQKCSAqIHN0b3Ag
dGhyZWFkcG9vbCB0aHJlYWQKCSAqLwoKCUJSX0RFQURfQklOREVSID0gX0lPUigncicsIDE1LCBiaW5k
ZXJfdWludHB0cl90KSwKCS8qCgkgKiB2b2lkICo6IGNvb2tpZQoJICovCglCUl9DTEVBUl9ERUFUSF9O
T1RJRklDQVRJT05fRE9ORSA9IF9JT1IoJ3InLCAxNiwgYmluZGVyX3VpbnRwdHJfdCksCgkvKgoJICog
dm9pZCAqOiBjb29raWUKCSAqLwoKCUJSX0ZBSUxFRF9SRVBMWSA9IF9JTygncicsIDE3KSwKCS8qCgkg
KiBUaGUgdGhlIGxhc3QgdHJhbnNhY3Rpb24gKGVpdGhlciBhIGJjVFJBTlNBQ1RJT04gb3IKCSAqIGEg
YmNBVFRFTVBUX0FDUVVJUkUpIGZhaWxlZCAoZS5nLiBvdXQgb2YgbWVtb3J5KS4gIE5vIHBhcmFtZXRl
cnMuCgkgKi8KfTsKCmVudW0gYmluZGVyX2RyaXZlcl9jb21tYW5kX3Byb3RvY29sIHsKCUJDX1RSQU5T
QUNUSU9OID0gX0lPVygnYycsIDAsIHN0cnVjdCBiaW5kZXJfdHJhbnNhY3Rpb25fZGF0YSksCglCQ19S
RVBMWSA9IF9JT1coJ2MnLCAxLCBzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uX2RhdGEpLAoJLyoKCSAq
IGJpbmRlcl90cmFuc2FjdGlvbl9kYXRhOiB0aGUgc2VudCBjb21tYW5kLgoJICovCgoJQkNfQUNRVUlS
RV9SRVNVTFQgPSBfSU9XKCdjJywgMiwgX19zMzIpLAoJLyoKCSAqIG5vdCBjdXJyZW50bHkgc3VwcG9y
dGVkCgkgKiBpbnQ6ICAwIGlmIHRoZSBsYXN0IEJSX0FUVEVNUFRfQUNRVUlSRSB3YXMgbm90IHN1Y2Nl
c3NmdWwuCgkgKiBFbHNlIHlvdSBoYXZlIGFjcXVpcmVkIGEgcHJpbWFyeSByZWZlcmVuY2Ugb24gdGhl
IG9iamVjdC4KCSAqLwoKCUJDX0ZSRUVfQlVGRkVSID0gX0lPVygnYycsIDMsIGJpbmRlcl91aW50cHRy
X3QpLAoJLyoKCSAqIHZvaWQgKjogcHRyIHRvIHRyYW5zYWN0aW9uIGRhdGEgcmVjZWl2ZWQgb24gYSBy
ZWFkCgkgKi8KCglCQ19JTkNSRUZTID0gX0lPVygnYycsIDQsIF9fdTMyKSwKCUJDX0FDUVVJUkUgPSBf
SU9XKCdjJywgNSwgX191MzIpLAoJQkNfUkVMRUFTRSA9IF9JT1coJ2MnLCA2LCBfX3UzMiksCglCQ19E
RUNSRUZTID0gX0lPVygnYycsIDcsIF9fdTMyKSwKCS8qCgkgKiBpbnQ6CWRlc2NyaXB0b3IKCSAqLwoK
CUJDX0lOQ1JFRlNfRE9ORSA9IF9JT1coJ2MnLCA4LCBzdHJ1Y3QgYmluZGVyX3B0cl9jb29raWUpLAoJ
QkNfQUNRVUlSRV9ET05FID0gX0lPVygnYycsIDksIHN0cnVjdCBiaW5kZXJfcHRyX2Nvb2tpZSksCgkv
KgoJICogdm9pZCAqOiBwdHIgdG8gYmluZGVyCgkgKiB2b2lkICo6IGNvb2tpZSBmb3IgYmluZGVyCgkg
Ki8KCglCQ19BVFRFTVBUX0FDUVVJUkUgPSBfSU9XKCdjJywgMTAsIHN0cnVjdCBiaW5kZXJfcHJpX2Rl
c2MpLAoJLyoKCSAqIG5vdCBjdXJyZW50bHkgc3VwcG9ydGVkCgkgKiBpbnQ6IHByaW9yaXR5CgkgKiBp
bnQ6IGRlc2NyaXB0b3IKCSAqLwoKCUJDX1JFR0lTVEVSX0xPT1BFUiA9IF9JTygnYycsIDExKSwKCS8q
CgkgKiBObyBwYXJhbWV0ZXJzLgoJICogUmVnaXN0ZXIgYSBzcGF3bmVkIGxvb3BlciB0aHJlYWQgd2l0
aCB0aGUgZGV2aWNlLgoJICovCgoJQkNfRU5URVJfTE9PUEVSID0gX0lPKCdjJywgMTIpLAoJQkNfRVhJ
VF9MT09QRVIgPSBfSU8oJ2MnLCAxMyksCgkvKgoJICogTm8gcGFyYW1ldGVycy4KCSAqIFRoZXNlIHR3
byBjb21tYW5kcyBhcmUgc2VudCBhcyBhbiBhcHBsaWNhdGlvbi1sZXZlbCB0aHJlYWQKCSAqIGVudGVy
cyBhbmQgZXhpdHMgdGhlIGJpbmRlciBsb29wLCByZXNwZWN0aXZlbHkuICBUaGV5IGFyZQoJICogdXNl
ZCBzbyB0aGUgYmluZGVyIGNhbiBoYXZlIGFuIGFjY3VyYXRlIGNvdW50IG9mIHRoZSBudW1iZXIKCSAq
IG9mIGxvb3BpbmcgdGhyZWFkcyBpdCBoYXMgYXZhaWxhYmxlLgoJICovCgoJQkNfUkVRVUVTVF9ERUFU
SF9OT1RJRklDQVRJT04gPSBfSU9XKCdjJywgMTQsCgkJCQkJCXN0cnVjdCBiaW5kZXJfaGFuZGxlX2Nv
b2tpZSksCgkvKgoJICogaW50OiBoYW5kbGUKCSAqIHZvaWQgKjogY29va2llCgkgKi8KCglCQ19DTEVB
Ul9ERUFUSF9OT1RJRklDQVRJT04gPSBfSU9XKCdjJywgMTUsCgkJCQkJCXN0cnVjdCBiaW5kZXJfaGFu
ZGxlX2Nvb2tpZSksCgkvKgoJICogaW50OiBoYW5kbGUKCSAqIHZvaWQgKjogY29va2llCgkgKi8KCglC
Q19ERUFEX0JJTkRFUl9ET05FID0gX0lPVygnYycsIDE2LCBiaW5kZXJfdWludHB0cl90KSwKCS8qCgkg
KiB2b2lkICo6IGNvb2tpZQoJICovCn07CgojZW5kaWYgLyogX1VBUElfTElOVVhfQklOREVSX0ggKi8K
Cg==</data><mime>application/octet-stream</mime><width>0</width><height>0</height><duration>0</duration><resource-attributes><file-name>binder.h</file-name></resource-attributes></resource><resource><data encoding="base64">LyoKKioKKiogQ29weXJpZ2h0IDIwMDgsIFRoZSBBbmRyb2lkIE9wZW4gU291cmNlIFByb2plY3QKKioK
KiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNl
bnNlIik7CioqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0
aCB0aGUgTGljZW5zZS4KKiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0Cioq
CioqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKKioKKiogVW5s
ZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0
d2FyZQoqKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAi
QVMgSVMiIEJBU0lTLAoqKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lO
RCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KKiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3Bl
Y2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAoqKiBsaW1pdGF0aW9ucyB1bmRl
ciB0aGUgTGljZW5zZS4KKi8KCi8vIFByb3h5IGZvciBtZWRpYSBwbGF5ZXIgaW1wbGVtZW50YXRpb25z
CgovLyNkZWZpbmUgTE9HX05ERUJVRyAwCiNkZWZpbmUgTE9HX1RBRyAiTWVkaWFQbGF5ZXJTZXJ2aWNl
IgojaW5jbHVkZSA8dXRpbHMvTG9nLmg+CgojaW5jbHVkZSA8c3lzL3R5cGVzLmg+CiNpbmNsdWRlIDxz
eXMvc3RhdC5oPgojaW5jbHVkZSA8c3lzL3RpbWUuaD4KI2luY2x1ZGUgPGRpcmVudC5oPgojaW5jbHVk
ZSA8dW5pc3RkLmg+CgojaW5jbHVkZSA8c3RyaW5nLmg+CgojaW5jbHVkZSA8Y3V0aWxzL2F0b21pYy5o
PgojaW5jbHVkZSA8Y3V0aWxzL3Byb3BlcnRpZXMuaD4gLy8gZm9yIHByb3BlcnR5X2dldAoKI2luY2x1
ZGUgPHV0aWxzL21pc2MuaD4KCiNpbmNsdWRlIDxiaW5kZXIvSUJhdHRlcnlTdGF0cy5oPgojaW5jbHVk
ZSA8YmluZGVyL0lQQ1RocmVhZFN0YXRlLmg+CiNpbmNsdWRlIDxiaW5kZXIvSVNlcnZpY2VNYW5hZ2Vy
Lmg+CiNpbmNsdWRlIDxiaW5kZXIvTWVtb3J5SGVhcEJhc2UuaD4KI2luY2x1ZGUgPGJpbmRlci9NZW1v
cnlCYXNlLmg+CiNpbmNsdWRlIDxndWkvU3VyZmFjZS5oPgojaW5jbHVkZSA8dXRpbHMvRXJyb3JzLmg+
ICAvLyBmb3Igc3RhdHVzX3QKI2luY2x1ZGUgPHV0aWxzL1N0cmluZzguaD4KI2luY2x1ZGUgPHV0aWxz
L1N5c3RlbUNsb2NrLmg+CiNpbmNsdWRlIDx1dGlscy9UaW1lcnMuaD4KI2luY2x1ZGUgPHV0aWxzL1Zl
Y3Rvci5oPgoKI2luY2x1ZGUgPG1lZGlhL0lNZWRpYUhUVFBTZXJ2aWNlLmg+CiNpbmNsdWRlIDxtZWRp
YS9JUmVtb3RlRGlzcGxheS5oPgojaW5jbHVkZSA8bWVkaWEvSVJlbW90ZURpc3BsYXlDbGllbnQuaD4K
I2luY2x1ZGUgPG1lZGlhL01lZGlhUGxheWVySW50ZXJmYWNlLmg+CiNpbmNsdWRlIDxtZWRpYS9tZWRp
YXJlY29yZGVyLmg+CiNpbmNsdWRlIDxtZWRpYS9NZWRpYU1ldGFkYXRhUmV0cmlldmVySW50ZXJmYWNl
Lmg+CiNpbmNsdWRlIDxtZWRpYS9NZXRhZGF0YS5oPgojaW5jbHVkZSA8bWVkaWEvQXVkaW9UcmFjay5o
PgojaW5jbHVkZSA8bWVkaWEvTWVtb3J5TGVha1RyYWNrVXRpbC5oPgojaW5jbHVkZSA8bWVkaWEvc3Rh
Z2VmcmlnaHQvTWVkaWFDb2RlY0xpc3QuaD4KI2luY2x1ZGUgPG1lZGlhL3N0YWdlZnJpZ2h0L01lZGlh
RXJyb3JzLmg+CiNpbmNsdWRlIDxtZWRpYS9zdGFnZWZyaWdodC9BdWRpb1BsYXllci5oPgojaW5jbHVk
ZSA8bWVkaWEvc3RhZ2VmcmlnaHQvZm91bmRhdGlvbi9BRGVidWcuaD4KCiNpbmNsdWRlIDxzeXN0ZW0v
YXVkaW8uaD4KCiNpbmNsdWRlIDxwcml2YXRlL2FuZHJvaWRfZmlsZXN5c3RlbV9jb25maWcuaD4KCiNp
bmNsdWRlICJBY3Rpdml0eU1hbmFnZXIuaCIKI2luY2x1ZGUgIk1lZGlhUmVjb3JkZXJDbGllbnQuaCIK
I2luY2x1ZGUgIk1lZGlhUGxheWVyU2VydmljZS5oIgojaW5jbHVkZSAiTWV0YWRhdGFSZXRyaWV2ZXJD
bGllbnQuaCIKI2luY2x1ZGUgIk1lZGlhUGxheWVyRmFjdG9yeS5oIgoKI2luY2x1ZGUgIk1pZGlGaWxl
LmgiCiNpbmNsdWRlICJUZXN0UGxheWVyU3R1Yi5oIgojaW5jbHVkZSAiU3RhZ2VmcmlnaHRQbGF5ZXIu
aCIKI2luY2x1ZGUgIm51cGxheWVyL051UGxheWVyRHJpdmVyLmgiCgojaW5jbHVkZSA8T01YLmg+Cgoj
aW5jbHVkZSAiQ3J5cHRvLmgiCiNpbmNsdWRlICJEcm0uaCIKI2luY2x1ZGUgIkhEQ1AuaCIKI2luY2x1
ZGUgIkhUVFBCYXNlLmgiCiNpbmNsdWRlICJSZW1vdGVEaXNwbGF5LmgiCgpuYW1lc3BhY2Ugewp1c2lu
ZyBhbmRyb2lkOjptZWRpYTo6TWV0YWRhdGE7CnVzaW5nIGFuZHJvaWQ6OnN0YXR1c190Owp1c2luZyBh
bmRyb2lkOjpPSzsKdXNpbmcgYW5kcm9pZDo6QkFEX1ZBTFVFOwp1c2luZyBhbmRyb2lkOjpOT1RfRU5P
VUdIX0RBVEE7CnVzaW5nIGFuZHJvaWQ6OlBhcmNlbDsKCi8vIE1heCBudW1iZXIgb2YgZW50cmllcyBp
biB0aGUgZmlsdGVyLgpjb25zdCBpbnQga01heEZpbHRlclNpemUgPSA2NDsgIC8vIEkgcHVsbGVkIHRo
YXQgb3V0IG9mIHRoaW4gYWlyLgoKLy8gRklYTUU6IE1vdmUgYWxsIHRoZSBtZXRhZGF0YSByZWxhdGVk
IGZ1bmN0aW9uIGluIHRoZSBNZXRhZGF0YS5jcHAKCgovLyBVbm1hcnNoYWxsIGEgZmlsdGVyIGZyb20g
YSBQYXJjZWwuCi8vIEZpbHRlciBmb3JtYXQgaW4gYSBwYXJjZWw6Ci8vCi8vICAwIDEgMiAzIDQgNSA2
IDcgOCA5IDAgMSAyIDMgNCA1IDYgNyA4IDkgMCAxIDIgMyA0IDUgNiA3IDggOSAwIDEKLy8gKy0rLSst
Ky0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSsK
Ly8gfCAgICAgICAgICAgICAgICAgICAgICAgbnVtYmVyIG9mIGVudHJpZXMgKG4pICAgICAgICAgICAg
ICAgICAgIHwKLy8gKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSst
Ky0rLSstKy0rLSstKy0rLSsKLy8gfCAgICAgICAgICAgICAgICAgICAgICAgbWV0YWRhdGEgdHlwZSAx
ICAgICAgICAgICAgICAgICAgICAgICAgIHwKLy8gKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSst
Ky0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSsKLy8gfCAgICAgICAgICAgICAgICAgICAg
ICAgbWV0YWRhdGEgdHlwZSAyICAgICAgICAgICAgICAgICAgICAgICAgIHwKLy8gKy0rLSstKy0rLSst
Ky0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSsKLy8gIC4u
Li4KLy8gKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSst
Ky0rLSstKy0rLSsKLy8gfCAgICAgICAgICAgICAgICAgICAgICAgbWV0YWRhdGEgdHlwZSBuICAgICAg
ICAgICAgICAgICAgICAgICAgIHwKLy8gKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSst
Ky0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSsKLy8KLy8gQHBhcmFtIHAgUGFyY2VsIHRoYXQgc2hv
dWxkIHN0YXJ0IHdpdGggYSBmaWx0ZXIuCi8vIEBwYXJhbVtvdXRdIGZpbHRlciBPbiBleGl0IGNvbnRh
aW5zIHRoZSBsaXN0IG9mIG1ldGFkYXRhIHR5cGUgdG8gYmUKLy8gICAgICAgICAgICAgICAgICAgIGZp
bHRlcmVkLgovLyBAcGFyYW1bb3V0XSBzdGF0dXMgT24gZXhpdCBjb250YWlucyB0aGUgc3RhdHVzIGNv
ZGUgdG8gYmUgcmV0dXJuZWQuCi8vIEByZXR1cm4gdHJ1ZSBpZiB0aGUgcGFyY2VsIHN0YXJ0cyB3aXRo
IGEgdmFsaWQgZmlsdGVyLgpib29sIHVubWFyc2hhbGxGaWx0ZXIoY29uc3QgUGFyY2VsJiBwLAogICAg
ICAgICAgICAgICAgICAgICAgTWV0YWRhdGE6OkZpbHRlciAqZmlsdGVyLAogICAgICAgICAgICAgICAg
ICAgICAgc3RhdHVzX3QgKnN0YXR1cykKewogICAgaW50MzJfdCB2YWw7CiAgICBpZiAocC5yZWFkSW50
MzIoJnZhbCkgIT0gT0spCiAgICB7CiAgICAgICAgQUxPR0UoIkZhaWxlZCB0byByZWFkIGZpbHRlcidz
IGxlbmd0aCIpOwogICAgICAgICpzdGF0dXMgPSBOT1RfRU5PVUdIX0RBVEE7CiAgICAgICAgcmV0dXJu
IGZhbHNlOwogICAgfQoKICAgIGlmKCB2YWwgPiBrTWF4RmlsdGVyU2l6ZSB8fCB2YWwgPCAwKQogICAg
ewogICAgICAgIEFMT0dFKCJJbnZhbGlkIGZpbHRlciBsZW4gJWQiLCB2YWwpOwogICAgICAgICpzdGF0
dXMgPSBCQURfVkFMVUU7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQoKICAgIGNvbnN0IHNpemVf
dCBudW0gPSB2YWw7CgogICAgZmlsdGVyLT5jbGVhcigpOwogICAgZmlsdGVyLT5zZXRDYXBhY2l0eShu
dW0pOwoKICAgIHNpemVfdCBzaXplID0gbnVtICogc2l6ZW9mKE1ldGFkYXRhOjpUeXBlKTsKCgogICAg
aWYgKHAuZGF0YUF2YWlsKCkgPCBzaXplKQogICAgewogICAgICAgIEFMT0dFKCJGaWx0ZXIgdG9vIHNo
b3J0IGV4cGVjdGVkICVkIGJ1dCBnb3QgJWQiLCBzaXplLCBwLmRhdGFBdmFpbCgpKTsKICAgICAgICAq
c3RhdHVzID0gTk9UX0VOT1VHSF9EQVRBOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KCiAgICBj
b25zdCBNZXRhZGF0YTo6VHlwZSAqZGF0YSA9CiAgICAgICAgICAgIHN0YXRpY19jYXN0PGNvbnN0IE1l
dGFkYXRhOjpUeXBlKj4ocC5yZWFkSW5wbGFjZShzaXplKSk7CgogICAgaWYgKE5VTEwgPT0gZGF0YSkK
ICAgIHsKICAgICAgICBBTE9HRSgiRmlsdGVyIGhhZCBubyBkYXRhIik7CiAgICAgICAgKnN0YXR1cyA9
IEJBRF9WQUxVRTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9CgogICAgLy8gVE9ETzogVGhlIHN0
bCBpbXBsIG9mIHZlY3RvciB3b3VsZCBiZSBtb3JlIGVmZmljaWVudCBoZXJlCiAgICAvLyBiZWNhdXNl
IGl0IGRlZ2VuZXJhdGVzIGludG8gYSBtZW1jcHkgb24gcG9kIHR5cGVzLiBUcnkgdG8KICAgIC8vIHJl
cGxhY2UgbGF0ZXIgb3IgdXNlIHN0bDo6c2V0LgogICAgZm9yIChzaXplX3QgaSA9IDA7IGkgPCBudW07
ICsraSkKICAgIHsKICAgICAgICBmaWx0ZXItPmFkZCgqZGF0YSk7CiAgICAgICAgKytkYXRhOwogICAg
fQogICAgKnN0YXR1cyA9IE9LOwogICAgcmV0dXJuIHRydWU7Cn0KCi8vIEBwYXJhbSBmaWx0ZXIgT2Yg
bWV0YWRhdGEgdHlwZS4KLy8gQHBhcmFtIHZhbCBUbyBiZSBzZWFyY2hlZC4KLy8gQHJldHVybiB0cnVl
IGlmIGEgbWF0Y2ggd2FzIGZvdW5kLgpib29sIGZpbmRNZXRhZGF0YShjb25zdCBNZXRhZGF0YTo6Rmls
dGVyJiBmaWx0ZXIsIGNvbnN0IGludDMyX3QgdmFsKQp7CiAgICAvLyBEZWFsIHdpdGggZW1wdHkgYW5k
IEFOWSByaWdodCBhd2F5CiAgICBpZiAoZmlsdGVyLmlzRW1wdHkoKSkgcmV0dXJuIGZhbHNlOwogICAg
aWYgKGZpbHRlclswXSA9PSBNZXRhZGF0YTo6a0FueSkgcmV0dXJuIHRydWU7CgogICAgcmV0dXJuIGZp
bHRlci5pbmRleE9mKHZhbCkgPj0gMDsKfQoKfSAgLy8gYW5vbnltb3VzIG5hbWVzcGFjZQoKCm5hbWVz
cGFjZSB7CnVzaW5nIGFuZHJvaWQ6OlBhcmNlbDsKdXNpbmcgYW5kcm9pZDo6U3RyaW5nMTY7CgovLyBt
YXJzaGFsbGluZyB0YWcgaW5kaWNhdGluZyBmbGF0dGVuZWQgdXRmMTYgdGFncwovLyBrZWVwIGluIHN5
bmMgd2l0aCBmcmFtZXdvcmtzL2Jhc2UvbWVkaWEvamF2YS9hbmRyb2lkL21lZGlhL0F1ZGlvQXR0cmli
dXRlcy5qYXZhCmNvbnN0IGludDMyX3Qga0F1ZGlvQXR0cmlidXRlc01hcnNoYWxsVGFnRmxhdHRlblRh
Z3MgPSAxOwoKLy8gQXVkaW8gYXR0cmlidXRlcyBmb3JtYXQgaW4gYSBwYXJjZWw6Ci8vCi8vICAwIDEg
MiAzIDQgNSA2IDcgOCA5IDAgMSAyIDMgNCA1IDYgNyA4IDkgMCAxIDIgMyA0IDUgNiA3IDggOSAwIDEK
Ly8gKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0r
LSstKy0rLSsKLy8gfCAgICAgICAgICAgICAgICAgICAgICAgdXNhZ2UgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIHwKLy8gKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0r
LSstKy0rLSstKy0rLSstKy0rLSstKy0rLSsKLy8gfCAgICAgICAgICAgICAgICAgICAgICAgY29udGVu
dF90eXBlICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKLy8gKy0rLSstKy0rLSstKy0rLSstKy0r
LSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSsKLy8gfCAgICAgICAgICAg
ICAgICAgICAgICAgc291cmNlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKLy8gKy0r
LSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0r
LSsKLy8gfCAgICAgICAgICAgICAgICAgICAgICAgZmxhZ3MgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIHwKLy8gKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0r
LSstKy0rLSstKy0rLSstKy0rLSsKLy8gfCAgICAgICAgICAgICAgICAgICAgICAga0F1ZGlvQXR0cmli
dXRlc01hcnNoYWxsVGFnRmxhdHRlblRhZ3MgIHwgLy8gaWdub3JlIHRhZ3MgaWYgbm90IGZvdW5kCi8v
ICstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0r
LSstKy0rCi8vIHwgICAgICAgICAgICAgICAgICAgICAgIGZsYXR0ZW5lZCB0YWdzIGluIFVURjE2ICAg
ICAgICAgICAgICAgICB8Ci8vIHwgICAgICAgICAgICAgICAgICAgICAgICAgLi4uICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICB8Ci8vICstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSst
Ky0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rLSstKy0rCi8vCi8vIEBwYXJhbSBwIFBhcmNlbCB0aGF0
IGNvbnRhaW5zIGF1ZGlvIGF0dHJpYnV0ZXMuCi8vIEBwYXJhbVtvdXRdIGF0dHJpYnV0ZXMgT24gZXhp
dCBwb2ludHMgdG8gYW4gaW5pdGlhbGl6ZWQgYXVkaW9fYXR0cmlidXRlc190IHN0cnVjdHVyZQovLyBA
cGFyYW1bb3V0XSBzdGF0dXMgT24gZXhpdCBjb250YWlucyB0aGUgc3RhdHVzIGNvZGUgdG8gYmUgcmV0
dXJuZWQuCnZvaWQgdW5tYXJzaGFsbEF1ZGlvQXR0cmlidXRlcyhjb25zdCBQYXJjZWwmIHBhcmNlbCwg
YXVkaW9fYXR0cmlidXRlc190ICphdHRyaWJ1dGVzKQp7CiAgICBhdHRyaWJ1dGVzLT51c2FnZSA9IChh
dWRpb191c2FnZV90KSBwYXJjZWwucmVhZEludDMyKCk7CiAgICBhdHRyaWJ1dGVzLT5jb250ZW50X3R5
cGUgPSAoYXVkaW9fY29udGVudF90eXBlX3QpIHBhcmNlbC5yZWFkSW50MzIoKTsKICAgIGF0dHJpYnV0
ZXMtPnNvdXJjZSA9IChhdWRpb19zb3VyY2VfdCkgcGFyY2VsLnJlYWRJbnQzMigpOwogICAgYXR0cmli
dXRlcy0+ZmxhZ3MgPSAoYXVkaW9fZmxhZ3NfbWFza190KSBwYXJjZWwucmVhZEludDMyKCk7CiAgICBj
b25zdCBib29sIGhhc0ZsYXR0ZW5lZFRhZyA9IChwYXJjZWwucmVhZEludDMyKCkgPT0ga0F1ZGlvQXR0
cmlidXRlc01hcnNoYWxsVGFnRmxhdHRlblRhZ3MpOwogICAgaWYgKGhhc0ZsYXR0ZW5lZFRhZykgewog
ICAgICAgIC8vIHRoZSB0YWdzIGFyZSBVVEYxNiwgY29udmVydCB0byBVVEY4CiAgICAgICAgU3RyaW5n
MTYgdGFncyA9IHBhcmNlbC5yZWFkU3RyaW5nMTYoKTsKICAgICAgICBzc2l6ZV90IHJlYWxUYWdTaXpl
ID0gdXRmMTZfdG9fdXRmOF9sZW5ndGgodGFncy5zdHJpbmcoKSwgdGFncy5zaXplKCkpOwogICAgICAg
IGlmIChyZWFsVGFnU2l6ZSA8PSAwKSB7CiAgICAgICAgICAgIHN0cmNweShhdHRyaWJ1dGVzLT50YWdz
LCAiIik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8gY29weSB0aGUgZmxhdHRlbmVkIHN0
cmluZyBpbnRvIHRoZSBhdHRyaWJ1dGVzIGFzIHRoZSBkZXN0aW5hdGlvbiBmb3IgdGhlIGNvbnZlcnNp
b246CiAgICAgICAgICAgIC8vIGNvcHlpbmcgYXJyYXkgc2l6ZSAtMSwgYXJyYXkgZm9yIHRhZ3Mgd2Fz
IGNhbGxvYydkLCBubyBuZWVkIHRvIE5VTEwtdGVybWluYXRlIGl0CiAgICAgICAgICAgIHNpemVfdCB0
YWdTaXplID0gcmVhbFRhZ1NpemUgPiBBVURJT19BVFRSSUJVVEVTX1RBR1NfTUFYX1NJWkUgLSAxID8K
ICAgICAgICAgICAgICAgICAgICBBVURJT19BVFRSSUJVVEVTX1RBR1NfTUFYX1NJWkUgLSAxIDogcmVh
bFRhZ1NpemU7CiAgICAgICAgICAgIHV0ZjE2X3RvX3V0ZjgodGFncy5zdHJpbmcoKSwgdGFnU2l6ZSwg
YXR0cmlidXRlcy0+dGFncyk7CiAgICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgICBBTE9HRSgidW5t
YXJzaGFsbEF1ZGlvQXR0cmlidXRlcygpIHJlY2VpdmVkIHVuZmxhdHRlbmVkIHRhZ3MsIGlnbm9yaW5n
IHRhZyB2YWx1ZXMiKTsKICAgICAgICBzdHJjcHkoYXR0cmlidXRlcy0+dGFncywgIiIpOwogICAgfQp9
Cn0gLy8gYW5vbnltb3VzIG5hbWVzcGFjZQoKCm5hbWVzcGFjZSBhbmRyb2lkIHsKCnN0YXRpYyBib29s
IGNoZWNrUGVybWlzc2lvbihjb25zdCBjaGFyKiBwZXJtaXNzaW9uU3RyaW5nKSB7CiNpZm5kZWYgSEFW
RV9BTkRST0lEX09TCiAgICByZXR1cm4gdHJ1ZTsKI2VuZGlmCiAgICBpZiAoZ2V0cGlkKCkgPT0gSVBD
VGhyZWFkU3RhdGU6OnNlbGYoKS0+Z2V0Q2FsbGluZ1BpZCgpKSByZXR1cm4gdHJ1ZTsKICAgIGJvb2wg
b2sgPSBjaGVja0NhbGxpbmdQZXJtaXNzaW9uKFN0cmluZzE2KHBlcm1pc3Npb25TdHJpbmcpKTsKICAg
IGlmICghb2spIEFMT0dFKCJSZXF1ZXN0IHJlcXVpcmVzICVzIiwgcGVybWlzc2lvblN0cmluZyk7CiAg
ICByZXR1cm4gb2s7Cn0KCi8vIFRPRE86IEZpbmQgcmVhbCBjYXVzZSBvZiBBdWRpby9WaWRlbyBkZWxh
eSBpbiBQViBmcmFtZXdvcmsgYW5kIHJlbW92ZSB0aGlzIHdvcmthcm91bmQKLyogc3RhdGljICovIGlu
dCBNZWRpYVBsYXllclNlcnZpY2U6OkF1ZGlvT3V0cHV0OjptTWluQnVmZmVyQ291bnQgPSA0OwovKiBz
dGF0aWMgKi8gYm9vbCBNZWRpYVBsYXllclNlcnZpY2U6OkF1ZGlvT3V0cHV0OjptSXNPbkVtdWxhdG9y
ID0gZmFsc2U7Cgp2b2lkIE1lZGlhUGxheWVyU2VydmljZTo6aW5zdGFudGlhdGUoKSB7CiAgICBkZWZh
dWx0U2VydmljZU1hbmFnZXIoKS0+YWRkU2VydmljZSgKICAgICAgICAgICAgU3RyaW5nMTYoIm1lZGlh
LnBsYXllciIpLCBuZXcgTWVkaWFQbGF5ZXJTZXJ2aWNlKCkpOwp9CgpNZWRpYVBsYXllclNlcnZpY2U6
Ok1lZGlhUGxheWVyU2VydmljZSgpCnsKICAgIEFMT0dWKCJNZWRpYVBsYXllclNlcnZpY2UgY3JlYXRl
ZCIpOwogICAgbU5leHRDb25uSWQgPSAxOwoKICAgIG1CYXR0ZXJ5QXVkaW8ucmVmQ291bnQgPSAwOwog
ICAgZm9yIChpbnQgaSA9IDA7IGkgPCBOVU1fQVVESU9fREVWSUNFUzsgaSsrKSB7CiAgICAgICAgbUJh
dHRlcnlBdWRpby5kZXZpY2VPbltpXSA9IDA7CiAgICAgICAgbUJhdHRlcnlBdWRpby5sYXN0VGltZVtp
XSA9IDA7CiAgICAgICAgbUJhdHRlcnlBdWRpby50b3RhbFRpbWVbaV0gPSAwOwogICAgfQogICAgLy8g
c3BlYWtlciBpcyBvbiBieSBkZWZhdWx0CiAgICBtQmF0dGVyeUF1ZGlvLmRldmljZU9uW1NQRUFLRVJd
ID0gMTsKCiAgICAvLyByZXNldCBiYXR0ZXJ5IHN0YXRzCiAgICAvLyBpZiB0aGUgbWVkaWFzZXJ2ZXIg
aGFzIGNyYXNoZWQsIGJhdHRlcnkgc3RhdHMgY291bGQgYmUgbGVmdAogICAgLy8gaW4gYmFkIHN0YXRl
LCByZXNldCB0aGUgc3RhdGUgdXBvbiBzZXJ2aWNlIHN0YXJ0LgogICAgY29uc3Qgc3A8SVNlcnZpY2VN
YW5hZ2VyPiBzbShkZWZhdWx0U2VydmljZU1hbmFnZXIoKSk7CiAgICBpZiAoc20gIT0gTlVMTCkgewog
ICAgICAgIGNvbnN0IFN0cmluZzE2IG5hbWUoImJhdHRlcnlzdGF0cyIpOwogICAgICAgIHNwPElCYXR0
ZXJ5U3RhdHM+IGJhdHRlcnlTdGF0cyA9CiAgICAgICAgICAgICAgICBpbnRlcmZhY2VfY2FzdDxJQmF0
dGVyeVN0YXRzPihzbS0+Z2V0U2VydmljZShuYW1lKSk7CiAgICAgICAgaWYgKGJhdHRlcnlTdGF0cyAh
PSBOVUxMKSB7CiAgICAgICAgICAgIGJhdHRlcnlTdGF0cy0+bm90ZVJlc2V0VmlkZW8oKTsKICAgICAg
ICAgICAgYmF0dGVyeVN0YXRzLT5ub3RlUmVzZXRBdWRpbygpOwogICAgICAgIH0KICAgIH0KCiAgICBN
ZWRpYVBsYXllckZhY3Rvcnk6OnJlZ2lzdGVyQnVpbHRpbkZhY3RvcmllcygpOwp9CgpNZWRpYVBsYXll
clNlcnZpY2U6On5NZWRpYVBsYXllclNlcnZpY2UoKQp7CiAgICBBTE9HVigiTWVkaWFQbGF5ZXJTZXJ2
aWNlIGRlc3Ryb3llZCIpOwp9CgpzcDxJTWVkaWFSZWNvcmRlcj4gTWVkaWFQbGF5ZXJTZXJ2aWNlOjpj
cmVhdGVNZWRpYVJlY29yZGVyKCkKewogICAgcGlkX3QgcGlkID0gSVBDVGhyZWFkU3RhdGU6OnNlbGYo
KS0+Z2V0Q2FsbGluZ1BpZCgpOwogICAgc3A8TWVkaWFSZWNvcmRlckNsaWVudD4gcmVjb3JkZXIgPSBu
ZXcgTWVkaWFSZWNvcmRlckNsaWVudCh0aGlzLCBwaWQpOwogICAgd3A8TWVkaWFSZWNvcmRlckNsaWVu
dD4gdyA9IHJlY29yZGVyOwogICAgTXV0ZXg6OkF1dG9sb2NrIGxvY2sobUxvY2spOwogICAgbU1lZGlh
UmVjb3JkZXJDbGllbnRzLmFkZCh3KTsKICAgIEFMT0dWKCJDcmVhdGUgbmV3IG1lZGlhIHJlY29yZGVy
IGNsaWVudCBmcm9tIHBpZCAlZCIsIHBpZCk7CiAgICByZXR1cm4gcmVjb3JkZXI7Cn0KCnZvaWQgTWVk
aWFQbGF5ZXJTZXJ2aWNlOjpyZW1vdmVNZWRpYVJlY29yZGVyQ2xpZW50KHdwPE1lZGlhUmVjb3JkZXJD
bGllbnQ+IGNsaWVudCkKewogICAgTXV0ZXg6OkF1dG9sb2NrIGxvY2sobUxvY2spOwogICAgbU1lZGlh
UmVjb3JkZXJDbGllbnRzLnJlbW92ZShjbGllbnQpOwogICAgQUxPR1YoIkRlbGV0ZSBtZWRpYSByZWNv
cmRlciBjbGllbnQiKTsKfQoKc3A8SU1lZGlhTWV0YWRhdGFSZXRyaWV2ZXI+IE1lZGlhUGxheWVyU2Vy
dmljZTo6Y3JlYXRlTWV0YWRhdGFSZXRyaWV2ZXIoKQp7CiAgICBwaWRfdCBwaWQgPSBJUENUaHJlYWRT
dGF0ZTo6c2VsZigpLT5nZXRDYWxsaW5nUGlkKCk7CiAgICBzcDxNZXRhZGF0YVJldHJpZXZlckNsaWVu
dD4gcmV0cmlldmVyID0gbmV3IE1ldGFkYXRhUmV0cmlldmVyQ2xpZW50KHBpZCk7CiAgICBBTE9HVigi
Q3JlYXRlIG5ldyBtZWRpYSByZXRyaWV2ZXIgZnJvbSBwaWQgJWQiLCBwaWQpOwogICAgcmV0dXJuIHJl
dHJpZXZlcjsKfQoKc3A8SU1lZGlhUGxheWVyPiBNZWRpYVBsYXllclNlcnZpY2U6OmNyZWF0ZShjb25z
dCBzcDxJTWVkaWFQbGF5ZXJDbGllbnQ+JiBjbGllbnQsCiAgICAgICAgaW50IGF1ZGlvU2Vzc2lvbklk
KQp7CiAgICBwaWRfdCBwaWQgPSBJUENUaHJlYWRTdGF0ZTo6c2VsZigpLT5nZXRDYWxsaW5nUGlkKCk7
CiAgICBpbnQzMl90IGNvbm5JZCA9IGFuZHJvaWRfYXRvbWljX2luYygmbU5leHRDb25uSWQpOwoKICAg
IHNwPENsaWVudD4gYyA9IG5ldyBDbGllbnQoCiAgICAgICAgICAgIHRoaXMsIHBpZCwgY29ubklkLCBj
bGllbnQsIGF1ZGlvU2Vzc2lvbklkLAogICAgICAgICAgICBJUENUaHJlYWRTdGF0ZTo6c2VsZigpLT5n
ZXRDYWxsaW5nVWlkKCkpOwoKICAgIEFMT0dWKCJDcmVhdGUgbmV3IGNsaWVudCglZCkgZnJvbSBwaWQg
JWQsIHVpZCAlZCwgIiwgY29ubklkLCBwaWQsCiAgICAgICAgIElQQ1RocmVhZFN0YXRlOjpzZWxmKCkt
PmdldENhbGxpbmdVaWQoKSk7CgogICAgd3A8Q2xpZW50PiB3ID0gYzsKICAgIHsKICAgICAgICBNdXRl
eDo6QXV0b2xvY2sgbG9jayhtTG9jayk7CiAgICAgICAgbUNsaWVudHMuYWRkKHcpOwogICAgfQogICAg
cmV0dXJuIGM7Cn0KCnNwPElNZWRpYUNvZGVjTGlzdD4gTWVkaWFQbGF5ZXJTZXJ2aWNlOjpnZXRDb2Rl
Y0xpc3QoKSBjb25zdCB7CiAgICByZXR1cm4gTWVkaWFDb2RlY0xpc3Q6OmdldExvY2FsSW5zdGFuY2Uo
KTsKfQoKc3A8SU9NWD4gTWVkaWFQbGF5ZXJTZXJ2aWNlOjpnZXRPTVgoKSB7CiAgICBNdXRleDo6QXV0
b2xvY2sgYXV0b0xvY2sobUxvY2spOwoKICAgIGlmIChtT01YLmdldCgpID09IE5VTEwpIHsKICAgICAg
ICBtT01YID0gbmV3IE9NWDsKICAgIH0KCiAgICByZXR1cm4gbU9NWDsKfQoKc3A8SUNyeXB0bz4gTWVk
aWFQbGF5ZXJTZXJ2aWNlOjptYWtlQ3J5cHRvKCkgewogICAgcmV0dXJuIG5ldyBDcnlwdG87Cn0KCnNw
PElEcm0+IE1lZGlhUGxheWVyU2VydmljZTo6bWFrZURybSgpIHsKICAgIHJldHVybiBuZXcgRHJtOwp9
CgpzcDxJSERDUD4gTWVkaWFQbGF5ZXJTZXJ2aWNlOjptYWtlSERDUChib29sIGNyZWF0ZUVuY3J5cHRp
b25Nb2R1bGUpIHsKICAgIHJldHVybiBuZXcgSERDUChjcmVhdGVFbmNyeXB0aW9uTW9kdWxlKTsKfQoK
c3A8SVJlbW90ZURpc3BsYXk+IE1lZGlhUGxheWVyU2VydmljZTo6bGlzdGVuRm9yUmVtb3RlRGlzcGxh
eSgKICAgICAgICBjb25zdCBzcDxJUmVtb3RlRGlzcGxheUNsaWVudD4mIGNsaWVudCwgY29uc3QgU3Ry
aW5nOCYgaWZhY2UpIHsKICAgIGlmICghY2hlY2tQZXJtaXNzaW9uKCJhbmRyb2lkLnBlcm1pc3Npb24u
Q09OVFJPTF9XSUZJX0RJU1BMQVkiKSkgewogICAgICAgIHJldHVybiBOVUxMOwogICAgfQoKICAgIHJl
dHVybiBuZXcgUmVtb3RlRGlzcGxheShjbGllbnQsIGlmYWNlLnN0cmluZygpKTsKfQoKc3RhdHVzX3Qg
TWVkaWFQbGF5ZXJTZXJ2aWNlOjpBdWRpb0NhY2hlOjpkdW1wKGludCBmZCwgY29uc3QgVmVjdG9yPFN0
cmluZzE2PiYgLyphcmdzKi8pIGNvbnN0CnsKICAgIGNvbnN0IHNpemVfdCBTSVpFID0gMjU2OwogICAg
Y2hhciBidWZmZXJbU0laRV07CiAgICBTdHJpbmc4IHJlc3VsdDsKCiAgICByZXN1bHQuYXBwZW5kKCIg
QXVkaW9DYWNoZVxuIik7CiAgICBpZiAobUhlYXAgIT0gMCkgewogICAgICAgIHNucHJpbnRmKGJ1ZmZl
ciwgMjU1LCAiICBoZWFwIGJhc2UoJXApLCBzaXplKCV6dSksIGZsYWdzKCVkKVxuIiwKICAgICAgICAg
ICAgICAgIG1IZWFwLT5nZXRCYXNlKCksIG1IZWFwLT5nZXRTaXplKCksIG1IZWFwLT5nZXRGbGFncygp
KTsKICAgICAgICByZXN1bHQuYXBwZW5kKGJ1ZmZlcik7CiAgICB9CiAgICBzbnByaW50ZihidWZmZXIs
IDI1NSwgIiAgbXNlYyBwZXIgZnJhbWUoJWYpLCBjaGFubmVsIGNvdW50KCVkKSwgZm9ybWF0KCVkKSwg
ZnJhbWUgY291bnQoJXpkKVxuIiwKICAgICAgICAgICAgbU1zZWNzUGVyRnJhbWUsIG1DaGFubmVsQ291
bnQsIG1Gb3JtYXQsIG1GcmFtZUNvdW50KTsKICAgIHJlc3VsdC5hcHBlbmQoYnVmZmVyKTsKICAgIHNu
cHJpbnRmKGJ1ZmZlciwgMjU1LCAiICBzYW1wbGUgcmF0ZSglZCksIHNpemUoJWQpLCBlcnJvciglZCks
IGNvbW1hbmQgY29tcGxldGUoJXMpXG4iLAogICAgICAgICAgICBtU2FtcGxlUmF0ZSwgbVNpemUsIG1F
cnJvciwgbUNvbW1hbmRDb21wbGV0ZT8idHJ1ZSI6ImZhbHNlIik7CiAgICByZXN1bHQuYXBwZW5kKGJ1
ZmZlcik7CiAgICA6OndyaXRlKGZkLCByZXN1bHQuc3RyaW5nKCksIHJlc3VsdC5zaXplKCkpOwogICAg
cmV0dXJuIE5PX0VSUk9SOwp9CgpzdGF0dXNfdCBNZWRpYVBsYXllclNlcnZpY2U6OkF1ZGlvT3V0cHV0
OjpkdW1wKGludCBmZCwgY29uc3QgVmVjdG9yPFN0cmluZzE2PiYgYXJncykgY29uc3QKewogICAgY29u
c3Qgc2l6ZV90IFNJWkUgPSAyNTY7CiAgICBjaGFyIGJ1ZmZlcltTSVpFXTsKICAgIFN0cmluZzggcmVz
dWx0OwoKICAgIHJlc3VsdC5hcHBlbmQoIiBBdWRpb091dHB1dFxuIik7CiAgICBzbnByaW50ZihidWZm
ZXIsIDI1NSwgIiAgc3RyZWFtIHR5cGUoJWQpLCBsZWZ0IC0gcmlnaHQgdm9sdW1lKCVmLCAlZilcbiIs
CiAgICAgICAgICAgIG1TdHJlYW1UeXBlLCBtTGVmdFZvbHVtZSwgbVJpZ2h0Vm9sdW1lKTsKICAgIHJl
c3VsdC5hcHBlbmQoYnVmZmVyKTsKICAgIHNucHJpbnRmKGJ1ZmZlciwgMjU1LCAiICBtc2VjIHBlciBm
cmFtZSglZiksIGxhdGVuY3kgKCVkKVxuIiwKICAgICAgICAgICAgbU1zZWNzUGVyRnJhbWUsIChtVHJh
Y2sgIT0gMCkgPyBtVHJhY2stPmxhdGVuY3koKSA6IC0xKTsKICAgIHJlc3VsdC5hcHBlbmQoYnVmZmVy
KTsKICAgIHNucHJpbnRmKGJ1ZmZlciwgMjU1LCAiICBhdXggZWZmZWN0IGlkKCVkKSwgc2VuZCBsZXZl
bCAoJWYpXG4iLAogICAgICAgICAgICBtQXV4RWZmZWN0SWQsIG1TZW5kTGV2ZWwpOwogICAgcmVzdWx0
LmFwcGVuZChidWZmZXIpOwoKICAgIDo6d3JpdGUoZmQsIHJlc3VsdC5zdHJpbmcoKSwgcmVzdWx0LnNp
emUoKSk7CiAgICBpZiAobVRyYWNrICE9IDApIHsKICAgICAgICBtVHJhY2stPmR1bXAoZmQsIGFyZ3Mp
OwogICAgfQogICAgcmV0dXJuIE5PX0VSUk9SOwp9CgpzdGF0dXNfdCBNZWRpYVBsYXllclNlcnZpY2U6
OkNsaWVudDo6ZHVtcChpbnQgZmQsIGNvbnN0IFZlY3RvcjxTdHJpbmcxNj4mIGFyZ3MpIGNvbnN0CnsK
ICAgIGNvbnN0IHNpemVfdCBTSVpFID0gMjU2OwogICAgY2hhciBidWZmZXJbU0laRV07CiAgICBTdHJp
bmc4IHJlc3VsdDsKICAgIHJlc3VsdC5hcHBlbmQoIiBDbGllbnRcbiIpOwogICAgc25wcmludGYoYnVm
ZmVyLCAyNTUsICIgIHBpZCglZCksIGNvbm5JZCglZCksIHN0YXR1cyglZCksIGxvb3BpbmcoJXMpXG4i
LAogICAgICAgICAgICBtUGlkLCBtQ29ubklkLCBtU3RhdHVzLCBtTG9vcD8idHJ1ZSI6ICJmYWxzZSIp
OwogICAgcmVzdWx0LmFwcGVuZChidWZmZXIpOwogICAgd3JpdGUoZmQsIHJlc3VsdC5zdHJpbmcoKSwg
cmVzdWx0LnNpemUoKSk7CiAgICBpZiAobVBsYXllciAhPSBOVUxMKSB7CiAgICAgICAgbVBsYXllci0+
ZHVtcChmZCwgYXJncyk7CiAgICB9CiAgICBpZiAobUF1ZGlvT3V0cHV0ICE9IDApIHsKICAgICAgICBt
QXVkaW9PdXRwdXQtPmR1bXAoZmQsIGFyZ3MpOwogICAgfQogICAgd3JpdGUoZmQsICJcbiIsIDEpOwog
ICAgcmV0dXJuIE5PX0VSUk9SOwp9CgpzdGF0dXNfdCBNZWRpYVBsYXllclNlcnZpY2U6OmR1bXAoaW50
IGZkLCBjb25zdCBWZWN0b3I8U3RyaW5nMTY+JiBhcmdzKQp7CiAgICBjb25zdCBzaXplX3QgU0laRSA9
IDI1NjsKICAgIGNoYXIgYnVmZmVyW1NJWkVdOwogICAgU3RyaW5nOCByZXN1bHQ7CiAgICBpZiAoY2hl
Y2tDYWxsaW5nUGVybWlzc2lvbihTdHJpbmcxNigiYW5kcm9pZC5wZXJtaXNzaW9uLkRVTVAiKSkgPT0g
ZmFsc2UpIHsKICAgICAgICBzbnByaW50ZihidWZmZXIsIFNJWkUsICJQZXJtaXNzaW9uIERlbmlhbDog
IgogICAgICAgICAgICAgICAgImNhbid0IGR1bXAgTWVkaWFQbGF5ZXJTZXJ2aWNlIGZyb20gcGlkPSVk
LCB1aWQ9JWRcbiIsCiAgICAgICAgICAgICAgICBJUENUaHJlYWRTdGF0ZTo6c2VsZigpLT5nZXRDYWxs
aW5nUGlkKCksCiAgICAgICAgICAgICAgICBJUENUaHJlYWRTdGF0ZTo6c2VsZigpLT5nZXRDYWxsaW5n
VWlkKCkpOwogICAgICAgIHJlc3VsdC5hcHBlbmQoYnVmZmVyKTsKICAgIH0gZWxzZSB7CiAgICAgICAg
TXV0ZXg6OkF1dG9sb2NrIGxvY2sobUxvY2spOwogICAgICAgIGZvciAoaW50IGkgPSAwLCBuID0gbUNs
aWVudHMuc2l6ZSgpOyBpIDwgbjsgKytpKSB7CiAgICAgICAgICAgIHNwPENsaWVudD4gYyA9IG1DbGll
bnRzW2ldLnByb21vdGUoKTsKICAgICAgICAgICAgaWYgKGMgIT0gMCkgYy0+ZHVtcChmZCwgYXJncyk7
CiAgICAgICAgfQogICAgICAgIGlmIChtTWVkaWFSZWNvcmRlckNsaWVudHMuc2l6ZSgpID09IDApIHsK
ICAgICAgICAgICAgICAgIHJlc3VsdC5hcHBlbmQoIiBObyBtZWRpYSByZWNvcmRlciBjbGllbnRcblxu
Iik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgZm9yIChpbnQgaSA9IDAsIG4gPSBtTWVkaWFS
ZWNvcmRlckNsaWVudHMuc2l6ZSgpOyBpIDwgbjsgKytpKSB7CiAgICAgICAgICAgICAgICBzcDxNZWRp
YVJlY29yZGVyQ2xpZW50PiBjID0gbU1lZGlhUmVjb3JkZXJDbGllbnRzW2ldLnByb21vdGUoKTsKICAg
ICAgICAgICAgICAgIGlmIChjICE9IDApIHsKICAgICAgICAgICAgICAgICAgICBzbnByaW50ZihidWZm
ZXIsIDI1NSwgIiBNZWRpYVJlY29yZGVyQ2xpZW50IHBpZCglZClcbiIsIGMtPm1QaWQpOwogICAgICAg
ICAgICAgICAgICAgIHJlc3VsdC5hcHBlbmQoYnVmZmVyKTsKICAgICAgICAgICAgICAgICAgICB3cml0
ZShmZCwgcmVzdWx0LnN0cmluZygpLCByZXN1bHQuc2l6ZSgpKTsKICAgICAgICAgICAgICAgICAgICBy
ZXN1bHQgPSAiXG4iOwogICAgICAgICAgICAgICAgICAgIGMtPmR1bXAoZmQsIGFyZ3MpOwogICAgICAg
ICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXN1bHQuYXBwZW5kKCIg
RmlsZXMgb3BlbmVkIGFuZC9vciBtYXBwZWQ6XG4iKTsKICAgICAgICBzbnByaW50ZihidWZmZXIsIFNJ
WkUsICIvcHJvYy8lZC9tYXBzIiwgZ2V0dGlkKCkpOwogICAgICAgIEZJTEUgKmYgPSBmb3BlbihidWZm
ZXIsICJyIik7CiAgICAgICAgaWYgKGYpIHsKICAgICAgICAgICAgd2hpbGUgKCFmZW9mKGYpKSB7CiAg
ICAgICAgICAgICAgICBmZ2V0cyhidWZmZXIsIFNJWkUsIGYpOwogICAgICAgICAgICAgICAgaWYgKHN0
cnN0cihidWZmZXIsICIgL3N0b3JhZ2UvIikgfHwKICAgICAgICAgICAgICAgICAgICBzdHJzdHIoYnVm
ZmVyLCAiIC9zeXN0ZW0vc291bmRzLyIpIHx8CiAgICAgICAgICAgICAgICAgICAgc3Ryc3RyKGJ1ZmZl
ciwgIiAvZGF0YS8iKSB8fAogICAgICAgICAgICAgICAgICAgIHN0cnN0cihidWZmZXIsICIgL3N5c3Rl
bS9tZWRpYS8iKSkgewogICAgICAgICAgICAgICAgICAgIHJlc3VsdC5hcHBlbmQoIiAgIik7CiAgICAg
ICAgICAgICAgICAgICAgcmVzdWx0LmFwcGVuZChidWZmZXIpOwogICAgICAgICAgICAgICAgfQogICAg
ICAgICAgICB9CiAgICAgICAgICAgIGZjbG9zZShmKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAg
ICByZXN1bHQuYXBwZW5kKCJjb3VsZG4ndCBvcGVuICIpOwogICAgICAgICAgICByZXN1bHQuYXBwZW5k
KGJ1ZmZlcik7CiAgICAgICAgICAgIHJlc3VsdC5hcHBlbmQoIlxuIik7CiAgICAgICAgfQoKICAgICAg
ICBzbnByaW50ZihidWZmZXIsIFNJWkUsICIvcHJvYy8lZC9mZCIsIGdldHRpZCgpKTsKICAgICAgICBE
SVIgKmQgPSBvcGVuZGlyKGJ1ZmZlcik7CiAgICAgICAgaWYgKGQpIHsKICAgICAgICAgICAgc3RydWN0
IGRpcmVudCAqZW50OwogICAgICAgICAgICB3aGlsZSgoZW50ID0gcmVhZGRpcihkKSkgIT0gTlVMTCkg
ewogICAgICAgICAgICAgICAgaWYgKHN0cmNtcChlbnQtPmRfbmFtZSwiLiIpICYmIHN0cmNtcChlbnQt
PmRfbmFtZSwiLi4iKSkgewogICAgICAgICAgICAgICAgICAgIHNucHJpbnRmKGJ1ZmZlciwgU0laRSwg
Ii9wcm9jLyVkL2ZkLyVzIiwgZ2V0dGlkKCksIGVudC0+ZF9uYW1lKTsKICAgICAgICAgICAgICAgICAg
ICBzdHJ1Y3Qgc3RhdCBzOwogICAgICAgICAgICAgICAgICAgIGlmIChsc3RhdChidWZmZXIsICZzKSA9
PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgocy5zdF9tb2RlICYgU19JRk1UKSA9PSBT
X0lGTE5LKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFyIGxpbmt0b1syNTZdOwogICAg
ICAgICAgICAgICAgICAgICAgICAgICAgaW50IGxlbiA9IHJlYWRsaW5rKGJ1ZmZlciwgbGlua3RvLCBz
aXplb2YobGlua3RvKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihsZW4gPiAwKSB7CiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYobGVuID4gMjU1KSB7CiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIGxpbmt0b1syNTJdID0gJy4nOwogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICBsaW5rdG9bMjUzXSA9ICcuJzsKICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgbGlua3RvWzI1NF0gPSAnLic7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIGxpbmt0b1syNTVdID0gMDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVs
c2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5rdG9bbGVuXSA9IDA7CiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIGlmIChzdHJzdHIobGlua3RvLCAiL3N0b3JhZ2UvIikgPT0gbGlua3RvIHx8CiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIHN0cnN0cihsaW5rdG8sICIvc3lzdGVtL3NvdW5kcy8iKSA9
PSBsaW5rdG8gfHwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryc3RyKGxpbmt0
bywgIi9kYXRhLyIpID09IGxpbmt0byB8fAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICBzdHJzdHIobGlua3RvLCAiL3N5c3RlbS9tZWRpYS8iKSA9PSBsaW5rdG8pIHsKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmFwcGVuZCgiICAiKTsKICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmFwcGVuZChidWZmZXIpOwogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICByZXN1bHQuYXBwZW5kKCIgLT4gIik7CiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIHJlc3VsdC5hcHBlbmQobGlua3RvKTsKICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgcmVzdWx0LmFwcGVuZCgiXG4iKTsKICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAg
ICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQuYXBwZW5kKCIg
IHVuZXhwZWN0ZWQgdHlwZSBmb3IgIik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQu
YXBwZW5kKGJ1ZmZlcik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQuYXBwZW5kKCJc
biIpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAg
ICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGNsb3NlZGlyKGQpOwogICAgICAgIH0g
ZWxzZSB7CiAgICAgICAgICAgIHJlc3VsdC5hcHBlbmQoImNvdWxkbid0IG9wZW4gIik7CiAgICAgICAg
ICAgIHJlc3VsdC5hcHBlbmQoYnVmZmVyKTsKICAgICAgICAgICAgcmVzdWx0LmFwcGVuZCgiXG4iKTsK
ICAgICAgICB9CgogICAgICAgIGJvb2wgZHVtcE1lbSA9IGZhbHNlOwogICAgICAgIGZvciAoc2l6ZV90
IGkgPSAwOyBpIDwgYXJncy5zaXplKCk7IGkrKykgewogICAgICAgICAgICBpZiAoYXJnc1tpXSA9PSBT
dHJpbmcxNigiLW0iKSkgewogICAgICAgICAgICAgICAgZHVtcE1lbSA9IHRydWU7CiAgICAgICAgICAg
IH0KICAgICAgICB9CiAgICAgICAgaWYgKGR1bXBNZW0pIHsKICAgICAgICAgICAgZHVtcE1lbW9yeUFk
ZHJlc3NlcyhmZCk7CiAgICAgICAgfQogICAgfQogICAgd3JpdGUoZmQsIHJlc3VsdC5zdHJpbmcoKSwg
cmVzdWx0LnNpemUoKSk7CiAgICByZXR1cm4gTk9fRVJST1I7Cn0KCnZvaWQgTWVkaWFQbGF5ZXJTZXJ2
aWNlOjpyZW1vdmVDbGllbnQod3A8Q2xpZW50PiBjbGllbnQpCnsKICAgIE11dGV4OjpBdXRvbG9jayBs
b2NrKG1Mb2NrKTsKICAgIG1DbGllbnRzLnJlbW92ZShjbGllbnQpOwp9CgpNZWRpYVBsYXllclNlcnZp
Y2U6OkNsaWVudDo6Q2xpZW50KAogICAgICAgIGNvbnN0IHNwPE1lZGlhUGxheWVyU2VydmljZT4mIHNl
cnZpY2UsIHBpZF90IHBpZCwKICAgICAgICBpbnQzMl90IGNvbm5JZCwgY29uc3Qgc3A8SU1lZGlhUGxh
eWVyQ2xpZW50PiYgY2xpZW50LAogICAgICAgIGludCBhdWRpb1Nlc3Npb25JZCwgdWlkX3QgdWlkKQp7
CiAgICBBTE9HVigiQ2xpZW50KCVkKSBjb25zdHJ1Y3RvciIsIGNvbm5JZCk7CiAgICBtUGlkID0gcGlk
OwogICAgbUNvbm5JZCA9IGNvbm5JZDsKICAgIG1TZXJ2aWNlID0gc2VydmljZTsKICAgIG1DbGllbnQg
PSBjbGllbnQ7CiAgICBtTG9vcCA9IGZhbHNlOwogICAgbVN0YXR1cyA9IE5PX0lOSVQ7CiAgICBtQXVk
aW9TZXNzaW9uSWQgPSBhdWRpb1Nlc3Npb25JZDsKICAgIG1VSUQgPSB1aWQ7CiAgICBtUmV0cmFuc21p
dEVuZHBvaW50VmFsaWQgPSBmYWxzZTsKICAgIG1BdWRpb0F0dHJpYnV0ZXMgPSBOVUxMOwoKI2lmIENB
TExCQUNLX0FOVEFHT05JWkVSCiAgICBBTE9HRCgiY3JlYXRlIEFudGFnb25pemVyIik7CiAgICBtQW50
YWdvbml6ZXIgPSBuZXcgQW50YWdvbml6ZXIobm90aWZ5LCB0aGlzKTsKI2VuZGlmCn0KCk1lZGlhUGxh
eWVyU2VydmljZTo6Q2xpZW50Ojp+Q2xpZW50KCkKewogICAgQUxPR1YoIkNsaWVudCglZCkgZGVzdHJ1
Y3RvciBwaWQgPSAlZCIsIG1Db25uSWQsIG1QaWQpOwogICAgbUF1ZGlvT3V0cHV0LmNsZWFyKCk7CiAg
ICB3cDxDbGllbnQ+IGNsaWVudCh0aGlzKTsKICAgIGRpc2Nvbm5lY3QoKTsKICAgIG1TZXJ2aWNlLT5y
ZW1vdmVDbGllbnQoY2xpZW50KTsKICAgIGlmIChtQXVkaW9BdHRyaWJ1dGVzICE9IE5VTEwpIHsKICAg
ICAgICBmcmVlKG1BdWRpb0F0dHJpYnV0ZXMpOwogICAgfQp9Cgp2b2lkIE1lZGlhUGxheWVyU2Vydmlj
ZTo6Q2xpZW50OjpkaXNjb25uZWN0KCkKewogICAgQUxPR1YoImRpc2Nvbm5lY3QoJWQpIGZyb20gcGlk
ICVkIiwgbUNvbm5JZCwgbVBpZCk7CiAgICAvLyBncmFiIGxvY2FsIHJlZmVyZW5jZSBhbmQgY2xlYXIg
bWFpbiByZWZlcmVuY2UgdG8gcHJldmVudCBmdXR1cmUKICAgIC8vIGFjY2VzcyB0byBvYmplY3QKICAg
IHNwPE1lZGlhUGxheWVyQmFzZT4gcDsKICAgIHsKICAgICAgICBNdXRleDo6QXV0b2xvY2sgbChtTG9j
ayk7CiAgICAgICAgcCA9IG1QbGF5ZXI7CiAgICAgICAgbUNsaWVudC5jbGVhcigpOwogICAgfQoKICAg
IG1QbGF5ZXIuY2xlYXIoKTsKCiAgICAvLyBjbGVhciB0aGUgbm90aWZpY2F0aW9uIHRvIHByZXZlbnQg
Y2FsbGJhY2tzIHRvIGRlYWQgY2xpZW50CiAgICAvLyBhbmQgcmVzZXQgdGhlIHBsYXllci4gV2UgYXNz
dW1lIHRoZSBwbGF5ZXIgd2lsbCBzZXJpYWxpemUKICAgIC8vIGFjY2VzcyB0byBpdHNlbGYgaWYgbmVj
ZXNzYXJ5LgogICAgaWYgKHAgIT0gMCkgewogICAgICAgIHAtPnNldE5vdGlmeUNhbGxiYWNrKDAsIDAp
OwojaWYgQ0FMTEJBQ0tfQU5UQUdPTklaRVIKICAgICAgICBBTE9HRCgia2lsbCBBbnRhZ29uaXplciIp
OwogICAgICAgIG1BbnRhZ29uaXplci0+a2lsbCgpOwojZW5kaWYKICAgICAgICBwLT5yZXNldCgpOwog
ICAgfQoKICAgIGRpc2Nvbm5lY3ROYXRpdmVXaW5kb3coKTsKCiAgICBJUENUaHJlYWRTdGF0ZTo6c2Vs
ZigpLT5mbHVzaENvbW1hbmRzKCk7Cn0KCnNwPE1lZGlhUGxheWVyQmFzZT4gTWVkaWFQbGF5ZXJTZXJ2
aWNlOjpDbGllbnQ6OmNyZWF0ZVBsYXllcihwbGF5ZXJfdHlwZSBwbGF5ZXJUeXBlKQp7CiAgICAvLyBk
ZXRlcm1pbmUgaWYgd2UgaGF2ZSB0aGUgcmlnaHQgcGxheWVyIHR5cGUKICAgIHNwPE1lZGlhUGxheWVy
QmFzZT4gcCA9IG1QbGF5ZXI7CiAgICBpZiAoKHAgIT0gTlVMTCkgJiYgKHAtPnBsYXllclR5cGUoKSAh
PSBwbGF5ZXJUeXBlKSkgewogICAgICAgIEFMT0dWKCJkZWxldGUgcGxheWVyIik7CiAgICAgICAgcC5j
bGVhcigpOwogICAgfQogICAgaWYgKHAgPT0gTlVMTCkgewogICAgICAgIHAgPSBNZWRpYVBsYXllckZh
Y3Rvcnk6OmNyZWF0ZVBsYXllcihwbGF5ZXJUeXBlLCB0aGlzLCBub3RpZnkpOwogICAgfQoKICAgIGlm
IChwICE9IE5VTEwpIHsKICAgICAgICBwLT5zZXRVSUQobVVJRCk7CiAgICB9CgogICAgcmV0dXJuIHA7
Cn0KCnNwPE1lZGlhUGxheWVyQmFzZT4gTWVkaWFQbGF5ZXJTZXJ2aWNlOjpDbGllbnQ6OnNldERhdGFT
b3VyY2VfcHJlKAogICAgICAgIHBsYXllcl90eXBlIHBsYXllclR5cGUpCnsKICAgIEFMT0dWKCJwbGF5
ZXIgdHlwZSA9ICVkIiwgcGxheWVyVHlwZSk7CgogICAgLy8gY3JlYXRlIHRoZSByaWdodCB0eXBlIG9m
IHBsYXllcgogICAgc3A8TWVkaWFQbGF5ZXJCYXNlPiBwID0gY3JlYXRlUGxheWVyKHBsYXllclR5cGUp
OwogICAgaWYgKHAgPT0gTlVMTCkgewogICAgICAgIHJldHVybiBwOwogICAgfQoKICAgIGlmICghcC0+
aGFyZHdhcmVPdXRwdXQoKSkgewogICAgICAgIG1BdWRpb091dHB1dCA9IG5ldyBBdWRpb091dHB1dCht
QXVkaW9TZXNzaW9uSWQsIElQQ1RocmVhZFN0YXRlOjpzZWxmKCktPmdldENhbGxpbmdVaWQoKSwKICAg
ICAgICAgICAgICAgIG1QaWQsIG1BdWRpb0F0dHJpYnV0ZXMpOwogICAgICAgIHN0YXRpY19jYXN0PE1l
ZGlhUGxheWVySW50ZXJmYWNlKj4ocC5nZXQoKSktPnNldEF1ZGlvU2luayhtQXVkaW9PdXRwdXQpOwog
ICAgfQoKICAgIHJldHVybiBwOwp9Cgp2b2lkIE1lZGlhUGxheWVyU2VydmljZTo6Q2xpZW50OjpzZXRE
YXRhU291cmNlX3Bvc3QoCiAgICAgICAgY29uc3Qgc3A8TWVkaWFQbGF5ZXJCYXNlPiYgcCwKICAgICAg
ICBzdGF0dXNfdCBzdGF0dXMpCnsKICAgIEFMT0dWKCIgc2V0RGF0YVNvdXJjZSIpOwogICAgbVN0YXR1
cyA9IHN0YXR1czsKICAgIGlmIChtU3RhdHVzICE9IE9LKSB7CiAgICAgICAgQUxPR0UoIiAgZXJyb3I6
ICVkIiwgbVN0YXR1cyk7CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIC8vIFNldCB0aGUgcmUtdHJh
bnNtaXNzaW9uIGVuZHBvaW50IGlmIG9uZSB3YXMgY2hvc2VuLgogICAgaWYgKG1SZXRyYW5zbWl0RW5k
cG9pbnRWYWxpZCkgewogICAgICAgIG1TdGF0dXMgPSBwLT5zZXRSZXRyYW5zbWl0RW5kcG9pbnQoJm1S
ZXRyYW5zbWl0RW5kcG9pbnQpOwogICAgICAgIGlmIChtU3RhdHVzICE9IE5PX0VSUk9SKSB7CiAgICAg
ICAgICAgIEFMT0dFKCJzZXRSZXRyYW5zbWl0RW5kcG9pbnQgZXJyb3I6ICVkIiwgbVN0YXR1cyk7CiAg
ICAgICAgfQogICAgfQoKICAgIGlmIChtU3RhdHVzID09IE9LKSB7CiAgICAgICAgbVBsYXllciA9IHA7
CiAgICB9Cn0KCnN0YXR1c190IE1lZGlhUGxheWVyU2VydmljZTo6Q2xpZW50OjpzZXREYXRhU291cmNl
KAogICAgICAgIGNvbnN0IHNwPElNZWRpYUhUVFBTZXJ2aWNlPiAmaHR0cFNlcnZpY2UsCiAgICAgICAg
Y29uc3QgY2hhciAqdXJsLAogICAgICAgIGNvbnN0IEtleWVkVmVjdG9yPFN0cmluZzgsIFN0cmluZzg+
ICpoZWFkZXJzKQp7CiAgICBBTE9HVigic2V0RGF0YVNvdXJjZSglcykiLCB1cmwpOwogICAgaWYgKHVy
bCA9PSBOVUxMKQogICAgICAgIHJldHVybiBVTktOT1dOX0VSUk9SOwoKICAgIGlmICgoc3RybmNtcCh1
cmwsICJodHRwOi8vIiwgNykgPT0gMCkgfHwKICAgICAgICAoc3RybmNtcCh1cmwsICJodHRwczovLyIs
IDgpID09IDApIHx8CiAgICAgICAgKHN0cm5jbXAodXJsLCAicnRzcDovLyIsIDcpID09IDApKSB7CiAg
ICAgICAgaWYgKCFjaGVja1Blcm1pc3Npb24oImFuZHJvaWQucGVybWlzc2lvbi5JTlRFUk5FVCIpKSB7
CiAgICAgICAgICAgIHJldHVybiBQRVJNSVNTSU9OX0RFTklFRDsKICAgICAgICB9CiAgICB9CgogICAg
aWYgKHN0cm5jbXAodXJsLCAiY29udGVudDovLyIsIDEwKSA9PSAwKSB7CiAgICAgICAgLy8gZ2V0IGEg
ZmlsZWRlc2NyaXB0b3IgZm9yIHRoZSBjb250ZW50IFVyaSBhbmQKICAgICAgICAvLyBwYXNzIGl0IHRv
IHRoZSBzZXREYXRhU291cmNlKGZkKSBtZXRob2QKCiAgICAgICAgU3RyaW5nMTYgdXJsMTYodXJsKTsK
ICAgICAgICBpbnQgZmQgPSBhbmRyb2lkOjpvcGVuQ29udGVudFByb3ZpZGVyRmlsZSh1cmwxNik7CiAg
ICAgICAgaWYgKGZkIDwgMCkKICAgICAgICB7CiAgICAgICAgICAgIEFMT0dFKCJDb3VsZG4ndCBvcGVu
IGZkIGZvciAlcyIsIHVybCk7CiAgICAgICAgICAgIHJldHVybiBVTktOT1dOX0VSUk9SOwogICAgICAg
IH0KICAgICAgICBzZXREYXRhU291cmNlKGZkLCAwLCAweDdmZmZmZmZmZmZMTCk7IC8vIHRoaXMgc2V0
cyBtU3RhdHVzCiAgICAgICAgY2xvc2UoZmQpOwogICAgICAgIHJldHVybiBtU3RhdHVzOwogICAgfSBl
bHNlIHsKICAgICAgICBwbGF5ZXJfdHlwZSBwbGF5ZXJUeXBlID0gTWVkaWFQbGF5ZXJGYWN0b3J5Ojpn
ZXRQbGF5ZXJUeXBlKHRoaXMsIHVybCk7CiAgICAgICAgc3A8TWVkaWFQbGF5ZXJCYXNlPiBwID0gc2V0
RGF0YVNvdXJjZV9wcmUocGxheWVyVHlwZSk7CiAgICAgICAgaWYgKHAgPT0gTlVMTCkgewogICAgICAg
ICAgICByZXR1cm4gTk9fSU5JVDsKICAgICAgICB9CgogICAgICAgIHNldERhdGFTb3VyY2VfcG9zdChw
LCBwLT5zZXREYXRhU291cmNlKGh0dHBTZXJ2aWNlLCB1cmwsIGhlYWRlcnMpKTsKICAgICAgICByZXR1
cm4gbVN0YXR1czsKICAgIH0KfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpDbGllbnQ6OnNl
dERhdGFTb3VyY2UoaW50IGZkLCBpbnQ2NF90IG9mZnNldCwgaW50NjRfdCBsZW5ndGgpCnsKICAgIEFM
T0dWKCJzZXREYXRhU291cmNlIGZkPSVkLCBvZmZzZXQ9JWxsZCwgbGVuZ3RoPSVsbGQiLCBmZCwgb2Zm
c2V0LCBsZW5ndGgpOwogICAgc3RydWN0IHN0YXQgc2I7CiAgICBpbnQgcmV0ID0gZnN0YXQoZmQsICZz
Yik7CiAgICBpZiAocmV0ICE9IDApIHsKICAgICAgICBBTE9HRSgiZnN0YXQoJWQpIGZhaWxlZDogJWQs
ICVzIiwgZmQsIHJldCwgc3RyZXJyb3IoZXJybm8pKTsKICAgICAgICByZXR1cm4gVU5LTk9XTl9FUlJP
UjsKICAgIH0KCiAgICBBTE9HVigic3RfZGV2ICA9ICVsbHUiLCBzYi5zdF9kZXYpOwogICAgQUxPR1Yo
InN0X21vZGUgPSAldSIsIHNiLnN0X21vZGUpOwogICAgQUxPR1YoInN0X3VpZCAgPSAlbHUiLCBzdGF0
aWNfY2FzdDx1bnNpZ25lZCBsb25nPihzYi5zdF91aWQpKTsKICAgIEFMT0dWKCJzdF9naWQgID0gJWx1
Iiwgc3RhdGljX2Nhc3Q8dW5zaWduZWQgbG9uZz4oc2Iuc3RfZ2lkKSk7CiAgICBBTE9HVigic3Rfc2l6
ZSA9ICVsbHUiLCBzYi5zdF9zaXplKTsKCiAgICBpZiAob2Zmc2V0ID49IHNiLnN0X3NpemUpIHsKICAg
ICAgICBBTE9HRSgib2Zmc2V0IGVycm9yIik7CiAgICAgICAgOjpjbG9zZShmZCk7CiAgICAgICAgcmV0
dXJuIFVOS05PV05fRVJST1I7CiAgICB9CiAgICBpZiAob2Zmc2V0ICsgbGVuZ3RoID4gc2Iuc3Rfc2l6
ZSkgewogICAgICAgIGxlbmd0aCA9IHNiLnN0X3NpemUgLSBvZmZzZXQ7CiAgICAgICAgQUxPR1YoImNh
bGN1bGF0ZWQgbGVuZ3RoID0gJWxsZCIsIGxlbmd0aCk7CiAgICB9CgogICAgcGxheWVyX3R5cGUgcGxh
eWVyVHlwZSA9IE1lZGlhUGxheWVyRmFjdG9yeTo6Z2V0UGxheWVyVHlwZSh0aGlzLAogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZCwKICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
b2Zmc2V0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICBsZW5ndGgpOwogICAgc3A8TWVkaWFQbGF5ZXJCYXNlPiBwID0gc2V0RGF0YVNvdXJj
ZV9wcmUocGxheWVyVHlwZSk7CiAgICBpZiAocCA9PSBOVUxMKSB7CiAgICAgICAgcmV0dXJuIE5PX0lO
SVQ7CiAgICB9CgogICAgLy8gbm93IHNldCBkYXRhIHNvdXJjZQogICAgc2V0RGF0YVNvdXJjZV9wb3N0
KHAsIHAtPnNldERhdGFTb3VyY2UoZmQsIG9mZnNldCwgbGVuZ3RoKSk7CiAgICByZXR1cm4gbVN0YXR1
czsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpDbGllbnQ6OnNldERhdGFTb3VyY2UoCiAg
ICAgICAgY29uc3Qgc3A8SVN0cmVhbVNvdXJjZT4gJnNvdXJjZSkgewogICAgLy8gY3JlYXRlIHRoZSBy
aWdodCB0eXBlIG9mIHBsYXllcgogICAgcGxheWVyX3R5cGUgcGxheWVyVHlwZSA9IE1lZGlhUGxheWVy
RmFjdG9yeTo6Z2V0UGxheWVyVHlwZSh0aGlzLCBzb3VyY2UpOwogICAgc3A8TWVkaWFQbGF5ZXJCYXNl
PiBwID0gc2V0RGF0YVNvdXJjZV9wcmUocGxheWVyVHlwZSk7CiAgICBpZiAocCA9PSBOVUxMKSB7CiAg
ICAgICAgcmV0dXJuIE5PX0lOSVQ7CiAgICB9CgogICAgLy8gbm93IHNldCBkYXRhIHNvdXJjZQogICAg
c2V0RGF0YVNvdXJjZV9wb3N0KHAsIHAtPnNldERhdGFTb3VyY2Uoc291cmNlKSk7CiAgICByZXR1cm4g
bVN0YXR1czsKfQoKdm9pZCBNZWRpYVBsYXllclNlcnZpY2U6OkNsaWVudDo6ZGlzY29ubmVjdE5hdGl2
ZVdpbmRvdygpIHsKICAgIGlmIChtQ29ubmVjdGVkV2luZG93ICE9IE5VTEwpIHsKICAgICAgICBzdGF0
dXNfdCBlcnIgPSBuYXRpdmVfd2luZG93X2FwaV9kaXNjb25uZWN0KG1Db25uZWN0ZWRXaW5kb3cuZ2V0
KCksCiAgICAgICAgICAgICAgICBOQVRJVkVfV0lORE9XX0FQSV9NRURJQSk7CgogICAgICAgIGlmIChl
cnIgIT0gT0spIHsKICAgICAgICAgICAgQUxPR1coIm5hdGl2ZV93aW5kb3dfYXBpX2Rpc2Nvbm5lY3Qg
cmV0dXJuZWQgYW4gZXJyb3I6ICVzICglZCkiLAogICAgICAgICAgICAgICAgICAgIHN0cmVycm9yKC1l
cnIpLCBlcnIpOwogICAgICAgIH0KICAgIH0KICAgIG1Db25uZWN0ZWRXaW5kb3cuY2xlYXIoKTsKfQoK
c3RhdHVzX3QgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpDbGllbnQ6OnNldFZpZGVvU3VyZmFjZVRleHR1cmUo
CiAgICAgICAgY29uc3Qgc3A8SUdyYXBoaWNCdWZmZXJQcm9kdWNlcj4mIGJ1ZmZlclByb2R1Y2VyKQp7
CiAgICBBTE9HVigiWyVkXSBzZXRWaWRlb1N1cmZhY2VUZXh0dXJlKCVwKSIsIG1Db25uSWQsIGJ1ZmZl
clByb2R1Y2VyLmdldCgpKTsKICAgIHNwPE1lZGlhUGxheWVyQmFzZT4gcCA9IGdldFBsYXllcigpOwog
ICAgaWYgKHAgPT0gMCkgcmV0dXJuIFVOS05PV05fRVJST1I7CgogICAgc3A8SUJpbmRlcj4gYmluZGVy
KGJ1ZmZlclByb2R1Y2VyID09IE5VTEwgPyBOVUxMIDoKICAgICAgICAgICAgYnVmZmVyUHJvZHVjZXIt
PmFzQmluZGVyKCkpOwogICAgaWYgKG1Db25uZWN0ZWRXaW5kb3dCaW5kZXIgPT0gYmluZGVyKSB7CiAg
ICAgICAgcmV0dXJuIE9LOwogICAgfQoKICAgIHNwPEFOYXRpdmVXaW5kb3c+IGFudzsKICAgIGlmIChi
dWZmZXJQcm9kdWNlciAhPSBOVUxMKSB7CiAgICAgICAgYW53ID0gbmV3IFN1cmZhY2UoYnVmZmVyUHJv
ZHVjZXIsIHRydWUgLyogY29udHJvbGxlZEJ5QXBwICovKTsKICAgICAgICBzdGF0dXNfdCBlcnIgPSBu
YXRpdmVfd2luZG93X2FwaV9jb25uZWN0KGFudy5nZXQoKSwKICAgICAgICAgICAgICAgIE5BVElWRV9X
SU5ET1dfQVBJX01FRElBKTsKCiAgICAgICAgaWYgKGVyciAhPSBPSykgewogICAgICAgICAgICBBTE9H
RSgic2V0VmlkZW9TdXJmYWNlVGV4dHVyZSBmYWlsZWQ6ICVkIiwgZXJyKTsKICAgICAgICAgICAgLy8g
Tm90ZSB0aGF0IHdlIG11c3QgZG8gdGhlIHJlc2V0IGJlZm9yZSBkaXNjb25uZWN0aW5nIGZyb20gdGhl
IEFOVy4KICAgICAgICAgICAgLy8gT3RoZXJ3aXNlIHF1ZXVlL2RlcXVldWUgY2FsbHMgY291bGQgYmUg
bWFkZSBvbiB0aGUgZGlzY29ubmVjdGVkCiAgICAgICAgICAgIC8vIEFOVywgd2hpY2ggbWF5IHJlc3Vs
dCBpbiBlcnJvcnMuCiAgICAgICAgICAgIHJlc2V0KCk7CgogICAgICAgICAgICBkaXNjb25uZWN0TmF0
aXZlV2luZG93KCk7CgogICAgICAgICAgICByZXR1cm4gZXJyOwogICAgICAgIH0KICAgIH0KCiAgICAv
LyBOb3RlIHRoYXQgd2UgbXVzdCBzZXQgdGhlIHBsYXllcidzIG5ldyBHcmFwaGljQnVmZmVyUHJvZHVj
ZXIgYmVmb3JlCiAgICAvLyBkaXNjb25uZWN0aW5nIHRoZSBvbGQgb25lLiAgT3RoZXJ3aXNlIHF1ZXVl
L2RlcXVldWUgY2FsbHMgY291bGQgYmUgbWFkZQogICAgLy8gb24gdGhlIGRpc2Nvbm5lY3RlZCBBTlcs
IHdoaWNoIG1heSByZXN1bHQgaW4gZXJyb3JzLgogICAgc3RhdHVzX3QgZXJyID0gcC0+c2V0VmlkZW9T
dXJmYWNlVGV4dHVyZShidWZmZXJQcm9kdWNlcik7CgogICAgZGlzY29ubmVjdE5hdGl2ZVdpbmRvdygp
OwoKICAgIG1Db25uZWN0ZWRXaW5kb3cgPSBhbnc7CgogICAgaWYgKGVyciA9PSBPSykgewogICAgICAg
IG1Db25uZWN0ZWRXaW5kb3dCaW5kZXIgPSBiaW5kZXI7CiAgICB9IGVsc2UgewogICAgICAgIGRpc2Nv
bm5lY3ROYXRpdmVXaW5kb3coKTsKICAgIH0KCiAgICByZXR1cm4gZXJyOwp9CgpzdGF0dXNfdCBNZWRp
YVBsYXllclNlcnZpY2U6OkNsaWVudDo6aW52b2tlKGNvbnN0IFBhcmNlbCYgcmVxdWVzdCwKICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQYXJjZWwgKnJlcGx5KQp7CiAgICBz
cDxNZWRpYVBsYXllckJhc2U+IHAgPSBnZXRQbGF5ZXIoKTsKICAgIGlmIChwID09IE5VTEwpIHJldHVy
biBVTktOT1dOX0VSUk9SOwogICAgcmV0dXJuIHAtPmludm9rZShyZXF1ZXN0LCByZXBseSk7Cn0KCi8v
IFRoaXMgY2FsbCBkb2Vzbid0IG5lZWQgdG8gYWNjZXNzIHRoZSBuYXRpdmUgcGxheWVyLgpzdGF0dXNf
dCBNZWRpYVBsYXllclNlcnZpY2U6OkNsaWVudDo6c2V0TWV0YWRhdGFGaWx0ZXIoY29uc3QgUGFyY2Vs
JiBmaWx0ZXIpCnsKICAgIHN0YXR1c190IHN0YXR1czsKICAgIG1lZGlhOjpNZXRhZGF0YTo6RmlsdGVy
IGFsbG93LCBkcm9wOwoKICAgIGlmICh1bm1hcnNoYWxsRmlsdGVyKGZpbHRlciwgJmFsbG93LCAmc3Rh
dHVzKSAmJgogICAgICAgIHVubWFyc2hhbGxGaWx0ZXIoZmlsdGVyLCAmZHJvcCwgJnN0YXR1cykpIHsK
ICAgICAgICBNdXRleDo6QXV0b2xvY2sgbG9jayhtTG9jayk7CgogICAgICAgIG1NZXRhZGF0YUFsbG93
ID0gYWxsb3c7CiAgICAgICAgbU1ldGFkYXRhRHJvcCA9IGRyb3A7CiAgICB9CiAgICByZXR1cm4gc3Rh
dHVzOwp9CgpzdGF0dXNfdCBNZWRpYVBsYXllclNlcnZpY2U6OkNsaWVudDo6Z2V0TWV0YWRhdGEoCiAg
ICAgICAgYm9vbCB1cGRhdGVfb25seSwgYm9vbCAvKmFwcGx5X2ZpbHRlciovLCBQYXJjZWwgKnJlcGx5
KQp7CiAgICBzcDxNZWRpYVBsYXllckJhc2U+IHBsYXllciA9IGdldFBsYXllcigpOwogICAgaWYgKHBs
YXllciA9PSAwKSByZXR1cm4gVU5LTk9XTl9FUlJPUjsKCiAgICBzdGF0dXNfdCBzdGF0dXM7CiAgICAv
LyBQbGFjZWhvbGRlciBmb3IgdGhlIHJldHVybiBjb2RlLCB1cGRhdGVkIGJ5IHRoZSBjYWxsZXIuCiAg
ICByZXBseS0+d3JpdGVJbnQzMigtMSk7CgogICAgbWVkaWE6Ok1ldGFkYXRhOjpGaWx0ZXIgaWRzOwoK
ICAgIC8vIFdlIGRvbid0IGJsb2NrIG5vdGlmaWNhdGlvbnMgd2hpbGUgd2UgZmV0Y2ggdGhlIGRhdGEu
IFdlIGNsZWFyCiAgICAvLyBtTWV0YWRhdGFVcGRhdGVkIGZpcnN0IHNvIHdlIGRvbid0IGxvc2Ugbm90
aWZpY2F0aW9ucyBoYXBwZW5pbmcKICAgIC8vIGR1cmluZyB0aGUgcmVzdCBvZiB0aGlzIGNhbGwuCiAg
ICB7CiAgICAgICAgTXV0ZXg6OkF1dG9sb2NrIGxvY2sobUxvY2spOwogICAgICAgIGlmICh1cGRhdGVf
b25seSkgewogICAgICAgICAgICBpZHMgPSBtTWV0YWRhdGFVcGRhdGVkOwogICAgICAgIH0KICAgICAg
ICBtTWV0YWRhdGFVcGRhdGVkLmNsZWFyKCk7CiAgICB9CgogICAgbWVkaWE6Ok1ldGFkYXRhIG1ldGFk
YXRhKHJlcGx5KTsKCiAgICBtZXRhZGF0YS5hcHBlbmRIZWFkZXIoKTsKICAgIHN0YXR1cyA9IHBsYXll
ci0+Z2V0TWV0YWRhdGEoaWRzLCByZXBseSk7CgogICAgaWYgKHN0YXR1cyAhPSBPSykgewogICAgICAg
IG1ldGFkYXRhLnJlc2V0UGFyY2VsKCk7CiAgICAgICAgQUxPR0UoImdldE1ldGFkYXRhIGZhaWxlZCAl
ZCIsIHN0YXR1cyk7CiAgICAgICAgcmV0dXJuIHN0YXR1czsKICAgIH0KCiAgICAvLyBGSVhNRTogSW1w
bGVtZW50IGZpbHRlcmluZyBvbiB0aGUgcmVzdWx0LiBOb3QgY3JpdGljYWwgc2luY2UKICAgIC8vIGZp
bHRlcmluZyB0YWtlcyBwbGFjZSBvbiB0aGUgdXBkYXRlIG5vdGlmaWNhdGlvbnMgYWxyZWFkeS4gVGhp
cwogICAgLy8gd291bGQgYmUgd2hlbiBhbGwgdGhlIG1ldGFkYXRhIGFyZSBmZXRjaCBhbmQgYSBmaWx0
ZXIgaXMgc2V0LgoKICAgIC8vIEV2ZXJ5dGhpbmcgaXMgZmluZSwgdXBkYXRlIHRoZSBtZXRhZGF0YSBs
ZW5ndGguCiAgICBtZXRhZGF0YS51cGRhdGVMZW5ndGgoKTsKICAgIHJldHVybiBPSzsKfQoKc3RhdHVz
X3QgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpDbGllbnQ6OnByZXBhcmVBc3luYygpCnsKICAgIEFMT0dWKCJb
JWRdIHByZXBhcmVBc3luYyIsIG1Db25uSWQpOwogICAgc3A8TWVkaWFQbGF5ZXJCYXNlPiBwID0gZ2V0
UGxheWVyKCk7CiAgICBpZiAocCA9PSAwKSByZXR1cm4gVU5LTk9XTl9FUlJPUjsKICAgIHN0YXR1c190
IHJldCA9IHAtPnByZXBhcmVBc3luYygpOwojaWYgQ0FMTEJBQ0tfQU5UQUdPTklaRVIKICAgIEFMT0dE
KCJzdGFydCBBbnRhZ29uaXplciIpOwogICAgaWYgKHJldCA9PSBOT19FUlJPUikgbUFudGFnb25pemVy
LT5zdGFydCgpOwojZW5kaWYKICAgIHJldHVybiByZXQ7Cn0KCnN0YXR1c190IE1lZGlhUGxheWVyU2Vy
dmljZTo6Q2xpZW50OjpzdGFydCgpCnsKICAgIEFMT0dWKCJbJWRdIHN0YXJ0IiwgbUNvbm5JZCk7CiAg
ICBzcDxNZWRpYVBsYXllckJhc2U+IHAgPSBnZXRQbGF5ZXIoKTsKICAgIGlmIChwID09IDApIHJldHVy
biBVTktOT1dOX0VSUk9SOwogICAgcC0+c2V0TG9vcGluZyhtTG9vcCk7CiAgICByZXR1cm4gcC0+c3Rh
cnQoKTsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpDbGllbnQ6OnN0b3AoKQp7CiAgICBB
TE9HVigiWyVkXSBzdG9wIiwgbUNvbm5JZCk7CiAgICBzcDxNZWRpYVBsYXllckJhc2U+IHAgPSBnZXRQ
bGF5ZXIoKTsKICAgIGlmIChwID09IDApIHJldHVybiBVTktOT1dOX0VSUk9SOwogICAgcmV0dXJuIHAt
PnN0b3AoKTsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpDbGllbnQ6OnBhdXNlKCkKewog
ICAgQUxPR1YoIlslZF0gcGF1c2UiLCBtQ29ubklkKTsKICAgIHNwPE1lZGlhUGxheWVyQmFzZT4gcCA9
IGdldFBsYXllcigpOwogICAgaWYgKHAgPT0gMCkgcmV0dXJuIFVOS05PV05fRVJST1I7CiAgICByZXR1
cm4gcC0+cGF1c2UoKTsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpDbGllbnQ6OmlzUGxh
eWluZyhib29sKiBzdGF0ZSkKewogICAgKnN0YXRlID0gZmFsc2U7CiAgICBzcDxNZWRpYVBsYXllckJh
c2U+IHAgPSBnZXRQbGF5ZXIoKTsKICAgIGlmIChwID09IDApIHJldHVybiBVTktOT1dOX0VSUk9SOwog
ICAgKnN0YXRlID0gcC0+aXNQbGF5aW5nKCk7CiAgICBBTE9HVigiWyVkXSBpc1BsYXlpbmc6ICVkIiwg
bUNvbm5JZCwgKnN0YXRlKTsKICAgIHJldHVybiBOT19FUlJPUjsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5
ZXJTZXJ2aWNlOjpDbGllbnQ6OmdldEN1cnJlbnRQb3NpdGlvbihpbnQgKm1zZWMpCnsKICAgIEFMT0dW
KCJnZXRDdXJyZW50UG9zaXRpb24iKTsKICAgIHNwPE1lZGlhUGxheWVyQmFzZT4gcCA9IGdldFBsYXll
cigpOwogICAgaWYgKHAgPT0gMCkgcmV0dXJuIFVOS05PV05fRVJST1I7CiAgICBzdGF0dXNfdCByZXQg
PSBwLT5nZXRDdXJyZW50UG9zaXRpb24obXNlYyk7CiAgICBpZiAocmV0ID09IE5PX0VSUk9SKSB7CiAg
ICAgICAgQUxPR1YoIlslZF0gZ2V0Q3VycmVudFBvc2l0aW9uID0gJWQiLCBtQ29ubklkLCAqbXNlYyk7
CiAgICB9IGVsc2UgewogICAgICAgIEFMT0dFKCJnZXRDdXJyZW50UG9zaXRpb24gcmV0dXJuZWQgJWQi
LCByZXQpOwogICAgfQogICAgcmV0dXJuIHJldDsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXJTZXJ2aWNl
OjpDbGllbnQ6OmdldER1cmF0aW9uKGludCAqbXNlYykKewogICAgQUxPR1YoImdldER1cmF0aW9uIik7
CiAgICBzcDxNZWRpYVBsYXllckJhc2U+IHAgPSBnZXRQbGF5ZXIoKTsKICAgIGlmIChwID09IDApIHJl
dHVybiBVTktOT1dOX0VSUk9SOwogICAgc3RhdHVzX3QgcmV0ID0gcC0+Z2V0RHVyYXRpb24obXNlYyk7
CiAgICBpZiAocmV0ID09IE5PX0VSUk9SKSB7CiAgICAgICAgQUxPR1YoIlslZF0gZ2V0RHVyYXRpb24g
PSAlZCIsIG1Db25uSWQsICptc2VjKTsKICAgIH0gZWxzZSB7CiAgICAgICAgQUxPR0UoImdldER1cmF0
aW9uIHJldHVybmVkICVkIiwgcmV0KTsKICAgIH0KICAgIHJldHVybiByZXQ7Cn0KCnN0YXR1c190IE1l
ZGlhUGxheWVyU2VydmljZTo6Q2xpZW50OjpzZXROZXh0UGxheWVyKGNvbnN0IHNwPElNZWRpYVBsYXll
cj4mIHBsYXllcikgewogICAgQUxPR1YoInNldE5leHRQbGF5ZXIiKTsKICAgIE11dGV4OjpBdXRvbG9j
ayBsKG1Mb2NrKTsKICAgIHNwPENsaWVudD4gYyA9IHN0YXRpY19jYXN0PENsaWVudCo+KHBsYXllci5n
ZXQoKSk7CiAgICBtTmV4dENsaWVudCA9IGM7CgogICAgaWYgKGMgIT0gTlVMTCkgewogICAgICAgIGlm
IChtQXVkaW9PdXRwdXQgIT0gTlVMTCkgewogICAgICAgICAgICBtQXVkaW9PdXRwdXQtPnNldE5leHRP
dXRwdXQoYy0+bUF1ZGlvT3V0cHV0KTsKICAgICAgICB9IGVsc2UgaWYgKChtUGxheWVyICE9IE5VTEwp
ICYmICFtUGxheWVyLT5oYXJkd2FyZU91dHB1dCgpKSB7CiAgICAgICAgICAgIEFMT0dFKCJubyBjdXJy
ZW50IGF1ZGlvIG91dHB1dCIpOwogICAgICAgIH0KCiAgICAgICAgaWYgKChtUGxheWVyICE9IE5VTEwp
ICYmIChtTmV4dENsaWVudC0+Z2V0UGxheWVyKCkgIT0gTlVMTCkpIHsKICAgICAgICAgICAgbVBsYXll
ci0+c2V0TmV4dFBsYXllcihtTmV4dENsaWVudC0+Z2V0UGxheWVyKCkpOwogICAgICAgIH0KICAgIH0K
CiAgICByZXR1cm4gT0s7Cn0KCnN0YXR1c190IE1lZGlhUGxheWVyU2VydmljZTo6Q2xpZW50OjpzZWVr
VG8oaW50IG1zZWMpCnsKICAgIEFMT0dWKCJbJWRdIHNlZWtUbyglZCkiLCBtQ29ubklkLCBtc2VjKTsK
ICAgIHNwPE1lZGlhUGxheWVyQmFzZT4gcCA9IGdldFBsYXllcigpOwogICAgaWYgKHAgPT0gMCkgcmV0
dXJuIFVOS05PV05fRVJST1I7CiAgICByZXR1cm4gcC0+c2Vla1RvKG1zZWMpOwp9CgpzdGF0dXNfdCBN
ZWRpYVBsYXllclNlcnZpY2U6OkNsaWVudDo6cmVzZXQoKQp7CiAgICBBTE9HVigiWyVkXSByZXNldCIs
IG1Db25uSWQpOwogICAgbVJldHJhbnNtaXRFbmRwb2ludFZhbGlkID0gZmFsc2U7CiAgICBzcDxNZWRp
YVBsYXllckJhc2U+IHAgPSBnZXRQbGF5ZXIoKTsKICAgIGlmIChwID09IDApIHJldHVybiBVTktOT1dO
X0VSUk9SOwogICAgcmV0dXJuIHAtPnJlc2V0KCk7Cn0KCnN0YXR1c190IE1lZGlhUGxheWVyU2Vydmlj
ZTo6Q2xpZW50OjpzZXRBdWRpb1N0cmVhbVR5cGUoYXVkaW9fc3RyZWFtX3R5cGVfdCB0eXBlKQp7CiAg
ICBBTE9HVigiWyVkXSBzZXRBdWRpb1N0cmVhbVR5cGUoJWQpIiwgbUNvbm5JZCwgdHlwZSk7CiAgICAv
LyBUT0RPOiBmb3IgaGFyZHdhcmUgb3V0cHV0LCBjYWxsIHBsYXllciBpbnN0ZWFkCiAgICBNdXRleDo6
QXV0b2xvY2sgbChtTG9jayk7CiAgICBpZiAobUF1ZGlvT3V0cHV0ICE9IDApIG1BdWRpb091dHB1dC0+
c2V0QXVkaW9TdHJlYW1UeXBlKHR5cGUpOwogICAgcmV0dXJuIE5PX0VSUk9SOwp9CgpzdGF0dXNfdCBN
ZWRpYVBsYXllclNlcnZpY2U6OkNsaWVudDo6c2V0QXVkaW9BdHRyaWJ1dGVzX2woY29uc3QgUGFyY2Vs
ICZwYXJjZWwpCnsKICAgIGlmIChtQXVkaW9BdHRyaWJ1dGVzICE9IE5VTEwpIHsgZnJlZShtQXVkaW9B
dHRyaWJ1dGVzKTsgfQogICAgbUF1ZGlvQXR0cmlidXRlcyA9IChhdWRpb19hdHRyaWJ1dGVzX3QgKikg
Y2FsbG9jKDEsIHNpemVvZihhdWRpb19hdHRyaWJ1dGVzX3QpKTsKICAgIHVubWFyc2hhbGxBdWRpb0F0
dHJpYnV0ZXMocGFyY2VsLCBtQXVkaW9BdHRyaWJ1dGVzKTsKCiAgICBBTE9HVigic2V0QXVkaW9BdHRy
aWJ1dGVzX2woKSB1c2FnZT0lZCBjb250ZW50PSVkIGZsYWdzPTB4JXggdGFncz0lcyIsCiAgICAgICAg
ICAgIG1BdWRpb0F0dHJpYnV0ZXMtPnVzYWdlLCBtQXVkaW9BdHRyaWJ1dGVzLT5jb250ZW50X3R5cGUs
IG1BdWRpb0F0dHJpYnV0ZXMtPmZsYWdzLAogICAgICAgICAgICBtQXVkaW9BdHRyaWJ1dGVzLT50YWdz
KTsKCiAgICBpZiAobUF1ZGlvT3V0cHV0ICE9IDApIHsKICAgICAgICBtQXVkaW9PdXRwdXQtPnNldEF1
ZGlvQXR0cmlidXRlcyhtQXVkaW9BdHRyaWJ1dGVzKTsKICAgIH0KICAgIHJldHVybiBOT19FUlJPUjsK
fQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpDbGllbnQ6OnNldExvb3BpbmcoaW50IGxvb3Ap
CnsKICAgIEFMT0dWKCJbJWRdIHNldExvb3BpbmcoJWQpIiwgbUNvbm5JZCwgbG9vcCk7CiAgICBtTG9v
cCA9IGxvb3A7CiAgICBzcDxNZWRpYVBsYXllckJhc2U+IHAgPSBnZXRQbGF5ZXIoKTsKICAgIGlmIChw
ICE9IDApIHJldHVybiBwLT5zZXRMb29waW5nKGxvb3ApOwogICAgcmV0dXJuIE5PX0VSUk9SOwp9Cgpz
dGF0dXNfdCBNZWRpYVBsYXllclNlcnZpY2U6OkNsaWVudDo6c2V0Vm9sdW1lKGZsb2F0IGxlZnRWb2x1
bWUsIGZsb2F0IHJpZ2h0Vm9sdW1lKQp7CiAgICBBTE9HVigiWyVkXSBzZXRWb2x1bWUoJWYsICVmKSIs
IG1Db25uSWQsIGxlZnRWb2x1bWUsIHJpZ2h0Vm9sdW1lKTsKCiAgICAvLyBmb3IgaGFyZHdhcmUgb3V0
cHV0LCBjYWxsIHBsYXllciBpbnN0ZWFkCiAgICBzcDxNZWRpYVBsYXllckJhc2U+IHAgPSBnZXRQbGF5
ZXIoKTsKICAgIHsKICAgICAgTXV0ZXg6OkF1dG9sb2NrIGwobUxvY2spOwogICAgICBpZiAocCAhPSAw
ICYmIHAtPmhhcmR3YXJlT3V0cHV0KCkpIHsKICAgICAgICAgIE1lZGlhUGxheWVySFdJbnRlcmZhY2Uq
IGh3cCA9CiAgICAgICAgICAgICAgICAgIHJlaW50ZXJwcmV0X2Nhc3Q8TWVkaWFQbGF5ZXJIV0ludGVy
ZmFjZSo+KHAuZ2V0KCkpOwogICAgICAgICAgcmV0dXJuIGh3cC0+c2V0Vm9sdW1lKGxlZnRWb2x1bWUs
IHJpZ2h0Vm9sdW1lKTsKICAgICAgfSBlbHNlIHsKICAgICAgICAgIGlmIChtQXVkaW9PdXRwdXQgIT0g
MCkgbUF1ZGlvT3V0cHV0LT5zZXRWb2x1bWUobGVmdFZvbHVtZSwgcmlnaHRWb2x1bWUpOwogICAgICAg
ICAgcmV0dXJuIE5PX0VSUk9SOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIE5PX0VSUk9SOwp9Cgpz
dGF0dXNfdCBNZWRpYVBsYXllclNlcnZpY2U6OkNsaWVudDo6c2V0QXV4RWZmZWN0U2VuZExldmVsKGZs
b2F0IGxldmVsKQp7CiAgICBBTE9HVigiWyVkXSBzZXRBdXhFZmZlY3RTZW5kTGV2ZWwoJWYpIiwgbUNv
bm5JZCwgbGV2ZWwpOwogICAgTXV0ZXg6OkF1dG9sb2NrIGwobUxvY2spOwogICAgaWYgKG1BdWRpb091
dHB1dCAhPSAwKSByZXR1cm4gbUF1ZGlvT3V0cHV0LT5zZXRBdXhFZmZlY3RTZW5kTGV2ZWwobGV2ZWwp
OwogICAgcmV0dXJuIE5PX0VSUk9SOwp9CgpzdGF0dXNfdCBNZWRpYVBsYXllclNlcnZpY2U6OkNsaWVu
dDo6YXR0YWNoQXV4RWZmZWN0KGludCBlZmZlY3RJZCkKewogICAgQUxPR1YoIlslZF0gYXR0YWNoQXV4
RWZmZWN0KCVkKSIsIG1Db25uSWQsIGVmZmVjdElkKTsKICAgIE11dGV4OjpBdXRvbG9jayBsKG1Mb2Nr
KTsKICAgIGlmIChtQXVkaW9PdXRwdXQgIT0gMCkgcmV0dXJuIG1BdWRpb091dHB1dC0+YXR0YWNoQXV4
RWZmZWN0KGVmZmVjdElkKTsKICAgIHJldHVybiBOT19FUlJPUjsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5
ZXJTZXJ2aWNlOjpDbGllbnQ6OnNldFBhcmFtZXRlcihpbnQga2V5LCBjb25zdCBQYXJjZWwgJnJlcXVl
c3QpIHsKICAgIEFMT0dWKCJbJWRdIHNldFBhcmFtZXRlciglZCkiLCBtQ29ubklkLCBrZXkpOwogICAg
c3dpdGNoIChrZXkpIHsKICAgIGNhc2UgS0VZX1BBUkFNRVRFUl9BVURJT19BVFRSSUJVVEVTOgogICAg
ewogICAgICAgIE11dGV4OjpBdXRvbG9jayBsKG1Mb2NrKTsKICAgICAgICByZXR1cm4gc2V0QXVkaW9B
dHRyaWJ1dGVzX2wocmVxdWVzdCk7CiAgICB9CiAgICBkZWZhdWx0OgogICAgICAgIHNwPE1lZGlhUGxh
eWVyQmFzZT4gcCA9IGdldFBsYXllcigpOwogICAgICAgIGlmIChwID09IDApIHsgcmV0dXJuIFVOS05P
V05fRVJST1I7IH0KICAgICAgICByZXR1cm4gcC0+c2V0UGFyYW1ldGVyKGtleSwgcmVxdWVzdCk7CiAg
ICB9Cn0KCnN0YXR1c190IE1lZGlhUGxheWVyU2VydmljZTo6Q2xpZW50OjpnZXRQYXJhbWV0ZXIoaW50
IGtleSwgUGFyY2VsICpyZXBseSkgewogICAgQUxPR1YoIlslZF0gZ2V0UGFyYW1ldGVyKCVkKSIsIG1D
b25uSWQsIGtleSk7CiAgICBzcDxNZWRpYVBsYXllckJhc2U+IHAgPSBnZXRQbGF5ZXIoKTsKICAgIGlm
IChwID09IDApIHJldHVybiBVTktOT1dOX0VSUk9SOwogICAgcmV0dXJuIHAtPmdldFBhcmFtZXRlcihr
ZXksIHJlcGx5KTsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpDbGllbnQ6OnNldFJldHJh
bnNtaXRFbmRwb2ludCgKICAgICAgICBjb25zdCBzdHJ1Y3Qgc29ja2FkZHJfaW4qIGVuZHBvaW50KSB7
CgogICAgaWYgKE5VTEwgIT0gZW5kcG9pbnQpIHsKICAgICAgICB1aW50MzJfdCBhID0gbnRvaGwoZW5k
cG9pbnQtPnNpbl9hZGRyLnNfYWRkcik7CiAgICAgICAgdWludDE2X3QgcCA9IG50b2hzKGVuZHBvaW50
LT5zaW5fcG9ydCk7CiAgICAgICAgQUxPR1YoIlslZF0gc2V0UmV0cmFuc21pdEVuZHBvaW50KCV1LiV1
LiV1LiV1OiVodSkiLCBtQ29ubklkLAogICAgICAgICAgICAgICAgKGEgPj4gMjQpLCAoYSA+PiAxNikg
JiAweEZGLCAoYSA+PiA4KSAmIDB4RkYsIChhICYgMHhGRiksIHApOwogICAgfSBlbHNlIHsKICAgICAg
ICBBTE9HVigiWyVkXSBzZXRSZXRyYW5zbWl0RW5kcG9pbnQgPSA8bm9uZT4iLCBtQ29ubklkKTsKICAg
IH0KCiAgICBzcDxNZWRpYVBsYXllckJhc2U+IHAgPSBnZXRQbGF5ZXIoKTsKCiAgICAvLyBSaWdodCBu
b3csIHRoZSBvbmx5IHZhbGlkIHRpbWUgdG8gc2V0IGEgcmV0cmFuc21pdCBlbmRwb2ludCBpcyBiZWZv
cmUKICAgIC8vIHBsYXllciBzZWxlY3Rpb24gaGFzIGJlZW4gbWFkZSAoc2luY2UgdGhlIHByZXNlbmNl
IG9yIGFic2VuY2Ugb2YgYQogICAgLy8gcmV0cmFuc21pdCBlbmRwb2ludCBpcyBnb2luZyB0byBkZXRl
cm1pbmUgd2hpY2ggcGxheWVyIGlzIHNlbGVjdGVkIGR1cmluZwogICAgLy8gc2V0RGF0YVNvdXJjZSku
CiAgICBpZiAocCAhPSAwKSByZXR1cm4gSU5WQUxJRF9PUEVSQVRJT047CgogICAgaWYgKE5VTEwgIT0g
ZW5kcG9pbnQpIHsKICAgICAgICBtUmV0cmFuc21pdEVuZHBvaW50ID0gKmVuZHBvaW50OwogICAgICAg
IG1SZXRyYW5zbWl0RW5kcG9pbnRWYWxpZCA9IHRydWU7CiAgICB9IGVsc2UgewogICAgICAgIG1SZXRy
YW5zbWl0RW5kcG9pbnRWYWxpZCA9IGZhbHNlOwogICAgfQoKICAgIHJldHVybiBOT19FUlJPUjsKfQoK
c3RhdHVzX3QgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpDbGllbnQ6OmdldFJldHJhbnNtaXRFbmRwb2ludCgK
ICAgICAgICBzdHJ1Y3Qgc29ja2FkZHJfaW4qIGVuZHBvaW50KQp7CiAgICBpZiAoTlVMTCA9PSBlbmRw
b2ludCkKICAgICAgICByZXR1cm4gQkFEX1ZBTFVFOwoKICAgIHNwPE1lZGlhUGxheWVyQmFzZT4gcCA9
IGdldFBsYXllcigpOwoKICAgIGlmIChwICE9IE5VTEwpCiAgICAgICAgcmV0dXJuIHAtPmdldFJldHJh
bnNtaXRFbmRwb2ludChlbmRwb2ludCk7CgogICAgaWYgKCFtUmV0cmFuc21pdEVuZHBvaW50VmFsaWQp
CiAgICAgICAgcmV0dXJuIE5PX0lOSVQ7CgogICAgKmVuZHBvaW50ID0gbVJldHJhbnNtaXRFbmRwb2lu
dDsKCiAgICByZXR1cm4gTk9fRVJST1I7Cn0KCnZvaWQgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpDbGllbnQ6
Om5vdGlmeSgKICAgICAgICB2b2lkKiBjb29raWUsIGludCBtc2csIGludCBleHQxLCBpbnQgZXh0Miwg
Y29uc3QgUGFyY2VsICpvYmopCnsKICAgIENsaWVudCogY2xpZW50ID0gc3RhdGljX2Nhc3Q8Q2xpZW50
Kj4oY29va2llKTsKICAgIGlmIChjbGllbnQgPT0gTlVMTCkgewogICAgICAgIHJldHVybjsKICAgIH0K
CiAgICBzcDxJTWVkaWFQbGF5ZXJDbGllbnQ+IGM7CiAgICB7CiAgICAgICAgTXV0ZXg6OkF1dG9sb2Nr
IGwoY2xpZW50LT5tTG9jayk7CiAgICAgICAgYyA9IGNsaWVudC0+bUNsaWVudDsKICAgICAgICBpZiAo
bXNnID09IE1FRElBX1BMQVlCQUNLX0NPTVBMRVRFICYmIGNsaWVudC0+bU5leHRDbGllbnQgIT0gTlVM
TCkgewogICAgICAgICAgICBpZiAoY2xpZW50LT5tQXVkaW9PdXRwdXQgIT0gTlVMTCkKICAgICAgICAg
ICAgICAgIGNsaWVudC0+bUF1ZGlvT3V0cHV0LT5zd2l0Y2hUb05leHRPdXRwdXQoKTsKICAgICAgICAg
ICAgY2xpZW50LT5tTmV4dENsaWVudC0+c3RhcnQoKTsKICAgICAgICAgICAgY2xpZW50LT5tTmV4dENs
aWVudC0+bUNsaWVudC0+bm90aWZ5KE1FRElBX0lORk8sIE1FRElBX0lORk9fU1RBUlRFRF9BU19ORVhU
LCAwLCBvYmopOwogICAgICAgIH0KICAgIH0KCiAgICBpZiAoTUVESUFfSU5GTyA9PSBtc2cgJiYKICAg
ICAgICBNRURJQV9JTkZPX01FVEFEQVRBX1VQREFURSA9PSBleHQxKSB7CiAgICAgICAgY29uc3QgbWVk
aWE6Ok1ldGFkYXRhOjpUeXBlIG1ldGFkYXRhX3R5cGUgPSBleHQyOwoKICAgICAgICBpZihjbGllbnQt
PnNob3VsZERyb3BNZXRhZGF0YShtZXRhZGF0YV90eXBlKSkgewogICAgICAgICAgICByZXR1cm47CiAg
ICAgICAgfQoKICAgICAgICAvLyBVcGRhdGUgdGhlIGxpc3Qgb2YgbWV0YWRhdGEgdGhhdCBoYXZlIGNo
YW5nZWQuIGdldE1ldGFkYXRhCiAgICAgICAgLy8gYWxzbyBhY2Nlc3MgbU1ldGFkYXRhVXBkYXRlZCBh
bmQgY2xlYXJzIGl0LgogICAgICAgIGNsaWVudC0+YWRkTmV3TWV0YWRhdGFVcGRhdGUobWV0YWRhdGFf
dHlwZSk7CiAgICB9CgogICAgaWYgKGMgIT0gTlVMTCkgewogICAgICAgIEFMT0dWKCJbJWRdIG5vdGlm
eSAoJXAsICVkLCAlZCwgJWQpIiwgY2xpZW50LT5tQ29ubklkLCBjb29raWUsIG1zZywgZXh0MSwgZXh0
Mik7CiAgICAgICAgYy0+bm90aWZ5KG1zZywgZXh0MSwgZXh0Miwgb2JqKTsKICAgIH0KfQoKCmJvb2wg
TWVkaWFQbGF5ZXJTZXJ2aWNlOjpDbGllbnQ6OnNob3VsZERyb3BNZXRhZGF0YShtZWRpYTo6TWV0YWRh
dGE6OlR5cGUgY29kZSkgY29uc3QKewogICAgTXV0ZXg6OkF1dG9sb2NrIGxvY2sobUxvY2spOwoKICAg
IGlmIChmaW5kTWV0YWRhdGEobU1ldGFkYXRhRHJvcCwgY29kZSkpIHsKICAgICAgICByZXR1cm4gdHJ1
ZTsKICAgIH0KCiAgICBpZiAobU1ldGFkYXRhQWxsb3cuaXNFbXB0eSgpIHx8IGZpbmRNZXRhZGF0YSht
TWV0YWRhdGFBbGxvdywgY29kZSkpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9IGVsc2Ugewog
ICAgICAgIHJldHVybiB0cnVlOwogICAgfQp9CgoKdm9pZCBNZWRpYVBsYXllclNlcnZpY2U6OkNsaWVu
dDo6YWRkTmV3TWV0YWRhdGFVcGRhdGUobWVkaWE6Ok1ldGFkYXRhOjpUeXBlIG1ldGFkYXRhX3R5cGUp
IHsKICAgIE11dGV4OjpBdXRvbG9jayBsb2NrKG1Mb2NrKTsKICAgIGlmIChtTWV0YWRhdGFVcGRhdGVk
LmluZGV4T2YobWV0YWRhdGFfdHlwZSkgPCAwKSB7CiAgICAgICAgbU1ldGFkYXRhVXBkYXRlZC5hZGQo
bWV0YWRhdGFfdHlwZSk7CiAgICB9Cn0KCiNpZiBDQUxMQkFDS19BTlRBR09OSVpFUgpjb25zdCBpbnQg
QW50YWdvbml6ZXI6OmludGVydmFsID0gMTAwMDA7IC8vIDEwIG1zZWNzCgpBbnRhZ29uaXplcjo6QW50
YWdvbml6ZXIobm90aWZ5X2NhbGxiYWNrX2YgY2IsIHZvaWQqIGNsaWVudCkgOgogICAgbUV4aXQoZmFs
c2UpLCBtQWN0aXZlKGZhbHNlKSwgbUNsaWVudChjbGllbnQpLCBtQ2IoY2IpCnsKICAgIGNyZWF0ZVRo
cmVhZChjYWxsYmFja1RocmVhZCwgdGhpcyk7Cn0KCnZvaWQgQW50YWdvbml6ZXI6OmtpbGwoKQp7CiAg
ICBNdXRleDo6QXV0b2xvY2sgX2wobUxvY2spOwogICAgbUFjdGl2ZSA9IGZhbHNlOwogICAgbUV4aXQg
PSB0cnVlOwogICAgbUNvbmRpdGlvbi53YWl0KG1Mb2NrKTsKfQoKaW50IEFudGFnb25pemVyOjpjYWxs
YmFja1RocmVhZCh2b2lkKiB1c2VyKQp7CiAgICBBTE9HRCgiQW50YWdvbml6ZXIgc3RhcnRlZCIpOwog
ICAgQW50YWdvbml6ZXIqIHAgPSByZWludGVycHJldF9jYXN0PEFudGFnb25pemVyKj4odXNlcik7CiAg
ICB3aGlsZSAoIXAtPm1FeGl0KSB7CiAgICAgICAgaWYgKHAtPm1BY3RpdmUpIHsKICAgICAgICAgICAg
QUxPR1YoInNlbmQgZXZlbnQiKTsKICAgICAgICAgICAgcC0+bUNiKHAtPm1DbGllbnQsIDAsIDAsIDAp
OwogICAgICAgIH0KICAgICAgICB1c2xlZXAoaW50ZXJ2YWwpOwogICAgfQogICAgTXV0ZXg6OkF1dG9s
b2NrIF9sKHAtPm1Mb2NrKTsKICAgIHAtPm1Db25kaXRpb24uc2lnbmFsKCk7CiAgICBBTE9HRCgiQW50
YWdvbml6ZXIgc3RvcHBlZCIpOwogICAgcmV0dXJuIDA7Cn0KI2VuZGlmCgpzdGF0dXNfdCBNZWRpYVBs
YXllclNlcnZpY2U6OmRlY29kZSgKICAgICAgICBjb25zdCBzcDxJTWVkaWFIVFRQU2VydmljZT4gJmh0
dHBTZXJ2aWNlLAogICAgICAgIGNvbnN0IGNoYXIqIHVybCwKICAgICAgICB1aW50MzJfdCAqcFNhbXBs
ZVJhdGUsCiAgICAgICAgaW50KiBwTnVtQ2hhbm5lbHMsCiAgICAgICAgYXVkaW9fZm9ybWF0X3QqIHBG
b3JtYXQsCiAgICAgICAgY29uc3Qgc3A8SU1lbW9yeUhlYXA+JiBoZWFwLAogICAgICAgIHNpemVfdCAq
cFNpemUpCnsKICAgIEFMT0dWKCJkZWNvZGUoJXMpIiwgdXJsKTsKICAgIHNwPE1lZGlhUGxheWVyQmFz
ZT4gcGxheWVyOwogICAgc3RhdHVzX3Qgc3RhdHVzID0gQkFEX1ZBTFVFOwoKICAgIC8vIFByb3RlY3Qg
b3VyIHByZWNpb3VzLCBwcmVjaW91cyBEUk1kIHJpbmd0b25lcyBieSBvbmx5IGFsbG93aW5nCiAgICAv
LyBkZWNvZGluZyBvZiBodHRwLCBidXQgbm90IGZpbGVzeXN0ZW0gcGF0aHMgb3IgY29udGVudCBVcmlz
LgogICAgLy8gSWYgdGhlIGFwcGxpY2F0aW9uIHdhbnRzIHRvIGRlY29kZSB0aG9zZSwgaXQgc2hvdWxk
IG9wZW4gYQogICAgLy8gZmlsZWRlc2NyaXB0b3IgZm9yIHRoZW0gYW5kIHVzZSB0aGF0LgogICAgaWYg
KHVybCAhPSBOVUxMICYmIHN0cm5jbXAodXJsLCAiaHR0cDovLyIsIDcpICE9IDApIHsKICAgICAgICBB
TE9HRCgiQ2FuJ3QgZGVjb2RlICVzIGJ5IHBhdGgsIHVzZSBmaWxlZGVzY3JpcHRvciBpbnN0ZWFkIiwg
dXJsKTsKICAgICAgICByZXR1cm4gQkFEX1ZBTFVFOwogICAgfQoKICAgIHBsYXllcl90eXBlIHBsYXll
clR5cGUgPQogICAgICAgIE1lZGlhUGxheWVyRmFjdG9yeTo6Z2V0UGxheWVyVHlwZShOVUxMIC8qIGNs
aWVudCAqLywgdXJsKTsKICAgIEFMT0dWKCJwbGF5ZXIgdHlwZSA9ICVkIiwgcGxheWVyVHlwZSk7Cgog
ICAgLy8gY3JlYXRlIHRoZSByaWdodCB0eXBlIG9mIHBsYXllcgogICAgc3A8QXVkaW9DYWNoZT4gY2Fj
aGUgPSBuZXcgQXVkaW9DYWNoZShoZWFwKTsKICAgIHBsYXllciA9IE1lZGlhUGxheWVyRmFjdG9yeTo6
Y3JlYXRlUGxheWVyKHBsYXllclR5cGUsIGNhY2hlLmdldCgpLCBjYWNoZS0+bm90aWZ5KTsKICAgIGlm
IChwbGF5ZXIgPT0gTlVMTCkgZ290byBFeGl0OwogICAgaWYgKHBsYXllci0+aGFyZHdhcmVPdXRwdXQo
KSkgZ290byBFeGl0OwoKICAgIHN0YXRpY19jYXN0PE1lZGlhUGxheWVySW50ZXJmYWNlKj4ocGxheWVy
LmdldCgpKS0+c2V0QXVkaW9TaW5rKGNhY2hlKTsKCiAgICAvLyBzZXQgZGF0YSBzb3VyY2UKICAgIGlm
IChwbGF5ZXItPnNldERhdGFTb3VyY2UoaHR0cFNlcnZpY2UsIHVybCkgIT0gTk9fRVJST1IpIGdvdG8g
RXhpdDsKCiAgICBBTE9HVigicHJlcGFyZSIpOwogICAgcGxheWVyLT5wcmVwYXJlQXN5bmMoKTsKCiAg
ICBBTE9HVigid2FpdCBmb3IgcHJlcGFyZSIpOwogICAgaWYgKGNhY2hlLT53YWl0KCkgIT0gTk9fRVJS
T1IpIGdvdG8gRXhpdDsKCiAgICBBTE9HVigic3RhcnQiKTsKICAgIHBsYXllci0+c3RhcnQoKTsKCiAg
ICBBTE9HVigid2FpdCBmb3IgcGxheWJhY2sgY29tcGxldGUiKTsKICAgIGNhY2hlLT53YWl0KCk7CiAg
ICAvLyBpbiBjYXNlIG9mIGVycm9yLCByZXR1cm4gd2hhdCB3YXMgc3VjY2Vzc2Z1bGx5IGRlY29kZWQu
CiAgICBpZiAoY2FjaGUtPnNpemUoKSA9PSAwKSB7CiAgICAgICAgZ290byBFeGl0OwogICAgfQoKICAg
ICpwU2l6ZSA9IGNhY2hlLT5zaXplKCk7CiAgICAqcFNhbXBsZVJhdGUgPSBjYWNoZS0+c2FtcGxlUmF0
ZSgpOwogICAgKnBOdW1DaGFubmVscyA9IGNhY2hlLT5jaGFubmVsQ291bnQoKTsKICAgICpwRm9ybWF0
ID0gY2FjaGUtPmZvcm1hdCgpOwogICAgQUxPR1YoInJldHVybiBzaXplICVkIHNhbXBsZVJhdGU9JXUs
IGNoYW5uZWxDb3VudCA9ICVkLCBmb3JtYXQgPSAlZCIsCiAgICAgICAgICAqcFNpemUsICpwU2FtcGxl
UmF0ZSwgKnBOdW1DaGFubmVscywgKnBGb3JtYXQpOwogICAgc3RhdHVzID0gTk9fRVJST1I7CgpFeGl0
OgogICAgaWYgKHBsYXllciAhPSAwKSBwbGF5ZXItPnJlc2V0KCk7CiAgICByZXR1cm4gc3RhdHVzOwp9
CgpzdGF0dXNfdCBNZWRpYVBsYXllclNlcnZpY2U6OmRlY29kZShpbnQgZmQsIGludDY0X3Qgb2Zmc2V0
LCBpbnQ2NF90IGxlbmd0aCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdWlu
dDMyX3QgKnBTYW1wbGVSYXRlLCBpbnQqIHBOdW1DaGFubmVscywKICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgYXVkaW9fZm9ybWF0X3QqIHBGb3JtYXQsCiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNwPElNZW1vcnlIZWFwPiYgaGVhcCwgc2l6ZV90ICpw
U2l6ZSkKewogICAgQUxPR1YoImRlY29kZSglZCwgJWxsZCwgJWxsZCkiLCBmZCwgb2Zmc2V0LCBsZW5n
dGgpOwogICAgc3A8TWVkaWFQbGF5ZXJCYXNlPiBwbGF5ZXI7CiAgICBzdGF0dXNfdCBzdGF0dXMgPSBC
QURfVkFMVUU7CgogICAgcGxheWVyX3R5cGUgcGxheWVyVHlwZSA9IE1lZGlhUGxheWVyRmFjdG9yeTo6
Z2V0UGxheWVyVHlwZShOVUxMIC8qIGNsaWVudCAqLywKICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmQsCiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldCwKICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVuZ3Ro
KTsKICAgIEFMT0dWKCJwbGF5ZXIgdHlwZSA9ICVkIiwgcGxheWVyVHlwZSk7CgogICAgLy8gY3JlYXRl
IHRoZSByaWdodCB0eXBlIG9mIHBsYXllcgogICAgc3A8QXVkaW9DYWNoZT4gY2FjaGUgPSBuZXcgQXVk
aW9DYWNoZShoZWFwKTsKICAgIHBsYXllciA9IE1lZGlhUGxheWVyRmFjdG9yeTo6Y3JlYXRlUGxheWVy
KHBsYXllclR5cGUsIGNhY2hlLmdldCgpLCBjYWNoZS0+bm90aWZ5KTsKICAgIGlmIChwbGF5ZXIgPT0g
TlVMTCkgZ290byBFeGl0OwogICAgaWYgKHBsYXllci0+aGFyZHdhcmVPdXRwdXQoKSkgZ290byBFeGl0
OwoKICAgIHN0YXRpY19jYXN0PE1lZGlhUGxheWVySW50ZXJmYWNlKj4ocGxheWVyLmdldCgpKS0+c2V0
QXVkaW9TaW5rKGNhY2hlKTsKCiAgICAvLyBzZXQgZGF0YSBzb3VyY2UKICAgIGlmIChwbGF5ZXItPnNl
dERhdGFTb3VyY2UoZmQsIG9mZnNldCwgbGVuZ3RoKSAhPSBOT19FUlJPUikgZ290byBFeGl0OwoKICAg
IEFMT0dWKCJwcmVwYXJlIik7CiAgICBwbGF5ZXItPnByZXBhcmVBc3luYygpOwoKICAgIEFMT0dWKCJ3
YWl0IGZvciBwcmVwYXJlIik7CiAgICBpZiAoY2FjaGUtPndhaXQoKSAhPSBOT19FUlJPUikgZ290byBF
eGl0OwoKICAgIEFMT0dWKCJzdGFydCIpOwogICAgcGxheWVyLT5zdGFydCgpOwoKICAgIEFMT0dWKCJ3
YWl0IGZvciBwbGF5YmFjayBjb21wbGV0ZSIpOwogICAgY2FjaGUtPndhaXQoKTsKICAgIC8vIGluIGNh
c2Ugb2YgZXJyb3IsIHJldHVybiB3aGF0IHdhcyBzdWNjZXNzZnVsbHkgZGVjb2RlZC4KICAgIGlmIChj
YWNoZS0+c2l6ZSgpID09IDApIHsKICAgICAgICBnb3RvIEV4aXQ7CiAgICB9CgogICAgKnBTaXplID0g
Y2FjaGUtPnNpemUoKTsKICAgICpwU2FtcGxlUmF0ZSA9IGNhY2hlLT5zYW1wbGVSYXRlKCk7CiAgICAq
cE51bUNoYW5uZWxzID0gY2FjaGUtPmNoYW5uZWxDb3VudCgpOwogICAgKnBGb3JtYXQgPSBjYWNoZS0+
Zm9ybWF0KCk7CiAgICBBTE9HVigicmV0dXJuIHNpemUgJWQsIHNhbXBsZVJhdGU9JXUsIGNoYW5uZWxD
b3VudCA9ICVkLCBmb3JtYXQgPSAlZCIsCiAgICAgICAgICAqcFNpemUsICpwU2FtcGxlUmF0ZSwgKnBO
dW1DaGFubmVscywgKnBGb3JtYXQpOwogICAgc3RhdHVzID0gTk9fRVJST1I7CgpFeGl0OgogICAgaWYg
KHBsYXllciAhPSAwKSBwbGF5ZXItPnJlc2V0KCk7CiAgICA6OmNsb3NlKGZkKTsKICAgIHJldHVybiBz
dGF0dXM7Cn0KCgojdW5kZWYgTE9HX1RBRwojZGVmaW5lIExPR19UQUcgIkF1ZGlvU2luayIKTWVkaWFQ
bGF5ZXJTZXJ2aWNlOjpBdWRpb091dHB1dDo6QXVkaW9PdXRwdXQoaW50IHNlc3Npb25JZCwgaW50IHVp
ZCwgaW50IHBpZCwKICAgICAgICBjb25zdCBhdWRpb19hdHRyaWJ1dGVzX3QqIGF0dHIpCiAgICA6IG1D
YWxsYmFjayhOVUxMKSwKICAgICAgbUNhbGxiYWNrQ29va2llKE5VTEwpLAogICAgICBtQ2FsbGJhY2tE
YXRhKE5VTEwpLAogICAgICBtQnl0ZXNXcml0dGVuKDApLAogICAgICBtU2Vzc2lvbklkKHNlc3Npb25J
ZCksCiAgICAgIG1VaWQodWlkKSwKICAgICAgbVBpZChwaWQpLAogICAgICBtRmxhZ3MoQVVESU9fT1VU
UFVUX0ZMQUdfTk9ORSkgewogICAgQUxPR1YoIkF1ZGlvT3V0cHV0KCVkKSIsIHNlc3Npb25JZCk7CiAg
ICBtU3RyZWFtVHlwZSA9IEFVRElPX1NUUkVBTV9NVVNJQzsKICAgIG1MZWZ0Vm9sdW1lID0gMS4wOwog
ICAgbVJpZ2h0Vm9sdW1lID0gMS4wOwogICAgbVBsYXliYWNrUmF0ZVBlcm1pbGxlID0gMTAwMDsKICAg
IG1TYW1wbGVSYXRlSHogPSAwOwogICAgbU1zZWNzUGVyRnJhbWUgPSAwOwogICAgbUF1eEVmZmVjdElk
ID0gMDsKICAgIG1TZW5kTGV2ZWwgPSAwLjA7CiAgICBzZXRNaW5CdWZmZXJDb3VudCgpOwogICAgbUF0
dHJpYnV0ZXMgPSBhdHRyOwp9CgpNZWRpYVBsYXllclNlcnZpY2U6OkF1ZGlvT3V0cHV0Ojp+QXVkaW9P
dXRwdXQoKQp7CiAgICBjbG9zZSgpOwogICAgZGVsZXRlIG1DYWxsYmFja0RhdGE7Cn0KCnZvaWQgTWVk
aWFQbGF5ZXJTZXJ2aWNlOjpBdWRpb091dHB1dDo6c2V0TWluQnVmZmVyQ291bnQoKQp7CiAgICBjaGFy
IHZhbHVlW1BST1BFUlRZX1ZBTFVFX01BWF07CiAgICBpZiAocHJvcGVydHlfZ2V0KCJyby5rZXJuZWwu
cWVtdSIsIHZhbHVlLCAwKSkgewogICAgICAgIG1Jc09uRW11bGF0b3IgPSB0cnVlOwogICAgICAgIG1N
aW5CdWZmZXJDb3VudCA9IDEyOyAgLy8gdG8gcHJldmVudCBzeXN0ZW1hdGljIGJ1ZmZlciB1bmRlcnJ1
biBmb3IgZW11bGF0b3IKICAgIH0KfQoKYm9vbCBNZWRpYVBsYXllclNlcnZpY2U6OkF1ZGlvT3V0cHV0
Ojppc09uRW11bGF0b3IoKQp7CiAgICBzZXRNaW5CdWZmZXJDb3VudCgpOwogICAgcmV0dXJuIG1Jc09u
RW11bGF0b3I7Cn0KCmludCBNZWRpYVBsYXllclNlcnZpY2U6OkF1ZGlvT3V0cHV0OjpnZXRNaW5CdWZm
ZXJDb3VudCgpCnsKICAgIHNldE1pbkJ1ZmZlckNvdW50KCk7CiAgICByZXR1cm4gbU1pbkJ1ZmZlckNv
dW50Owp9Cgpzc2l6ZV90IE1lZGlhUGxheWVyU2VydmljZTo6QXVkaW9PdXRwdXQ6OmJ1ZmZlclNpemUo
KSBjb25zdAp7CiAgICBpZiAobVRyYWNrID09IDApIHJldHVybiBOT19JTklUOwogICAgcmV0dXJuIG1U
cmFjay0+ZnJhbWVDb3VudCgpICogZnJhbWVTaXplKCk7Cn0KCnNzaXplX3QgTWVkaWFQbGF5ZXJTZXJ2
aWNlOjpBdWRpb091dHB1dDo6ZnJhbWVDb3VudCgpIGNvbnN0CnsKICAgIGlmIChtVHJhY2sgPT0gMCkg
cmV0dXJuIE5PX0lOSVQ7CiAgICByZXR1cm4gbVRyYWNrLT5mcmFtZUNvdW50KCk7Cn0KCnNzaXplX3Qg
TWVkaWFQbGF5ZXJTZXJ2aWNlOjpBdWRpb091dHB1dDo6Y2hhbm5lbENvdW50KCkgY29uc3QKewogICAg
aWYgKG1UcmFjayA9PSAwKSByZXR1cm4gTk9fSU5JVDsKICAgIHJldHVybiBtVHJhY2stPmNoYW5uZWxD
b3VudCgpOwp9Cgpzc2l6ZV90IE1lZGlhUGxheWVyU2VydmljZTo6QXVkaW9PdXRwdXQ6OmZyYW1lU2l6
ZSgpIGNvbnN0CnsKICAgIGlmIChtVHJhY2sgPT0gMCkgcmV0dXJuIE5PX0lOSVQ7CiAgICByZXR1cm4g
bVRyYWNrLT5mcmFtZVNpemUoKTsKfQoKdWludDMyX3QgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpBdWRpb091
dHB1dDo6bGF0ZW5jeSAoKSBjb25zdAp7CiAgICBpZiAobVRyYWNrID09IDApIHJldHVybiAwOwogICAg
cmV0dXJuIG1UcmFjay0+bGF0ZW5jeSgpOwp9CgpmbG9hdCBNZWRpYVBsYXllclNlcnZpY2U6OkF1ZGlv
T3V0cHV0Ojptc2Vjc1BlckZyYW1lKCkgY29uc3QKewogICAgcmV0dXJuIG1Nc2Vjc1BlckZyYW1lOwp9
CgpzdGF0dXNfdCBNZWRpYVBsYXllclNlcnZpY2U6OkF1ZGlvT3V0cHV0OjpnZXRQb3NpdGlvbih1aW50
MzJfdCAqcG9zaXRpb24pIGNvbnN0CnsKICAgIGlmIChtVHJhY2sgPT0gMCkgcmV0dXJuIE5PX0lOSVQ7
CiAgICByZXR1cm4gbVRyYWNrLT5nZXRQb3NpdGlvbihwb3NpdGlvbik7Cn0KCnN0YXR1c190IE1lZGlh
UGxheWVyU2VydmljZTo6QXVkaW9PdXRwdXQ6OmdldFRpbWVzdGFtcChBdWRpb1RpbWVzdGFtcCAmdHMp
IGNvbnN0CnsKICAgIGlmIChtVHJhY2sgPT0gMCkgcmV0dXJuIE5PX0lOSVQ7CiAgICByZXR1cm4gbVRy
YWNrLT5nZXRUaW1lc3RhbXAodHMpOwp9CgpzdGF0dXNfdCBNZWRpYVBsYXllclNlcnZpY2U6OkF1ZGlv
T3V0cHV0OjpnZXRGcmFtZXNXcml0dGVuKHVpbnQzMl90ICpmcmFtZXN3cml0dGVuKSBjb25zdAp7CiAg
ICBpZiAobVRyYWNrID09IDApIHJldHVybiBOT19JTklUOwogICAgKmZyYW1lc3dyaXR0ZW4gPSBtQnl0
ZXNXcml0dGVuIC8gZnJhbWVTaXplKCk7CiAgICByZXR1cm4gT0s7Cn0KCnN0YXR1c190IE1lZGlhUGxh
eWVyU2VydmljZTo6QXVkaW9PdXRwdXQ6OnNldFBhcmFtZXRlcnMoY29uc3QgU3RyaW5nOCYga2V5VmFs
dWVQYWlycykKewogICAgaWYgKG1UcmFjayA9PSAwKSByZXR1cm4gTk9fSU5JVDsKICAgIHJldHVybiBt
VHJhY2stPnNldFBhcmFtZXRlcnMoa2V5VmFsdWVQYWlycyk7Cn0KClN0cmluZzggIE1lZGlhUGxheWVy
U2VydmljZTo6QXVkaW9PdXRwdXQ6OmdldFBhcmFtZXRlcnMoY29uc3QgU3RyaW5nOCYga2V5cykKewog
ICAgaWYgKG1UcmFjayA9PSAwKSByZXR1cm4gU3RyaW5nODo6ZW1wdHkoKTsKICAgIHJldHVybiBtVHJh
Y2stPmdldFBhcmFtZXRlcnMoa2V5cyk7Cn0KCnZvaWQgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpBdWRpb091
dHB1dDo6c2V0QXVkaW9BdHRyaWJ1dGVzKGNvbnN0IGF1ZGlvX2F0dHJpYnV0ZXNfdCAqIGF0dHJpYnV0
ZXMpIHsKICAgIG1BdHRyaWJ1dGVzID0gYXR0cmlidXRlczsKfQoKdm9pZCBNZWRpYVBsYXllclNlcnZp
Y2U6OkF1ZGlvT3V0cHV0OjpkZWxldGVSZWN5Y2xlZFRyYWNrKCkKewogICAgQUxPR1YoImRlbGV0ZVJl
Y3ljbGVkVHJhY2siKTsKCiAgICBpZiAobVJlY3ljbGVkVHJhY2sgIT0gMCkgewoKICAgICAgICBpZiAo
bUNhbGxiYWNrRGF0YSAhPSBOVUxMKSB7CiAgICAgICAgICAgIG1DYWxsYmFja0RhdGEtPnNldE91dHB1
dChOVUxMKTsKICAgICAgICAgICAgbUNhbGxiYWNrRGF0YS0+ZW5kVHJhY2tTd2l0Y2goKTsKICAgICAg
ICB9CgogICAgICAgIGlmICgobVJlY3ljbGVkVHJhY2stPmdldEZsYWdzKCkgJiBBVURJT19PVVRQVVRf
RkxBR19DT01QUkVTU19PRkZMT0FEKSA9PSAwKSB7CiAgICAgICAgICAgIG1SZWN5Y2xlZFRyYWNrLT5m
bHVzaCgpOwogICAgICAgIH0KICAgICAgICAvLyBBbiBvZmZsb2FkZWQgdHJhY2sgaXNuJ3QgZmx1c2hl
ZCBiZWNhdXNlIHRoZSBTVFJFQU1fRU5EIGlzIHJlcG9ydGVkCiAgICAgICAgLy8gc2xpZ2h0bHkgcHJl
bWF0dXJlbHkgdG8gYWxsb3cgdGltZSBmb3IgdGhlIGdhcGxlc3MgdHJhY2sgc3dpdGNoCiAgICAgICAg
Ly8gYnV0IHRoaXMgbWVhbnMgdGhhdCBpZiB3ZSBkZWNpZGUgbm90IHRvIHJlY3ljbGUgdGhlIHRyYWNr
IHRoZXJlCiAgICAgICAgLy8gY291bGQgYmUgYSBzbWFsbCBhbW91bnQgb2YgcmVzaWR1YWwgZGF0YSBz
dGlsbCBwbGF5aW5nLiBXZSBsZWF2ZQogICAgICAgIC8vIEF1ZGlvRmxpbmdlciB0byBkcmFpbiB0aGUg
dHJhY2suCgogICAgICAgIG1SZWN5Y2xlZFRyYWNrLmNsZWFyKCk7CiAgICAgICAgZGVsZXRlIG1DYWxs
YmFja0RhdGE7CiAgICAgICAgbUNhbGxiYWNrRGF0YSA9IE5VTEw7CiAgICAgICAgY2xvc2UoKTsKICAg
IH0KfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpBdWRpb091dHB1dDo6b3BlbigKICAgICAg
ICB1aW50MzJfdCBzYW1wbGVSYXRlLCBpbnQgY2hhbm5lbENvdW50LCBhdWRpb19jaGFubmVsX21hc2tf
dCBjaGFubmVsTWFzaywKICAgICAgICBhdWRpb19mb3JtYXRfdCBmb3JtYXQsIGludCBidWZmZXJDb3Vu
dCwKICAgICAgICBBdWRpb0NhbGxiYWNrIGNiLCB2b2lkICpjb29raWUsCiAgICAgICAgYXVkaW9fb3V0
cHV0X2ZsYWdzX3QgZmxhZ3MsCiAgICAgICAgY29uc3QgYXVkaW9fb2ZmbG9hZF9pbmZvX3QgKm9mZmxv
YWRJbmZvKQp7CiAgICBtQ2FsbGJhY2sgPSBjYjsKICAgIG1DYWxsYmFja0Nvb2tpZSA9IGNvb2tpZTsK
CiAgICAvLyBDaGVjayBhcmd1bWVudCAiYnVmZmVyQ291bnQiIGFnYWluc3QgdGhlIG1pbmludW0gYnVm
ZmVyIGNvdW50CiAgICBpZiAoYnVmZmVyQ291bnQgPCBtTWluQnVmZmVyQ291bnQpIHsKICAgICAgICBB
TE9HRCgiYnVmZmVyQ291bnQgKCVkKSBpcyB0b28gc21hbGwgYW5kIGluY3JlYXNlZCB0byAlZCIsIGJ1
ZmZlckNvdW50LCBtTWluQnVmZmVyQ291bnQpOwogICAgICAgIGJ1ZmZlckNvdW50ID0gbU1pbkJ1ZmZl
ckNvdW50OwoKICAgIH0KICAgIEFMT0dWKCJvcGVuKCV1LCAlZCwgMHgleCwgMHgleCwgJWQsICVkIDB4
JXgpIiwgc2FtcGxlUmF0ZSwgY2hhbm5lbENvdW50LCBjaGFubmVsTWFzaywKICAgICAgICAgICAgICAg
IGZvcm1hdCwgYnVmZmVyQ291bnQsIG1TZXNzaW9uSWQsIGZsYWdzKTsKICAgIHVpbnQzMl90IGFmU2Ft
cGxlUmF0ZTsKICAgIHNpemVfdCBhZkZyYW1lQ291bnQ7CiAgICBzaXplX3QgZnJhbWVDb3VudDsKCiAg
ICAvLyBvZmZsb2FkaW5nIGlzIG9ubHkgc3VwcG9ydGVkIGluIGNhbGxiYWNrIG1vZGUgZm9yIG5vdy4K
ICAgIC8vIG9mZmxvYWRJbmZvIG11c3QgYmUgcHJlc2VudCBpZiBvZmZsb2FkIGZsYWcgaXMgc2V0CiAg
ICBpZiAoKChmbGFncyAmIEFVRElPX09VVFBVVF9GTEFHX0NPTVBSRVNTX09GRkxPQUQpICE9IDApICYm
CiAgICAgICAgICAgICgoY2IgPT0gTlVMTCkgfHwgKG9mZmxvYWRJbmZvID09IE5VTEwpKSkgewogICAg
ICAgIHJldHVybiBCQURfVkFMVUU7CiAgICB9CgogICAgaWYgKChmbGFncyAmIEFVRElPX09VVFBVVF9G
TEFHX0NPTVBSRVNTX09GRkxPQUQpICE9IDApIHsKICAgICAgICBmcmFtZUNvdW50ID0gMDsgLy8gQXVk
aW9UcmFjayB3aWxsIGdldCBmcmFtZSBjb3VudCBmcm9tIEF1ZGlvRmxpbmdlcgogICAgfSBlbHNlIHsK
ICAgICAgICB1aW50MzJfdCBhZlNhbXBsZVJhdGU7CiAgICAgICAgc2l6ZV90IGFmRnJhbWVDb3VudDsK
CiAgICAgICAgaWYgKEF1ZGlvU3lzdGVtOjpnZXRPdXRwdXRGcmFtZUNvdW50KCZhZkZyYW1lQ291bnQs
IG1TdHJlYW1UeXBlKSAhPSBOT19FUlJPUikgewogICAgICAgICAgICByZXR1cm4gTk9fSU5JVDsKICAg
ICAgICB9CiAgICAgICAgaWYgKEF1ZGlvU3lzdGVtOjpnZXRPdXRwdXRTYW1wbGluZ1JhdGUoJmFmU2Ft
cGxlUmF0ZSwgbVN0cmVhbVR5cGUpICE9IE5PX0VSUk9SKSB7CiAgICAgICAgICAgIHJldHVybiBOT19J
TklUOwogICAgICAgIH0KCiAgICAgICAgZnJhbWVDb3VudCA9IChzYW1wbGVSYXRlKmFmRnJhbWVDb3Vu
dCpidWZmZXJDb3VudCkvYWZTYW1wbGVSYXRlOwogICAgfQoKICAgIGlmIChjaGFubmVsTWFzayA9PSBD
SEFOTkVMX01BU0tfVVNFX0NIQU5ORUxfT1JERVIpIHsKICAgICAgICBjaGFubmVsTWFzayA9IGF1ZGlv
X2NoYW5uZWxfb3V0X21hc2tfZnJvbV9jb3VudChjaGFubmVsQ291bnQpOwogICAgICAgIGlmICgwID09
IGNoYW5uZWxNYXNrKSB7CiAgICAgICAgICAgIEFMT0dFKCJvcGVuKCkgZXJyb3IsIGNhblwndCBkZXJp
dmUgbWFzayBmb3IgJWQgYXVkaW8gY2hhbm5lbHMiLCBjaGFubmVsQ291bnQpOwogICAgICAgICAgICBy
ZXR1cm4gTk9fSU5JVDsKICAgICAgICB9CiAgICB9CgogICAgLy8gQ2hlY2sgd2hldGhlciB3ZSBjYW4g
cmVjeWNsZSB0aGUgdHJhY2sKICAgIGJvb2wgcmV1c2UgPSBmYWxzZTsKICAgIGJvb2wgYm90aE9mZmxv
YWRlZCA9IGZhbHNlOwoKICAgIGlmIChtUmVjeWNsZWRUcmFjayAhPSAwKSB7CiAgICAgICAgLy8gY2hl
Y2sgd2hldGhlciB3ZSBhcmUgc3dpdGNoaW5nIGJldHdlZW4gdHdvIG9mZmxvYWRlZCB0cmFja3MKICAg
ICAgICBib3RoT2ZmbG9hZGVkID0gKGZsYWdzICYgbVJlY3ljbGVkVHJhY2stPmdldEZsYWdzKCkKICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmIEFVRElPX09VVFBVVF9GTEFHX0NPTVBSRVNTX09G
RkxPQUQpICE9IDA7CgogICAgICAgIC8vIGNoZWNrIGlmIHRoZSBleGlzdGluZyB0cmFjayBjYW4gYmUg
cmV1c2VkIGFzLWlzLCBvciBpZiBhIG5ldyB0cmFjayBuZWVkcyB0byBiZSBjcmVhdGVkLgogICAgICAg
IHJldXNlID0gdHJ1ZTsKCiAgICAgICAgaWYgKChtQ2FsbGJhY2tEYXRhID09IE5VTEwgJiYgbUNhbGxi
YWNrICE9IE5VTEwpIHx8CiAgICAgICAgICAgICAgICAobUNhbGxiYWNrRGF0YSAhPSBOVUxMICYmIG1D
YWxsYmFjayA9PSBOVUxMKSkgewogICAgICAgICAgICAvLyByZWN5Y2xlZCB0cmFjayB1c2VzIGNhbGxi
YWNrcyBidXQgdGhlIGNhbGxlciB3YW50cyB0byB1c2Ugd3JpdGVzLCBvciB2aWNlIHZlcnNhCiAgICAg
ICAgICAgIEFMT0dWKCJjYW4ndCBjaGFpbiBjYWxsYmFjayBhbmQgd3JpdGUiKTsKICAgICAgICAgICAg
cmV1c2UgPSBmYWxzZTsKICAgICAgICB9IGVsc2UgaWYgKChtUmVjeWNsZWRUcmFjay0+Z2V0U2FtcGxl
UmF0ZSgpICE9IHNhbXBsZVJhdGUpIHx8CiAgICAgICAgICAgICAgICAobVJlY3ljbGVkVHJhY2stPmNo
YW5uZWxDb3VudCgpICE9ICh1aW50MzJfdCljaGFubmVsQ291bnQpICkgewogICAgICAgICAgICBBTE9H
Vigic2FtcGxlcmF0ZSwgY2hhbm5lbGNvdW50IGRpZmZlcjogJXUvJXUgSHosICV1LyVkIGNoIiwKICAg
ICAgICAgICAgICAgICAgbVJlY3ljbGVkVHJhY2stPmdldFNhbXBsZVJhdGUoKSwgc2FtcGxlUmF0ZSwK
ICAgICAgICAgICAgICAgICAgbVJlY3ljbGVkVHJhY2stPmNoYW5uZWxDb3VudCgpLCBjaGFubmVsQ291
bnQpOwogICAgICAgICAgICByZXVzZSA9IGZhbHNlOwogICAgICAgIH0gZWxzZSBpZiAoZmxhZ3MgIT0g
bUZsYWdzKSB7CiAgICAgICAgICAgIEFMT0dWKCJvdXRwdXQgZmxhZ3MgZGlmZmVyICUwOHgvJTA4eCIs
IGZsYWdzLCBtRmxhZ3MpOwogICAgICAgICAgICByZXVzZSA9IGZhbHNlOwogICAgICAgIH0gZWxzZSBp
ZiAobVJlY3ljbGVkVHJhY2stPmZvcm1hdCgpICE9IGZvcm1hdCkgewogICAgICAgICAgICByZXVzZSA9
IGZhbHNlOwogICAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgICAgQUxPR1YoIm5vIHRyYWNrIGF2YWls
YWJsZSB0byByZWN5Y2xlIik7CiAgICB9CgogICAgQUxPR1ZfSUYoYm90aE9mZmxvYWRlZCwgImJvdGgg
dHJhY2tzIG9mZmxvYWRlZCIpOwoKICAgIC8vIElmIHdlIGNhbid0IHJlY3ljbGUgYW5kIGJvdGggdHJh
Y2tzIGFyZSBvZmZsb2FkZWQKICAgIC8vIHdlIG11c3QgY2xvc2UgdGhlIHByZXZpb3VzIG91dHB1dCBi
ZWZvcmUgb3BlbmluZyBhIG5ldyBvbmUKICAgIGlmIChib3RoT2ZmbG9hZGVkICYmICFyZXVzZSkgewog
ICAgICAgIEFMT0dWKCJib3RoIG9mZmxvYWRlZCBhbmQgbm90IHJlY3ljbGluZyIpOwogICAgICAgIGRl
bGV0ZVJlY3ljbGVkVHJhY2soKTsKICAgIH0KCiAgICBzcDxBdWRpb1RyYWNrPiB0OwogICAgQ2FsbGJh
Y2tEYXRhICpuZXdjYmQgPSBOVUxMOwoKICAgIC8vIFdlIGRvbid0IGF0dGVtcHQgdG8gY3JlYXRlIGEg
bmV3IHRyYWNrIGlmIHdlIGFyZSByZWN5Y2xpbmcgYW4KICAgIC8vIG9mZmxvYWRlZCB0cmFjay4gQnV0
LCBpZiB3ZSBhcmUgcmVjeWNsaW5nIGEgbm9uLW9mZmxvYWRlZCBvciB3ZQogICAgLy8gYXJlIHN3aXRj
aGluZyB3aGVyZSBvbmUgaXMgb2ZmbG9hZGVkIGFuZCBvbmUgaXNuJ3QgdGhlbiB3ZSBjcmVhdGUKICAg
IC8vIHRoZSBuZXcgdHJhY2sgaW4gYWR2YW5jZSBzbyB0aGF0IHdlIGNhbiByZWFkIGFkZGl0aW9uYWwg
c3RyZWFtIGluZm8KCiAgICBpZiAoIShyZXVzZSAmJiBib3RoT2ZmbG9hZGVkKSkgewogICAgICAgIEFM
T0dWKCJjcmVhdGluZyBuZXcgQXVkaW9UcmFjayIpOwoKICAgICAgICBpZiAobUNhbGxiYWNrICE9IE5V
TEwpIHsKICAgICAgICAgICAgbmV3Y2JkID0gbmV3IENhbGxiYWNrRGF0YSh0aGlzKTsKICAgICAgICAg
ICAgdCA9IG5ldyBBdWRpb1RyYWNrKAogICAgICAgICAgICAgICAgICAgIG1TdHJlYW1UeXBlLAogICAg
ICAgICAgICAgICAgICAgIHNhbXBsZVJhdGUsCiAgICAgICAgICAgICAgICAgICAgZm9ybWF0LAogICAg
ICAgICAgICAgICAgICAgIGNoYW5uZWxNYXNrLAogICAgICAgICAgICAgICAgICAgIGZyYW1lQ291bnQs
CiAgICAgICAgICAgICAgICAgICAgZmxhZ3MsCiAgICAgICAgICAgICAgICAgICAgQ2FsbGJhY2tXcmFw
cGVyLAogICAgICAgICAgICAgICAgICAgIG5ld2NiZCwKICAgICAgICAgICAgICAgICAgICAwLCAgLy8g
bm90aWZpY2F0aW9uIGZyYW1lcwogICAgICAgICAgICAgICAgICAgIG1TZXNzaW9uSWQsCiAgICAgICAg
ICAgICAgICAgICAgQXVkaW9UcmFjazo6VFJBTlNGRVJfQ0FMTEJBQ0ssCiAgICAgICAgICAgICAgICAg
ICAgb2ZmbG9hZEluZm8sCiAgICAgICAgICAgICAgICAgICAgbVVpZCwKICAgICAgICAgICAgICAgICAg
ICBtUGlkLAogICAgICAgICAgICAgICAgICAgIG1BdHRyaWJ1dGVzKTsKICAgICAgICB9IGVsc2Ugewog
ICAgICAgICAgICB0ID0gbmV3IEF1ZGlvVHJhY2soCiAgICAgICAgICAgICAgICAgICAgbVN0cmVhbVR5
cGUsCiAgICAgICAgICAgICAgICAgICAgc2FtcGxlUmF0ZSwKICAgICAgICAgICAgICAgICAgICBmb3Jt
YXQsCiAgICAgICAgICAgICAgICAgICAgY2hhbm5lbE1hc2ssCiAgICAgICAgICAgICAgICAgICAgZnJh
bWVDb3VudCwKICAgICAgICAgICAgICAgICAgICBmbGFncywKICAgICAgICAgICAgICAgICAgICBOVUxM
LCAvLyBjYWxsYmFjawogICAgICAgICAgICAgICAgICAgIE5VTEwsIC8vIHVzZXIgZGF0YQogICAgICAg
ICAgICAgICAgICAgIDAsIC8vIG5vdGlmaWNhdGlvbiBmcmFtZXMKICAgICAgICAgICAgICAgICAgICBt
U2Vzc2lvbklkLAogICAgICAgICAgICAgICAgICAgIEF1ZGlvVHJhY2s6OlRSQU5TRkVSX0RFRkFVTFQs
CiAgICAgICAgICAgICAgICAgICAgTlVMTCwgLy8gb2ZmbG9hZCBpbmZvCiAgICAgICAgICAgICAgICAg
ICAgbVVpZCwKICAgICAgICAgICAgICAgICAgICBtUGlkLAogICAgICAgICAgICAgICAgICAgIG1BdHRy
aWJ1dGVzKTsKICAgICAgICB9CgogICAgICAgIGlmICgodCA9PSAwKSB8fCAodC0+aW5pdENoZWNrKCkg
IT0gTk9fRVJST1IpKSB7CiAgICAgICAgICAgIEFMT0dFKCJVbmFibGUgdG8gY3JlYXRlIGF1ZGlvIHRy
YWNrIik7CiAgICAgICAgICAgIGRlbGV0ZSBuZXdjYmQ7CiAgICAgICAgICAgIHJldHVybiBOT19JTklU
OwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIC8vIHN1Y2Nlc3NmdWwgQXVkaW9UcmFjayBpbml0
aWFsaXphdGlvbiBpbXBsaWVzIGEgbGVnYWN5IHN0cmVhbSB0eXBlIHdhcyBnZW5lcmF0ZWQKICAgICAg
ICAgICAgLy8gZnJvbSB0aGUgYXVkaW8gYXR0cmlidXRlcwogICAgICAgICAgICBtU3RyZWFtVHlwZSA9
IHQtPnN0cmVhbVR5cGUoKTsKICAgICAgICB9CiAgICB9CgogICAgaWYgKHJldXNlKSB7CiAgICAgICAg
Q0hFQ0sobVJlY3ljbGVkVHJhY2sgIT0gTlVMTCk7CgogICAgICAgIGlmICghYm90aE9mZmxvYWRlZCkg
ewogICAgICAgICAgICBpZiAobVJlY3ljbGVkVHJhY2stPmZyYW1lQ291bnQoKSAhPSB0LT5mcmFtZUNv
dW50KCkpIHsKICAgICAgICAgICAgICAgIEFMT0dWKCJmcmFtZWNvdW50IGRpZmZlcnM6ICV1LyV1IGZy
YW1lcyIsCiAgICAgICAgICAgICAgICAgICAgICBtUmVjeWNsZWRUcmFjay0+ZnJhbWVDb3VudCgpLCB0
LT5mcmFtZUNvdW50KCkpOwogICAgICAgICAgICAgICAgcmV1c2UgPSBmYWxzZTsKICAgICAgICAgICAg
fQogICAgICAgIH0KCiAgICAgICAgaWYgKHJldXNlKSB7CiAgICAgICAgICAgIEFMT0dWKCJjaGFpbmlu
ZyB0byBuZXh0IG91dHB1dCBhbmQgcmVjeWNsaW5nIHRyYWNrIik7CiAgICAgICAgICAgIGNsb3NlKCk7
CiAgICAgICAgICAgIG1UcmFjayA9IG1SZWN5Y2xlZFRyYWNrOwogICAgICAgICAgICBtUmVjeWNsZWRU
cmFjay5jbGVhcigpOwogICAgICAgICAgICBpZiAobUNhbGxiYWNrRGF0YSAhPSBOVUxMKSB7CiAgICAg
ICAgICAgICAgICBtQ2FsbGJhY2tEYXRhLT5zZXRPdXRwdXQodGhpcyk7CiAgICAgICAgICAgIH0KICAg
ICAgICAgICAgZGVsZXRlIG5ld2NiZDsKICAgICAgICAgICAgcmV0dXJuIE9LOwogICAgICAgIH0KICAg
IH0KCiAgICAvLyB3ZSdyZSBub3QgZ29pbmcgdG8gcmV1c2UgdGhlIHRyYWNrLCB1bmJsb2NrIGFuZCBm
bHVzaCBpdAogICAgLy8gdGhpcyB3YXMgZG9uZSBlYXJsaWVyIGlmIGJvdGggdHJhY2tzIGFyZSBvZmZs
b2FkZWQKICAgIGlmICghYm90aE9mZmxvYWRlZCkgewogICAgICAgIGRlbGV0ZVJlY3ljbGVkVHJhY2so
KTsKICAgIH0KCiAgICBDSEVDSygodCAhPSBOVUxMKSAmJiAoKG1DYWxsYmFjayA9PSBOVUxMKSB8fCAo
bmV3Y2JkICE9IE5VTEwpKSk7CgogICAgbUNhbGxiYWNrRGF0YSA9IG5ld2NiZDsKICAgIEFMT0dWKCJz
ZXRWb2x1bWUiKTsKICAgIHQtPnNldFZvbHVtZShtTGVmdFZvbHVtZSwgbVJpZ2h0Vm9sdW1lKTsKCiAg
ICBtU2FtcGxlUmF0ZUh6ID0gc2FtcGxlUmF0ZTsKICAgIG1GbGFncyA9IGZsYWdzOwogICAgbU1zZWNz
UGVyRnJhbWUgPSBtUGxheWJhY2tSYXRlUGVybWlsbGUgLyAoZmxvYXQpIHNhbXBsZVJhdGU7CiAgICB1
aW50MzJfdCBwb3M7CiAgICBpZiAodC0+Z2V0UG9zaXRpb24oJnBvcykgPT0gT0spIHsKICAgICAgICBt
Qnl0ZXNXcml0dGVuID0gdWludDY0X3QocG9zKSAqIHQtPmZyYW1lU2l6ZSgpOwogICAgfQogICAgbVRy
YWNrID0gdDsKCiAgICBzdGF0dXNfdCByZXMgPSBOT19FUlJPUjsKICAgIGlmICgoZmxhZ3MgJiBBVURJ
T19PVVRQVVRfRkxBR19DT01QUkVTU19PRkZMT0FEKSA9PSAwKSB7CiAgICAgICAgcmVzID0gdC0+c2V0
U2FtcGxlUmF0ZShtUGxheWJhY2tSYXRlUGVybWlsbGUgKiBtU2FtcGxlUmF0ZUh6IC8gMTAwMCk7CiAg
ICAgICAgaWYgKHJlcyA9PSBOT19FUlJPUikgewogICAgICAgICAgICB0LT5zZXRBdXhFZmZlY3RTZW5k
TGV2ZWwobVNlbmRMZXZlbCk7CiAgICAgICAgICAgIHJlcyA9IHQtPmF0dGFjaEF1eEVmZmVjdChtQXV4
RWZmZWN0SWQpOwogICAgICAgIH0KICAgIH0KICAgIEFMT0dWKCJvcGVuKCkgRE9ORSBzdGF0dXMgJWQi
LCByZXMpOwogICAgcmV0dXJuIHJlczsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpBdWRp
b091dHB1dDo6c3RhcnQoKQp7CiAgICBBTE9HVigic3RhcnQiKTsKICAgIGlmIChtQ2FsbGJhY2tEYXRh
ICE9IE5VTEwpIHsKICAgICAgICBtQ2FsbGJhY2tEYXRhLT5lbmRUcmFja1N3aXRjaCgpOwogICAgfQog
ICAgaWYgKG1UcmFjayAhPSAwKSB7CiAgICAgICAgbVRyYWNrLT5zZXRWb2x1bWUobUxlZnRWb2x1bWUs
IG1SaWdodFZvbHVtZSk7CiAgICAgICAgbVRyYWNrLT5zZXRBdXhFZmZlY3RTZW5kTGV2ZWwobVNlbmRM
ZXZlbCk7CiAgICAgICAgcmV0dXJuIG1UcmFjay0+c3RhcnQoKTsKICAgIH0KICAgIHJldHVybiBOT19J
TklUOwp9Cgp2b2lkIE1lZGlhUGxheWVyU2VydmljZTo6QXVkaW9PdXRwdXQ6OnNldE5leHRPdXRwdXQo
Y29uc3Qgc3A8QXVkaW9PdXRwdXQ+JiBuZXh0T3V0cHV0KSB7CiAgICBtTmV4dE91dHB1dCA9IG5leHRP
dXRwdXQ7Cn0KCgp2b2lkIE1lZGlhUGxheWVyU2VydmljZTo6QXVkaW9PdXRwdXQ6OnN3aXRjaFRvTmV4
dE91dHB1dCgpIHsKICAgIEFMT0dWKCJzd2l0Y2hUb05leHRPdXRwdXQiKTsKICAgIGlmIChtTmV4dE91
dHB1dCAhPSBOVUxMKSB7CiAgICAgICAgaWYgKG1DYWxsYmFja0RhdGEgIT0gTlVMTCkgewogICAgICAg
ICAgICBtQ2FsbGJhY2tEYXRhLT5iZWdpblRyYWNrU3dpdGNoKCk7CiAgICAgICAgfQogICAgICAgIGRl
bGV0ZSBtTmV4dE91dHB1dC0+bUNhbGxiYWNrRGF0YTsKICAgICAgICBtTmV4dE91dHB1dC0+bUNhbGxi
YWNrRGF0YSA9IG1DYWxsYmFja0RhdGE7CiAgICAgICAgbUNhbGxiYWNrRGF0YSA9IE5VTEw7CiAgICAg
ICAgbU5leHRPdXRwdXQtPm1SZWN5Y2xlZFRyYWNrID0gbVRyYWNrOwogICAgICAgIG1UcmFjay5jbGVh
cigpOwogICAgICAgIG1OZXh0T3V0cHV0LT5tU2FtcGxlUmF0ZUh6ID0gbVNhbXBsZVJhdGVIejsKICAg
ICAgICBtTmV4dE91dHB1dC0+bU1zZWNzUGVyRnJhbWUgPSBtTXNlY3NQZXJGcmFtZTsKICAgICAgICBt
TmV4dE91dHB1dC0+bUJ5dGVzV3JpdHRlbiA9IG1CeXRlc1dyaXR0ZW47CiAgICAgICAgbU5leHRPdXRw
dXQtPm1GbGFncyA9IG1GbGFnczsKICAgIH0KfQoKc3NpemVfdCBNZWRpYVBsYXllclNlcnZpY2U6OkF1
ZGlvT3V0cHV0Ojp3cml0ZShjb25zdCB2b2lkKiBidWZmZXIsIHNpemVfdCBzaXplKQp7CiAgICBMT0df
QUxXQVlTX0ZBVEFMX0lGKG1DYWxsYmFjayAhPSBOVUxMLCAiRG9uJ3QgY2FsbCB3cml0ZSBpZiBzdXBw
bHlpbmcgYSBjYWxsYmFjay4iKTsKCiAgICAvL0FMT0dWKCJ3cml0ZSglcCwgJXUpIiwgYnVmZmVyLCBz
aXplKTsKICAgIGlmIChtVHJhY2sgIT0gMCkgewogICAgICAgIHNzaXplX3QgcmV0ID0gbVRyYWNrLT53
cml0ZShidWZmZXIsIHNpemUpOwogICAgICAgIGlmIChyZXQgPj0gMCkgewogICAgICAgICAgICBtQnl0
ZXNXcml0dGVuICs9IHJldDsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHJldDsKICAgIH0KICAgIHJl
dHVybiBOT19JTklUOwp9Cgp2b2lkIE1lZGlhUGxheWVyU2VydmljZTo6QXVkaW9PdXRwdXQ6OnN0b3Ao
KQp7CiAgICBBTE9HVigic3RvcCIpOwogICAgaWYgKG1UcmFjayAhPSAwKSBtVHJhY2stPnN0b3AoKTsK
fQoKdm9pZCBNZWRpYVBsYXllclNlcnZpY2U6OkF1ZGlvT3V0cHV0OjpmbHVzaCgpCnsKICAgIEFMT0dW
KCJmbHVzaCIpOwogICAgaWYgKG1UcmFjayAhPSAwKSBtVHJhY2stPmZsdXNoKCk7Cn0KCnZvaWQgTWVk
aWFQbGF5ZXJTZXJ2aWNlOjpBdWRpb091dHB1dDo6cGF1c2UoKQp7CiAgICBBTE9HVigicGF1c2UiKTsK
ICAgIGlmIChtVHJhY2sgIT0gMCkgbVRyYWNrLT5wYXVzZSgpOwp9Cgp2b2lkIE1lZGlhUGxheWVyU2Vy
dmljZTo6QXVkaW9PdXRwdXQ6OmNsb3NlKCkKewogICAgQUxPR1YoImNsb3NlIik7CiAgICBtVHJhY2su
Y2xlYXIoKTsKfQoKdm9pZCBNZWRpYVBsYXllclNlcnZpY2U6OkF1ZGlvT3V0cHV0OjpzZXRWb2x1bWUo
ZmxvYXQgbGVmdCwgZmxvYXQgcmlnaHQpCnsKICAgIEFMT0dWKCJzZXRWb2x1bWUoJWYsICVmKSIsIGxl
ZnQsIHJpZ2h0KTsKICAgIG1MZWZ0Vm9sdW1lID0gbGVmdDsKICAgIG1SaWdodFZvbHVtZSA9IHJpZ2h0
OwogICAgaWYgKG1UcmFjayAhPSAwKSB7CiAgICAgICAgbVRyYWNrLT5zZXRWb2x1bWUobGVmdCwgcmln
aHQpOwogICAgfQp9CgpzdGF0dXNfdCBNZWRpYVBsYXllclNlcnZpY2U6OkF1ZGlvT3V0cHV0OjpzZXRQ
bGF5YmFja1JhdGVQZXJtaWxsZShpbnQzMl90IHJhdGVQZXJtaWxsZSkKewogICAgQUxPR1YoInNldFBs
YXliYWNrUmF0ZVBlcm1pbGxlKCVkKSIsIHJhdGVQZXJtaWxsZSk7CiAgICBzdGF0dXNfdCByZXMgPSBO
T19FUlJPUjsKICAgIGlmIChtVHJhY2sgIT0gMCkgewogICAgICAgIHJlcyA9IG1UcmFjay0+c2V0U2Ft
cGxlUmF0ZShyYXRlUGVybWlsbGUgKiBtU2FtcGxlUmF0ZUh6IC8gMTAwMCk7CiAgICB9IGVsc2Ugewog
ICAgICAgIHJlcyA9IE5PX0lOSVQ7CiAgICB9CiAgICBtUGxheWJhY2tSYXRlUGVybWlsbGUgPSByYXRl
UGVybWlsbGU7CiAgICBpZiAobVNhbXBsZVJhdGVIeiAhPSAwKSB7CiAgICAgICAgbU1zZWNzUGVyRnJh
bWUgPSBtUGxheWJhY2tSYXRlUGVybWlsbGUgLyAoZmxvYXQpIG1TYW1wbGVSYXRlSHo7CiAgICB9CiAg
ICByZXR1cm4gcmVzOwp9CgpzdGF0dXNfdCBNZWRpYVBsYXllclNlcnZpY2U6OkF1ZGlvT3V0cHV0Ojpz
ZXRBdXhFZmZlY3RTZW5kTGV2ZWwoZmxvYXQgbGV2ZWwpCnsKICAgIEFMT0dWKCJzZXRBdXhFZmZlY3RT
ZW5kTGV2ZWwoJWYpIiwgbGV2ZWwpOwogICAgbVNlbmRMZXZlbCA9IGxldmVsOwogICAgaWYgKG1UcmFj
ayAhPSAwKSB7CiAgICAgICAgcmV0dXJuIG1UcmFjay0+c2V0QXV4RWZmZWN0U2VuZExldmVsKGxldmVs
KTsKICAgIH0KICAgIHJldHVybiBOT19FUlJPUjsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXJTZXJ2aWNl
OjpBdWRpb091dHB1dDo6YXR0YWNoQXV4RWZmZWN0KGludCBlZmZlY3RJZCkKewogICAgQUxPR1YoImF0
dGFjaEF1eEVmZmVjdCglZCkiLCBlZmZlY3RJZCk7CiAgICBtQXV4RWZmZWN0SWQgPSBlZmZlY3RJZDsK
ICAgIGlmIChtVHJhY2sgIT0gMCkgewogICAgICAgIHJldHVybiBtVHJhY2stPmF0dGFjaEF1eEVmZmVj
dChlZmZlY3RJZCk7CiAgICB9CiAgICByZXR1cm4gTk9fRVJST1I7Cn0KCi8vIHN0YXRpYwp2b2lkIE1l
ZGlhUGxheWVyU2VydmljZTo6QXVkaW9PdXRwdXQ6OkNhbGxiYWNrV3JhcHBlcigKICAgICAgICBpbnQg
ZXZlbnQsIHZvaWQgKmNvb2tpZSwgdm9pZCAqaW5mbykgewogICAgLy9BTE9HVigiY2FsbGJhY2t3cmFw
cGVyIik7CiAgICBDYWxsYmFja0RhdGEgKmRhdGEgPSAoQ2FsbGJhY2tEYXRhKiljb29raWU7CiAgICBk
YXRhLT5sb2NrKCk7CiAgICBBdWRpb091dHB1dCAqbWUgPSBkYXRhLT5nZXRPdXRwdXQoKTsKICAgIEF1
ZGlvVHJhY2s6OkJ1ZmZlciAqYnVmZmVyID0gKEF1ZGlvVHJhY2s6OkJ1ZmZlciAqKWluZm87CiAgICBp
ZiAobWUgPT0gTlVMTCkgewogICAgICAgIC8vIG5vIG91dHB1dCBzZXQsIGxpa2VseSBiZWNhdXNlIHRo
ZSB0cmFjayB3YXMgc2NoZWR1bGVkIHRvIGJlIHJldXNlZAogICAgICAgIC8vIGJ5IGFub3RoZXIgcGxh
eWVyLCBidXQgdGhlIGZvcm1hdCB0dXJuZWQgb3V0IHRvIGJlIGluY29tcGF0aWJsZS4KICAgICAgICBk
YXRhLT51bmxvY2soKTsKICAgICAgICBpZiAoYnVmZmVyICE9IE5VTEwpIHsKICAgICAgICAgICAgYnVm
ZmVyLT5zaXplID0gMDsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIHN3aXRjaChl
dmVudCkgewogICAgY2FzZSBBdWRpb1RyYWNrOjpFVkVOVF9NT1JFX0RBVEE6IHsKICAgICAgICBzaXpl
X3QgYWN0dWFsU2l6ZSA9ICgqbWUtPm1DYWxsYmFjaykoCiAgICAgICAgICAgICAgICBtZSwgYnVmZmVy
LT5yYXcsIGJ1ZmZlci0+c2l6ZSwgbWUtPm1DYWxsYmFja0Nvb2tpZSwKICAgICAgICAgICAgICAgIENC
X0VWRU5UX0ZJTExfQlVGRkVSKTsKCiAgICAgICAgaWYgKChtZS0+bUZsYWdzICYgQVVESU9fT1VUUFVU
X0ZMQUdfQ09NUFJFU1NfT0ZGTE9BRCkgPT0gMCAmJgogICAgICAgICAgICBhY3R1YWxTaXplID09IDAg
JiYgYnVmZmVyLT5zaXplID4gMCAmJiBtZS0+bU5leHRPdXRwdXQgPT0gTlVMTCkgewogICAgICAgICAg
ICAvLyBXZSd2ZSByZWFjaGVkIEVPUyBidXQgdGhlIGF1ZGlvIHRyYWNrIGlzIG5vdCBzdG9wcGVkIHll
dCwKICAgICAgICAgICAgLy8ga2VlcCBwbGF5aW5nIHNpbGVuY2UuCgogICAgICAgICAgICBtZW1zZXQo
YnVmZmVyLT5yYXcsIDAsIGJ1ZmZlci0+c2l6ZSk7CiAgICAgICAgICAgIGFjdHVhbFNpemUgPSBidWZm
ZXItPnNpemU7CiAgICAgICAgfQoKICAgICAgICBidWZmZXItPnNpemUgPSBhY3R1YWxTaXplOwogICAg
ICAgIH0gYnJlYWs7CgoKICAgIGNhc2UgQXVkaW9UcmFjazo6RVZFTlRfU1RSRUFNX0VORDoKICAgICAg
ICBBTE9HVigiY2FsbGJhY2t3cmFwcGVyOiBkZWxpdmVyIEVWRU5UX1NUUkVBTV9FTkQiKTsKICAgICAg
ICAoKm1lLT5tQ2FsbGJhY2spKG1lLCBOVUxMIC8qIGJ1ZmZlciAqLywgMCAvKiBzaXplICovLAogICAg
ICAgICAgICAgICAgbWUtPm1DYWxsYmFja0Nvb2tpZSwgQ0JfRVZFTlRfU1RSRUFNX0VORCk7CiAgICAg
ICAgYnJlYWs7CgogICAgY2FzZSBBdWRpb1RyYWNrOjpFVkVOVF9ORVdfSUFVRElPVFJBQ0sgOgogICAg
ICAgIEFMT0dWKCJjYWxsYmFja3dyYXBwZXI6IGRlbGl2ZXIgRVZFTlRfVEVBUl9ET1dOIik7CiAgICAg
ICAgKCptZS0+bUNhbGxiYWNrKShtZSwgIE5VTEwgLyogYnVmZmVyICovLCAwIC8qIHNpemUgKi8sCiAg
ICAgICAgICAgICAgICBtZS0+bUNhbGxiYWNrQ29va2llLCBDQl9FVkVOVF9URUFSX0RPV04pOwogICAg
ICAgIGJyZWFrOwoKICAgIGRlZmF1bHQ6CiAgICAgICAgQUxPR0UoInJlY2VpdmVkIHVua25vd24gZXZl
bnQgdHlwZTogJWQgaW5zaWRlIENhbGxiYWNrV3JhcHBlciAhIiwgZXZlbnQpOwogICAgfQoKICAgIGRh
dGEtPnVubG9jaygpOwp9CgppbnQgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpBdWRpb091dHB1dDo6Z2V0U2Vz
c2lvbklkKCkgY29uc3QKewogICAgcmV0dXJuIG1TZXNzaW9uSWQ7Cn0KCnVpbnQzMl90IE1lZGlhUGxh
eWVyU2VydmljZTo6QXVkaW9PdXRwdXQ6OmdldFNhbXBsZVJhdGUoKSBjb25zdAp7CiAgICBpZiAobVRy
YWNrID09IDApIHJldHVybiAwOwogICAgcmV0dXJuIG1UcmFjay0+Z2V0U2FtcGxlUmF0ZSgpOwp9Cgoj
dW5kZWYgTE9HX1RBRwojZGVmaW5lIExPR19UQUcgIkF1ZGlvQ2FjaGUiCk1lZGlhUGxheWVyU2Vydmlj
ZTo6QXVkaW9DYWNoZTo6QXVkaW9DYWNoZShjb25zdCBzcDxJTWVtb3J5SGVhcD4mIGhlYXApIDoKICAg
IG1IZWFwKGhlYXApLCBtQ2hhbm5lbENvdW50KDApLCBtRnJhbWVDb3VudCgxMDI0KSwgbVNhbXBsZVJh
dGUoMCksIG1TaXplKDApLAogICAgbUZyYW1lU2l6ZSgxKSwgbUVycm9yKE5PX0VSUk9SKSwgIG1Db21t
YW5kQ29tcGxldGUoZmFsc2UpCnsKfQoKdWludDMyX3QgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpBdWRpb0Nh
Y2hlOjpsYXRlbmN5ICgpIGNvbnN0CnsKICAgIHJldHVybiAwOwp9CgpmbG9hdCBNZWRpYVBsYXllclNl
cnZpY2U6OkF1ZGlvQ2FjaGU6Om1zZWNzUGVyRnJhbWUoKSBjb25zdAp7CiAgICByZXR1cm4gbU1zZWNz
UGVyRnJhbWU7Cn0KCnN0YXR1c190IE1lZGlhUGxheWVyU2VydmljZTo6QXVkaW9DYWNoZTo6Z2V0UG9z
aXRpb24odWludDMyX3QgKnBvc2l0aW9uKSBjb25zdAp7CiAgICBpZiAocG9zaXRpb24gPT0gMCkgcmV0
dXJuIEJBRF9WQUxVRTsKICAgICpwb3NpdGlvbiA9IG1TaXplIC8gbUZyYW1lU2l6ZTsKICAgIHJldHVy
biBOT19FUlJPUjsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpBdWRpb0NhY2hlOjpnZXRU
aW1lc3RhbXAoQXVkaW9UaW1lc3RhbXAgJnRzKSBjb25zdAp7CiAgICB0cy5tUG9zaXRpb24gPSBtU2l6
ZSAvIG1GcmFtZVNpemU7CiAgICBuc2Vjc190IG5vdyA9IHN5c3RlbVRpbWUoU1lTVEVNX1RJTUVfTU9O
T1RPTklDKTsKICAgIHRzLm1UaW1lLnR2X3NlYyA9IG5vdyAvIDEwMDAwMDAwMDBMTDsKICAgIHRzLm1U
aW1lLnR2X25zZWMgPSBub3cgLSAoMTAwMDAwMDAwMExMICogdHMubVRpbWUudHZfc2VjKTsKICAgIHJl
dHVybiBOT19FUlJPUjsKfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpBdWRpb0NhY2hlOjpn
ZXRGcmFtZXNXcml0dGVuKHVpbnQzMl90ICp3cml0dGVuKSBjb25zdAp7CiAgICBpZiAod3JpdHRlbiA9
PSAwKSByZXR1cm4gQkFEX1ZBTFVFOwogICAgKndyaXR0ZW4gPSBtU2l6ZSAvIG1GcmFtZVNpemU7CiAg
ICByZXR1cm4gTk9fRVJST1I7Cn0KCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8v
Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCgpzdHJ1Y3QgQ2FsbGJhY2tU
aHJlYWQgOiBwdWJsaWMgVGhyZWFkIHsKICAgIENhbGxiYWNrVGhyZWFkKGNvbnN0IHdwPE1lZGlhUGxh
eWVyQmFzZTo6QXVkaW9TaW5rPiAmc2luaywKICAgICAgICAgICAgICAgICAgIE1lZGlhUGxheWVyQmFz
ZTo6QXVkaW9TaW5rOjpBdWRpb0NhbGxiYWNrIGNiLAogICAgICAgICAgICAgICAgICAgdm9pZCAqY29v
a2llKTsKCnByb3RlY3RlZDoKICAgIHZpcnR1YWwgfkNhbGxiYWNrVGhyZWFkKCk7CgogICAgdmlydHVh
bCBib29sIHRocmVhZExvb3AoKTsKCnByaXZhdGU6CiAgICB3cDxNZWRpYVBsYXllckJhc2U6OkF1ZGlv
U2luaz4gbVNpbms7CiAgICBNZWRpYVBsYXllckJhc2U6OkF1ZGlvU2luazo6QXVkaW9DYWxsYmFjayBt
Q2FsbGJhY2s7CiAgICB2b2lkICptQ29va2llOwogICAgdm9pZCAqbUJ1ZmZlcjsKICAgIHNpemVfdCBt
QnVmZmVyU2l6ZTsKCiAgICBDYWxsYmFja1RocmVhZChjb25zdCBDYWxsYmFja1RocmVhZCAmKTsKICAg
IENhbGxiYWNrVGhyZWFkICZvcGVyYXRvcj0oY29uc3QgQ2FsbGJhY2tUaHJlYWQgJik7Cn07CgpDYWxs
YmFja1RocmVhZDo6Q2FsbGJhY2tUaHJlYWQoCiAgICAgICAgY29uc3Qgd3A8TWVkaWFQbGF5ZXJCYXNl
OjpBdWRpb1Npbms+ICZzaW5rLAogICAgICAgIE1lZGlhUGxheWVyQmFzZTo6QXVkaW9TaW5rOjpBdWRp
b0NhbGxiYWNrIGNiLAogICAgICAgIHZvaWQgKmNvb2tpZSkKICAgIDogbVNpbmsoc2luayksCiAgICAg
IG1DYWxsYmFjayhjYiksCiAgICAgIG1Db29raWUoY29va2llKSwKICAgICAgbUJ1ZmZlcihOVUxMKSwK
ICAgICAgbUJ1ZmZlclNpemUoMCkgewp9CgpDYWxsYmFja1RocmVhZDo6fkNhbGxiYWNrVGhyZWFkKCkg
ewogICAgaWYgKG1CdWZmZXIpIHsKICAgICAgICBmcmVlKG1CdWZmZXIpOwogICAgICAgIG1CdWZmZXIg
PSBOVUxMOwogICAgfQp9Cgpib29sIENhbGxiYWNrVGhyZWFkOjp0aHJlYWRMb29wKCkgewogICAgc3A8
TWVkaWFQbGF5ZXJCYXNlOjpBdWRpb1Npbms+IHNpbmsgPSBtU2luay5wcm9tb3RlKCk7CiAgICBpZiAo
c2luayA9PSBOVUxMKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQoKICAgIGlmIChtQnVmZmVy
ID09IE5VTEwpIHsKICAgICAgICBtQnVmZmVyU2l6ZSA9IHNpbmstPmJ1ZmZlclNpemUoKTsKICAgICAg
ICBtQnVmZmVyID0gbWFsbG9jKG1CdWZmZXJTaXplKTsKICAgIH0KCiAgICBzaXplX3QgYWN0dWFsU2l6
ZSA9CiAgICAgICAgKCptQ2FsbGJhY2spKHNpbmsuZ2V0KCksIG1CdWZmZXIsIG1CdWZmZXJTaXplLCBt
Q29va2llLAogICAgICAgICAgICAgICAgTWVkaWFQbGF5ZXJCYXNlOjpBdWRpb1Npbms6OkNCX0VWRU5U
X0ZJTExfQlVGRkVSKTsKCiAgICBpZiAoYWN0dWFsU2l6ZSA+IDApIHsKICAgICAgICBzaW5rLT53cml0
ZShtQnVmZmVyLCBhY3R1YWxTaXplKTsKICAgICAgICAvLyBDb3VsZCByZXR1cm4gZmFsc2Ugb24gc2lu
ay0+d3JpdGUoKSBlcnJvciBvciBzaG9ydCBjb3VudC4KICAgICAgICAvLyBOb3QgbmVjZXNzYXJpbHkg
YXBwcm9wcmlhdGUgYnV0IHdvdWxkIHdvcmsgZm9yIEF1ZGlvQ2FjaGUgYmVoYXZpb3IuCiAgICB9Cgog
ICAgcmV0dXJuIHRydWU7Cn0KCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8v
Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCgpzdGF0dXNfdCBNZWRpYVBsYXll
clNlcnZpY2U6OkF1ZGlvQ2FjaGU6Om9wZW4oCiAgICAgICAgdWludDMyX3Qgc2FtcGxlUmF0ZSwgaW50
IGNoYW5uZWxDb3VudCwgYXVkaW9fY2hhbm5lbF9tYXNrX3QgY2hhbm5lbE1hc2ssCiAgICAgICAgYXVk
aW9fZm9ybWF0X3QgZm9ybWF0LCBpbnQgYnVmZmVyQ291bnQsCiAgICAgICAgQXVkaW9DYWxsYmFjayBj
Yiwgdm9pZCAqY29va2llLCBhdWRpb19vdXRwdXRfZmxhZ3NfdCAvKmZsYWdzKi8sCiAgICAgICAgY29u
c3QgYXVkaW9fb2ZmbG9hZF9pbmZvX3QqIC8qb2ZmbG9hZEluZm8qLykKewogICAgQUxPR1YoIm9wZW4o
JXUsICVkLCAweCV4LCAlZCwgJWQpIiwgc2FtcGxlUmF0ZSwgY2hhbm5lbENvdW50LCBjaGFubmVsTWFz
aywgZm9ybWF0LCBidWZmZXJDb3VudCk7CiAgICBpZiAobUhlYXAtPmdldEhlYXBJRCgpIDwgMCkgewog
ICAgICAgIHJldHVybiBOT19JTklUOwogICAgfQoKICAgIG1TYW1wbGVSYXRlID0gc2FtcGxlUmF0ZTsK
ICAgIG1DaGFubmVsQ291bnQgPSAodWludDE2X3QpY2hhbm5lbENvdW50OwogICAgbUZvcm1hdCA9IGZv
cm1hdDsKICAgIG1Nc2Vjc1BlckZyYW1lID0gMS5lMyAvIChmbG9hdCkgc2FtcGxlUmF0ZTsKICAgIG1G
cmFtZVNpemUgPSAgYXVkaW9faXNfbGluZWFyX3BjbShtRm9ybWF0KQogICAgICAgICAgICA/IG1DaGFu
bmVsQ291bnQgKiBhdWRpb19ieXRlc19wZXJfc2FtcGxlKG1Gb3JtYXQpIDogMTsKICAgIG1GcmFtZUNv
dW50ID0gbUhlYXAtPmdldFNpemUoKSAvIG1GcmFtZVNpemU7CgogICAgaWYgKGNiICE9IE5VTEwpIHsK
ICAgICAgICBtQ2FsbGJhY2tUaHJlYWQgPSBuZXcgQ2FsbGJhY2tUaHJlYWQodGhpcywgY2IsIGNvb2tp
ZSk7CiAgICB9CiAgICByZXR1cm4gTk9fRVJST1I7Cn0KCnN0YXR1c190IE1lZGlhUGxheWVyU2Vydmlj
ZTo6QXVkaW9DYWNoZTo6c3RhcnQoKSB7CiAgICBpZiAobUNhbGxiYWNrVGhyZWFkICE9IE5VTEwpIHsK
ICAgICAgICBtQ2FsbGJhY2tUaHJlYWQtPnJ1bigiQXVkaW9DYWNoZSBjYWxsYmFjayIpOwogICAgfQog
ICAgcmV0dXJuIE5PX0VSUk9SOwp9Cgp2b2lkIE1lZGlhUGxheWVyU2VydmljZTo6QXVkaW9DYWNoZTo6
c3RvcCgpIHsKICAgIGlmIChtQ2FsbGJhY2tUaHJlYWQgIT0gTlVMTCkgewogICAgICAgIG1DYWxsYmFj
a1RocmVhZC0+cmVxdWVzdEV4aXRBbmRXYWl0KCk7CiAgICB9Cn0KCnNzaXplX3QgTWVkaWFQbGF5ZXJT
ZXJ2aWNlOjpBdWRpb0NhY2hlOjp3cml0ZShjb25zdCB2b2lkKiBidWZmZXIsIHNpemVfdCBzaXplKQp7
CiAgICBBTE9HVigid3JpdGUoJXAsICV1KSIsIGJ1ZmZlciwgc2l6ZSk7CiAgICBpZiAoKGJ1ZmZlciA9
PSAwKSB8fCAoc2l6ZSA9PSAwKSkgcmV0dXJuIHNpemU7CgogICAgdWludDhfdCogcCA9IHN0YXRpY19j
YXN0PHVpbnQ4X3QqPihtSGVhcC0+Z2V0QmFzZSgpKTsKICAgIGlmIChwID09IE5VTEwpIHJldHVybiBO
T19JTklUOwogICAgcCArPSBtU2l6ZTsKICAgIEFMT0dWKCJtZW1jcHkoJXAsICVwLCAldSkiLCBwLCBi
dWZmZXIsIHNpemUpOwoKICAgIGJvb2wgb3ZlcmZsb3cgPSBtU2l6ZSArIHNpemUgPiBtSGVhcC0+Z2V0
U2l6ZSgpOwogICAgaWYgKG92ZXJmbG93KSB7CiAgICAgICAgQUxPR0UoIkhlYXAgc2l6ZSBvdmVyZmxv
dyEgcmVxIHNpemU6ICVkLCBtYXggc2l6ZTogJWQiLCAobVNpemUgKyBzaXplKSwgbUhlYXAtPmdldFNp
emUoKSk7CiAgICAgICAgc2l6ZSA9IG1IZWFwLT5nZXRTaXplKCkgLSBtU2l6ZTsKICAgIH0KICAgIHNp
emUgLT0gc2l6ZSAlIG1GcmFtZVNpemU7IC8vIGNvbnN1bWUgb25seSBpbnRlZ3JhbCBhbW91bnRzIG9m
IGZyYW1lIHNpemUKICAgIG1lbWNweShwLCBidWZmZXIsIHNpemUpOwogICAgbVNpemUgKz0gc2l6ZTsK
CiAgICBpZiAob3ZlcmZsb3cpIHsKICAgICAgICAvLyBTaWduYWwgaGVhcCBmaWxsZWQgaGVyZSAobGFz
dCBmcmFtZSBtYXkgYmUgdHJ1bmNhdGVkKS4KICAgICAgICAvLyBBZnRlciB0aGlzIHBvaW50LCBubyBt
b3JlIGRhdGEgc2hvdWxkIGJlIHdyaXR0ZW4gYXMgdGhlCiAgICAgICAgLy8gaGVhcCBpcyBmaWxsZWQg
YW5kIHRoZSBBdWRpb0NhY2hlIHNob3VsZCBiZSBlZmZlY3RpdmVseQogICAgICAgIC8vIGltbXV0YWJs
ZSB3aXRoIHJlc3BlY3QgdG8gZnV0dXJlIHdyaXRlcy4KICAgICAgICAvLwogICAgICAgIC8vIEl0IGlz
IHRodXMgc2FmZSBmb3IgYW5vdGhlciB0aHJlYWQgdG8gcmVhZCB0aGUgQXVkaW9DYWNoZS4KICAgICAg
ICBNdXRleDo6QXV0b2xvY2sgbG9jayhtTG9jayk7CiAgICAgICAgbUNvbW1hbmRDb21wbGV0ZSA9IHRy
dWU7CiAgICAgICAgbVNpZ25hbC5zaWduYWwoKTsKICAgIH0KICAgIHJldHVybiBzaXplOwp9CgovLyBj
YWxsIHdpdGggbG9jayBoZWxkCnN0YXR1c190IE1lZGlhUGxheWVyU2VydmljZTo6QXVkaW9DYWNoZTo6
d2FpdCgpCnsKICAgIE11dGV4OjpBdXRvbG9jayBsb2NrKG1Mb2NrKTsKICAgIHdoaWxlICghbUNvbW1h
bmRDb21wbGV0ZSkgewogICAgICAgIG1TaWduYWwud2FpdChtTG9jayk7CiAgICB9CiAgICBtQ29tbWFu
ZENvbXBsZXRlID0gZmFsc2U7CgogICAgaWYgKG1FcnJvciA9PSBOT19FUlJPUikgewogICAgICAgIEFM
T0dWKCJ3YWl0IC0gc3VjY2VzcyIpOwogICAgfSBlbHNlIHsKICAgICAgICBBTE9HVigid2FpdCAtIGVy
cm9yIik7CiAgICB9CiAgICByZXR1cm4gbUVycm9yOwp9Cgp2b2lkIE1lZGlhUGxheWVyU2VydmljZTo6
QXVkaW9DYWNoZTo6bm90aWZ5KAogICAgICAgIHZvaWQqIGNvb2tpZSwgaW50IG1zZywgaW50IGV4dDEs
IGludCBleHQyLCBjb25zdCBQYXJjZWwqIC8qb2JqKi8pCnsKICAgIEFMT0dWKCJub3RpZnkoJXAsICVk
LCAlZCwgJWQpIiwgY29va2llLCBtc2csIGV4dDEsIGV4dDIpOwogICAgQXVkaW9DYWNoZSogcCA9IHN0
YXRpY19jYXN0PEF1ZGlvQ2FjaGUqPihjb29raWUpOwoKICAgIC8vIGlnbm9yZSBidWZmZXJpbmcgbWVz
c2FnZXMKICAgIHN3aXRjaCAobXNnKQogICAgewogICAgY2FzZSBNRURJQV9FUlJPUjoKICAgICAgICBB
TE9HRSgiRXJyb3IgJWQsICVkIG9jY3VycmVkIiwgZXh0MSwgZXh0Mik7CiAgICAgICAgYnJlYWs7CiAg
ICBjYXNlIE1FRElBX1BSRVBBUkVEOgogICAgICAgIEFMT0dWKCJwcmVwYXJlZCIpOwogICAgICAgIGJy
ZWFrOwogICAgY2FzZSBNRURJQV9QTEFZQkFDS19DT01QTEVURToKICAgICAgICBBTE9HVigicGxheWJh
Y2sgY29tcGxldGUiKTsKICAgICAgICBicmVhazsKICAgIGRlZmF1bHQ6CiAgICAgICAgQUxPR1YoImln
bm9yZWQiKTsKICAgICAgICByZXR1cm47CiAgICB9CgogICAgLy8gd2FrZSB1cCB0aHJlYWQKICAgIE11
dGV4OjpBdXRvbG9jayBsb2NrKHAtPm1Mb2NrKTsKICAgIGlmIChtc2cgPT0gTUVESUFfRVJST1IpIHsK
ICAgICAgICBwLT5tRXJyb3IgPSBleHQxOwogICAgfQogICAgcC0+bUNvbW1hbmRDb21wbGV0ZSA9IHRy
dWU7CiAgICBwLT5tU2lnbmFsLnNpZ25hbCgpOwp9CgppbnQgTWVkaWFQbGF5ZXJTZXJ2aWNlOjpBdWRp
b0NhY2hlOjpnZXRTZXNzaW9uSWQoKSBjb25zdAp7CiAgICByZXR1cm4gMDsKfQoKdWludDMyX3QgTWVk
aWFQbGF5ZXJTZXJ2aWNlOjpBdWRpb0NhY2hlOjpnZXRTYW1wbGVSYXRlKCkgY29uc3QKewogICAgaWYg
KG1Nc2Vjc1BlckZyYW1lID09IDApIHsKICAgICAgICByZXR1cm4gMDsKICAgIH0KICAgIHJldHVybiAo
dWludDMyX3QpKDEuZTMgLyBtTXNlY3NQZXJGcmFtZSk7Cn0KCnZvaWQgTWVkaWFQbGF5ZXJTZXJ2aWNl
OjphZGRCYXR0ZXJ5RGF0YSh1aW50MzJfdCBwYXJhbXMpCnsKICAgIE11dGV4OjpBdXRvbG9jayBsb2Nr
KG1Mb2NrKTsKCiAgICBpbnQzMl90IHRpbWUgPSBzeXN0ZW1UaW1lKCkgLyAxMDAwMDAwTDsKCiAgICAv
LyBjaGFuZ2UgYXVkaW8gb3V0cHV0IGRldmljZXMuIFRoaXMgbm90aWZpY2F0aW9uIGNvbWVzIGZyb20g
QXVkaW9GbGluZ2VyCiAgICBpZiAoKHBhcmFtcyAmIGtCYXR0ZXJ5RGF0YVNwZWFrZXJPbikKICAgICAg
ICAgICAgfHwgKHBhcmFtcyAmIGtCYXR0ZXJ5RGF0YU90aGVyQXVkaW9EZXZpY2VPbikpIHsKCiAgICAg
ICAgaW50IGRldmljZU9uW05VTV9BVURJT19ERVZJQ0VTXTsKICAgICAgICBmb3IgKGludCBpID0gMDsg
aSA8IE5VTV9BVURJT19ERVZJQ0VTOyBpKyspIHsKICAgICAgICAgICAgZGV2aWNlT25baV0gPSAwOwog
ICAgICAgIH0KCiAgICAgICAgaWYgKChwYXJhbXMgJiBrQmF0dGVyeURhdGFTcGVha2VyT24pCiAgICAg
ICAgICAgICAgICAmJiAocGFyYW1zICYga0JhdHRlcnlEYXRhT3RoZXJBdWRpb0RldmljZU9uKSkgewog
ICAgICAgICAgICBkZXZpY2VPbltTUEVBS0VSX0FORF9PVEhFUl0gPSAxOwogICAgICAgIH0gZWxzZSBp
ZiAocGFyYW1zICYga0JhdHRlcnlEYXRhU3BlYWtlck9uKSB7CiAgICAgICAgICAgIGRldmljZU9uW1NQ
RUFLRVJdID0gMTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBkZXZpY2VPbltPVEhFUl9BVURJ
T19ERVZJQ0VdID0gMTsKICAgICAgICB9CgogICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgTlVNX0FV
RElPX0RFVklDRVM7IGkrKykgewogICAgICAgICAgICBpZiAobUJhdHRlcnlBdWRpby5kZXZpY2VPbltp
XSAhPSBkZXZpY2VPbltpXSl7CgogICAgICAgICAgICAgICAgaWYgKG1CYXR0ZXJ5QXVkaW8ucmVmQ291
bnQgPiAwKSB7IC8vIGlmIHBsYXlpbmcgYXVkaW8KICAgICAgICAgICAgICAgICAgICBpZiAoIWRldmlj
ZU9uW2ldKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIG1CYXR0ZXJ5QXVkaW8ubGFzdFRpbWVbaV0g
Kz0gdGltZTsKICAgICAgICAgICAgICAgICAgICAgICAgbUJhdHRlcnlBdWRpby50b3RhbFRpbWVbaV0g
Kz0gbUJhdHRlcnlBdWRpby5sYXN0VGltZVtpXTsKICAgICAgICAgICAgICAgICAgICAgICAgbUJhdHRl
cnlBdWRpby5sYXN0VGltZVtpXSA9IDA7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAg
ICAgICAgICAgICAgICAgICAgbUJhdHRlcnlBdWRpby5sYXN0VGltZVtpXSA9IDAgLSB0aW1lOwogICAg
ICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBtQmF0dGVy
eUF1ZGlvLmRldmljZU9uW2ldID0gZGV2aWNlT25baV07CiAgICAgICAgICAgIH0KICAgICAgICB9CiAg
ICAgICAgcmV0dXJuOwogICAgfQoKICAgIC8vIGFuIHN1ZGlvIHN0cmVhbSBpcyBzdGFydGVkCiAgICBp
ZiAocGFyYW1zICYga0JhdHRlcnlEYXRhQXVkaW9GbGluZ2VyU3RhcnQpIHsKICAgICAgICAvLyByZWNv
cmQgdGhlIHN0YXJ0IHRpbWUgb25seSBpZiBjdXJyZW50bHkgbm8gb3RoZXIgYXVkaW8KICAgICAgICAv
LyBpcyBiZWluZyBwbGF5ZWQKICAgICAgICBpZiAobUJhdHRlcnlBdWRpby5yZWZDb3VudCA9PSAwKSB7
CiAgICAgICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgTlVNX0FVRElPX0RFVklDRVM7IGkrKykgewog
ICAgICAgICAgICAgICAgaWYgKG1CYXR0ZXJ5QXVkaW8uZGV2aWNlT25baV0pIHsKICAgICAgICAgICAg
ICAgICAgICBtQmF0dGVyeUF1ZGlvLmxhc3RUaW1lW2ldIC09IHRpbWU7CiAgICAgICAgICAgICAgICB9
CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIG1CYXR0ZXJ5QXVkaW8ucmVmQ291bnQgKys7
CiAgICAgICAgcmV0dXJuOwoKICAgIH0gZWxzZSBpZiAocGFyYW1zICYga0JhdHRlcnlEYXRhQXVkaW9G
bGluZ2VyU3RvcCkgewogICAgICAgIGlmIChtQmF0dGVyeUF1ZGlvLnJlZkNvdW50IDw9IDApIHsKICAg
ICAgICAgICAgQUxPR1coIkJhdHRlcnkgdHJhY2sgd2FybmluZzogcmVmQ291bnQgaXMgPD0gMCIpOwog
ICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICAvLyByZWNvcmQgdGhlIHN0b3AgdGlt
ZSBvbmx5IGlmIGN1cnJlbnRseSB0aGlzIGlzIHRoZSBvbmx5CiAgICAgICAgLy8gYXVkaW8gYmVpbmcg
cGxheWVkCiAgICAgICAgaWYgKG1CYXR0ZXJ5QXVkaW8ucmVmQ291bnQgPT0gMSkgewogICAgICAgICAg
ICBmb3IgKGludCBpID0gMDsgaSA8IE5VTV9BVURJT19ERVZJQ0VTOyBpKyspIHsKICAgICAgICAgICAg
ICAgIGlmIChtQmF0dGVyeUF1ZGlvLmRldmljZU9uW2ldKSB7CiAgICAgICAgICAgICAgICAgICAgbUJh
dHRlcnlBdWRpby5sYXN0VGltZVtpXSArPSB0aW1lOwogICAgICAgICAgICAgICAgICAgIG1CYXR0ZXJ5
QXVkaW8udG90YWxUaW1lW2ldICs9IG1CYXR0ZXJ5QXVkaW8ubGFzdFRpbWVbaV07CiAgICAgICAgICAg
ICAgICAgICAgbUJhdHRlcnlBdWRpby5sYXN0VGltZVtpXSA9IDA7CiAgICAgICAgICAgICAgICB9CiAg
ICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIG1CYXR0ZXJ5QXVkaW8ucmVmQ291bnQgLS07CiAg
ICAgICAgcmV0dXJuOwogICAgfQoKICAgIGludCB1aWQgPSBJUENUaHJlYWRTdGF0ZTo6c2VsZigpLT5n
ZXRDYWxsaW5nVWlkKCk7CiAgICBpZiAodWlkID09IEFJRF9NRURJQSkgewogICAgICAgIHJldHVybjsK
ICAgIH0KICAgIGludCBpbmRleCA9IG1CYXR0ZXJ5RGF0YS5pbmRleE9mS2V5KHVpZCk7CgogICAgaWYg
KGluZGV4IDwgMCkgeyAvLyBjcmVhdGUgYSBuZXcgZW50cnkgZm9yIHRoaXMgVUlECiAgICAgICAgQmF0
dGVyeVVzYWdlSW5mbyBpbmZvOwogICAgICAgIGluZm8uYXVkaW9Ub3RhbFRpbWUgPSAwOwogICAgICAg
IGluZm8udmlkZW9Ub3RhbFRpbWUgPSAwOwogICAgICAgIGluZm8uYXVkaW9MYXN0VGltZSA9IDA7CiAg
ICAgICAgaW5mby52aWRlb0xhc3RUaW1lID0gMDsKICAgICAgICBpbmZvLnJlZkNvdW50ID0gMDsKCiAg
ICAgICAgaWYgKG1CYXR0ZXJ5RGF0YS5hZGQodWlkLCBpbmZvKSA9PSBOT19NRU1PUlkpIHsKICAgICAg
ICAgICAgQUxPR0UoIkJhdHRlcnkgdHJhY2sgZXJyb3I6IG5vIG1lbW9yeSBmb3IgbmV3IGFwcCIpOwog
ICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgfQoKICAgIEJhdHRlcnlVc2FnZUluZm8gJmlu
Zm8gPSBtQmF0dGVyeURhdGEuZWRpdFZhbHVlRm9yKHVpZCk7CgogICAgaWYgKHBhcmFtcyAmIGtCYXR0
ZXJ5RGF0YUNvZGVjU3RhcnRlZCkgewogICAgICAgIGlmIChwYXJhbXMgJiBrQmF0dGVyeURhdGFUcmFj
a0F1ZGlvKSB7CiAgICAgICAgICAgIGluZm8uYXVkaW9MYXN0VGltZSAtPSB0aW1lOwogICAgICAgICAg
ICBpbmZvLnJlZkNvdW50ICsrOwogICAgICAgIH0KICAgICAgICBpZiAocGFyYW1zICYga0JhdHRlcnlE
YXRhVHJhY2tWaWRlbykgewogICAgICAgICAgICBpbmZvLnZpZGVvTGFzdFRpbWUgLT0gdGltZTsKICAg
ICAgICAgICAgaW5mby5yZWZDb3VudCArKzsKICAgICAgICB9CiAgICB9IGVsc2UgewogICAgICAgIGlm
IChpbmZvLnJlZkNvdW50ID09IDApIHsKICAgICAgICAgICAgQUxPR1coIkJhdHRlcnkgdHJhY2sgd2Fy
bmluZzogcmVmQ291bnQgaXMgYWxyZWFkeSAwIik7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9
IGVsc2UgaWYgKGluZm8ucmVmQ291bnQgPCAwKSB7CiAgICAgICAgICAgIEFMT0dFKCJCYXR0ZXJ5IHRy
YWNrIGVycm9yOiByZWZDb3VudCA8IDAiKTsKICAgICAgICAgICAgbUJhdHRlcnlEYXRhLnJlbW92ZUl0
ZW0odWlkKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgaWYgKHBhcmFtcyAm
IGtCYXR0ZXJ5RGF0YVRyYWNrQXVkaW8pIHsKICAgICAgICAgICAgaW5mby5hdWRpb0xhc3RUaW1lICs9
IHRpbWU7CiAgICAgICAgICAgIGluZm8ucmVmQ291bnQgLS07CiAgICAgICAgfQogICAgICAgIGlmIChw
YXJhbXMgJiBrQmF0dGVyeURhdGFUcmFja1ZpZGVvKSB7CiAgICAgICAgICAgIGluZm8udmlkZW9MYXN0
VGltZSArPSB0aW1lOwogICAgICAgICAgICBpbmZvLnJlZkNvdW50IC0tOwogICAgICAgIH0KCiAgICAg
ICAgLy8gbm8gc3RyZWFtIGlzIGJlaW5nIHBsYXllZCBieSB0aGlzIFVJRAogICAgICAgIGlmIChpbmZv
LnJlZkNvdW50ID09IDApIHsKICAgICAgICAgICAgaW5mby5hdWRpb1RvdGFsVGltZSArPSBpbmZvLmF1
ZGlvTGFzdFRpbWU7CiAgICAgICAgICAgIGluZm8uYXVkaW9MYXN0VGltZSA9IDA7CiAgICAgICAgICAg
IGluZm8udmlkZW9Ub3RhbFRpbWUgKz0gaW5mby52aWRlb0xhc3RUaW1lOwogICAgICAgICAgICBpbmZv
LnZpZGVvTGFzdFRpbWUgPSAwOwogICAgICAgIH0KICAgIH0KfQoKc3RhdHVzX3QgTWVkaWFQbGF5ZXJT
ZXJ2aWNlOjpwdWxsQmF0dGVyeURhdGEoUGFyY2VsKiByZXBseSkgewogICAgTXV0ZXg6OkF1dG9sb2Nr
IGxvY2sobUxvY2spOwoKICAgIC8vIGF1ZGlvIG91dHB1dCBkZXZpY2VzIHVzYWdlCiAgICBpbnQzMl90
IHRpbWUgPSBzeXN0ZW1UaW1lKCkgLyAxMDAwMDAwTDsgLy9pbiBtcwogICAgaW50MzJfdCB0b3RhbFRp
bWU7CgogICAgZm9yIChpbnQgaSA9IDA7IGkgPCBOVU1fQVVESU9fREVWSUNFUzsgaSsrKSB7CiAgICAg
ICAgdG90YWxUaW1lID0gbUJhdHRlcnlBdWRpby50b3RhbFRpbWVbaV07CgogICAgICAgIGlmIChtQmF0
dGVyeUF1ZGlvLmRldmljZU9uW2ldCiAgICAgICAgICAgICYmIChtQmF0dGVyeUF1ZGlvLmxhc3RUaW1l
W2ldICE9IDApKSB7CiAgICAgICAgICAgICAgICBpbnQzMl90IHRtcFRpbWUgPSBtQmF0dGVyeUF1ZGlv
Lmxhc3RUaW1lW2ldICsgdGltZTsKICAgICAgICAgICAgICAgIHRvdGFsVGltZSArPSB0bXBUaW1lOwog
ICAgICAgIH0KCiAgICAgICAgcmVwbHktPndyaXRlSW50MzIodG90YWxUaW1lKTsKICAgICAgICAvLyBy
ZXNldCB0aGUgdG90YWwgdGltZQogICAgICAgIG1CYXR0ZXJ5QXVkaW8udG90YWxUaW1lW2ldID0gMDsK
ICAgfQoKICAgIC8vIGNvZGVjIHVzYWdlCiAgICBCYXR0ZXJ5VXNhZ2VJbmZvIGluZm87CiAgICBpbnQg
c2l6ZSA9IG1CYXR0ZXJ5RGF0YS5zaXplKCk7CgogICAgcmVwbHktPndyaXRlSW50MzIoc2l6ZSk7CiAg
ICBpbnQgaSA9IDA7CgogICAgd2hpbGUgKGkgPCBzaXplKSB7CiAgICAgICAgaW5mbyA9IG1CYXR0ZXJ5
RGF0YS52YWx1ZUF0KGkpOwoKICAgICAgICByZXBseS0+d3JpdGVJbnQzMihtQmF0dGVyeURhdGEua2V5
QXQoaSkpOyAvL1VJRAogICAgICAgIHJlcGx5LT53cml0ZUludDMyKGluZm8uYXVkaW9Ub3RhbFRpbWUp
OwogICAgICAgIHJlcGx5LT53cml0ZUludDMyKGluZm8udmlkZW9Ub3RhbFRpbWUpOwoKICAgICAgICBp
bmZvLmF1ZGlvVG90YWxUaW1lID0gMDsKICAgICAgICBpbmZvLnZpZGVvVG90YWxUaW1lID0gMDsKCiAg
ICAgICAgLy8gcmVtb3ZlIHRoZSBVSUQgZW50cnkgd2hlcmUgbm8gc3RyZWFtIGlzIGJlaW5nIHBsYXll
ZAogICAgICAgIGlmIChpbmZvLnJlZkNvdW50IDw9IDApIHsKICAgICAgICAgICAgbUJhdHRlcnlEYXRh
LnJlbW92ZUl0ZW1zQXQoaSk7CiAgICAgICAgICAgIHNpemUgLS07CiAgICAgICAgICAgIGkgLS07CiAg
ICAgICAgfQogICAgICAgIGkrKzsKICAgIH0KICAgIHJldHVybiBOT19FUlJPUjsKfQp9IC8vIG5hbWVz
cGFjZSBhbmRyb2lkCg==</data><mime>application/octet-stream</mime><width>0</width><height>0</height><duration>0</duration><resource-attributes><file-name>MediaPlayerService.cpp</file-name></resource-attributes></resource><resource><data encoding="base64">LyoKICogQ29weXJpZ2h0IChDKSAyMDA1IFRoZSBBbmRyb2lkIE9wZW4gU291cmNlIFByb2plY3QKICoK
ICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNl
bnNlIik7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0
aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAq
CiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVu
bGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29m
dHdhcmUKICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4g
IkFTIElTIiBCQVNJUywKICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJ
TkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNw
ZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKICogbGltaXRhdGlvbnMgdW5k
ZXIgdGhlIExpY2Vuc2UuCiAqLwoKI2RlZmluZSBMT0dfVEFHICJTZXJ2aWNlTWFuYWdlciIKCiNpbmNs
dWRlIDxiaW5kZXIvSVNlcnZpY2VNYW5hZ2VyLmg+CgojaW5jbHVkZSA8dXRpbHMvTG9nLmg+CiNpbmNs
dWRlIDxiaW5kZXIvSVBDVGhyZWFkU3RhdGUuaD4KI2luY2x1ZGUgPGJpbmRlci9QYXJjZWwuaD4KI2lu
Y2x1ZGUgPHV0aWxzL1N0cmluZzguaD4KI2luY2x1ZGUgPHV0aWxzL1N5c3RlbUNsb2NrLmg+CgojaW5j
bHVkZSA8cHJpdmF0ZS9iaW5kZXIvU3RhdGljLmg+CgojaW5jbHVkZSA8dW5pc3RkLmg+CgpuYW1lc3Bh
Y2UgYW5kcm9pZCB7CgpzcDxJU2VydmljZU1hbmFnZXI+IGRlZmF1bHRTZXJ2aWNlTWFuYWdlcigpCnsK
ICAgIGlmIChnRGVmYXVsdFNlcnZpY2VNYW5hZ2VyICE9IE5VTEwpIHJldHVybiBnRGVmYXVsdFNlcnZp
Y2VNYW5hZ2VyOwogICAgCiAgICB7CiAgICAgICAgQXV0b011dGV4IF9sKGdEZWZhdWx0U2VydmljZU1h
bmFnZXJMb2NrKTsKICAgICAgICB3aGlsZSAoZ0RlZmF1bHRTZXJ2aWNlTWFuYWdlciA9PSBOVUxMKSB7
CiAgICAgICAgICAgIGdEZWZhdWx0U2VydmljZU1hbmFnZXIgPSBpbnRlcmZhY2VfY2FzdDxJU2Vydmlj
ZU1hbmFnZXI+KAogICAgICAgICAgICAgICAgUHJvY2Vzc1N0YXRlOjpzZWxmKCktPmdldENvbnRleHRP
YmplY3QoTlVMTCkpOwogICAgICAgICAgICBpZiAoZ0RlZmF1bHRTZXJ2aWNlTWFuYWdlciA9PSBOVUxM
KQogICAgICAgICAgICAgICAgc2xlZXAoMSk7CiAgICAgICAgfQogICAgfQogICAgCiAgICByZXR1cm4g
Z0RlZmF1bHRTZXJ2aWNlTWFuYWdlcjsKfQoKYm9vbCBjaGVja0NhbGxpbmdQZXJtaXNzaW9uKGNvbnN0
IFN0cmluZzE2JiBwZXJtaXNzaW9uKQp7CiAgICByZXR1cm4gY2hlY2tDYWxsaW5nUGVybWlzc2lvbihw
ZXJtaXNzaW9uLCBOVUxMLCBOVUxMKTsKfQoKc3RhdGljIFN0cmluZzE2IF9wZXJtaXNzaW9uKCJwZXJt
aXNzaW9uIik7CgoKYm9vbCBjaGVja0NhbGxpbmdQZXJtaXNzaW9uKGNvbnN0IFN0cmluZzE2JiBwZXJt
aXNzaW9uLCBpbnQzMl90KiBvdXRQaWQsIGludDMyX3QqIG91dFVpZCkKewogICAgSVBDVGhyZWFkU3Rh
dGUqIGlwY1N0YXRlID0gSVBDVGhyZWFkU3RhdGU6OnNlbGYoKTsKICAgIHBpZF90IHBpZCA9IGlwY1N0
YXRlLT5nZXRDYWxsaW5nUGlkKCk7CiAgICB1aWRfdCB1aWQgPSBpcGNTdGF0ZS0+Z2V0Q2FsbGluZ1Vp
ZCgpOwogICAgaWYgKG91dFBpZCkgKm91dFBpZCA9IHBpZDsKICAgIGlmIChvdXRVaWQpICpvdXRVaWQg
PSB1aWQ7CiAgICByZXR1cm4gY2hlY2tQZXJtaXNzaW9uKHBlcm1pc3Npb24sIHBpZCwgdWlkKTsKfQoK
Ym9vbCBjaGVja1Blcm1pc3Npb24oY29uc3QgU3RyaW5nMTYmIHBlcm1pc3Npb24sIHBpZF90IHBpZCwg
dWlkX3QgdWlkKQp7CiAgICBzcDxJUGVybWlzc2lvbkNvbnRyb2xsZXI+IHBjOwogICAgZ0RlZmF1bHRT
ZXJ2aWNlTWFuYWdlckxvY2subG9jaygpOwogICAgcGMgPSBnUGVybWlzc2lvbkNvbnRyb2xsZXI7CiAg
ICBnRGVmYXVsdFNlcnZpY2VNYW5hZ2VyTG9jay51bmxvY2soKTsKICAgIAogICAgaW50NjRfdCBzdGFy
dFRpbWUgPSAwOwoKICAgIHdoaWxlICh0cnVlKSB7CiAgICAgICAgaWYgKHBjICE9IE5VTEwpIHsKICAg
ICAgICAgICAgYm9vbCByZXMgPSBwYy0+Y2hlY2tQZXJtaXNzaW9uKHBlcm1pc3Npb24sIHBpZCwgdWlk
KTsKICAgICAgICAgICAgaWYgKHJlcykgewogICAgICAgICAgICAgICAgaWYgKHN0YXJ0VGltZSAhPSAw
KSB7CiAgICAgICAgICAgICAgICAgICAgQUxPR0koIkNoZWNrIHBhc3NlZCBhZnRlciAlZCBzZWNvbmRz
IGZvciAlcyBmcm9tIHVpZD0lZCBwaWQ9JWQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgKGlu
dCkoKHVwdGltZU1pbGxpcygpLXN0YXJ0VGltZSkvMTAwMCksCiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICBTdHJpbmc4KHBlcm1pc3Npb24pLnN0cmluZygpLCB1aWQsIHBpZCk7CiAgICAgICAgICAgICAg
ICB9CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzOwogICAgICAgICAgICB9CiAgICAgICAgICAgIAog
ICAgICAgICAgICAvLyBJcyB0aGlzIGEgcGVybWlzc2lvbiBmYWlsdXJlLCBvciBkaWQgdGhlIGNvbnRy
b2xsZXIgZ28gYXdheT8KICAgICAgICAgICAgaWYgKHBjLT5hc0JpbmRlcigpLT5pc0JpbmRlckFsaXZl
KCkpIHsKICAgICAgICAgICAgICAgIEFMT0dXKCJQZXJtaXNzaW9uIGZhaWx1cmU6ICVzIGZyb20gdWlk
PSVkIHBpZD0lZCIsCiAgICAgICAgICAgICAgICAgICAgICAgIFN0cmluZzgocGVybWlzc2lvbikuc3Ry
aW5nKCksIHVpZCwgcGlkKTsKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAg
fQogICAgICAgICAgICAKICAgICAgICAgICAgLy8gT2JqZWN0IGlzIGRlYWQhCiAgICAgICAgICAgIGdE
ZWZhdWx0U2VydmljZU1hbmFnZXJMb2NrLmxvY2soKTsKICAgICAgICAgICAgaWYgKGdQZXJtaXNzaW9u
Q29udHJvbGxlciA9PSBwYykgewogICAgICAgICAgICAgICAgZ1Blcm1pc3Npb25Db250cm9sbGVyID0g
TlVMTDsKICAgICAgICAgICAgfQogICAgICAgICAgICBnRGVmYXVsdFNlcnZpY2VNYW5hZ2VyTG9jay51
bmxvY2soKTsKICAgICAgICB9CiAgICAKICAgICAgICAvLyBOZWVkIHRvIHJldHJpZXZlIHRoZSBwZXJt
aXNzaW9uIGNvbnRyb2xsZXIuCiAgICAgICAgc3A8SUJpbmRlcj4gYmluZGVyID0gZGVmYXVsdFNlcnZp
Y2VNYW5hZ2VyKCktPmNoZWNrU2VydmljZShfcGVybWlzc2lvbik7CiAgICAgICAgaWYgKGJpbmRlciA9
PSBOVUxMKSB7CiAgICAgICAgICAgIC8vIFdhaXQgZm9yIHRoZSBwZXJtaXNzaW9uIGNvbnRyb2xsZXIg
dG8gY29tZSBiYWNrLi4uCiAgICAgICAgICAgIGlmIChzdGFydFRpbWUgPT0gMCkgewogICAgICAgICAg
ICAgICAgc3RhcnRUaW1lID0gdXB0aW1lTWlsbGlzKCk7CiAgICAgICAgICAgICAgICBBTE9HSSgiV2Fp
dGluZyB0byBjaGVjayBwZXJtaXNzaW9uICVzIGZyb20gdWlkPSVkIHBpZD0lZCIsCiAgICAgICAgICAg
ICAgICAgICAgICAgIFN0cmluZzgocGVybWlzc2lvbikuc3RyaW5nKCksIHVpZCwgcGlkKTsKICAgICAg
ICAgICAgfQogICAgICAgICAgICBzbGVlcCgxKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBw
YyA9IGludGVyZmFjZV9jYXN0PElQZXJtaXNzaW9uQ29udHJvbGxlcj4oYmluZGVyKTsKICAgICAgICAg
ICAgLy8gSW5zdGFsbCB0aGUgbmV3IHBlcm1pc3Npb24gY29udHJvbGxlciwgYW5kIHRyeSBhZ2Fpbi4g
ICAgICAgIAogICAgICAgICAgICBnRGVmYXVsdFNlcnZpY2VNYW5hZ2VyTG9jay5sb2NrKCk7CiAgICAg
ICAgICAgIGdQZXJtaXNzaW9uQ29udHJvbGxlciA9IHBjOwogICAgICAgICAgICBnRGVmYXVsdFNlcnZp
Y2VNYW5hZ2VyTG9jay51bmxvY2soKTsKICAgICAgICB9CiAgICB9Cn0KCi8vIC0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCmNs
YXNzIEJwU2VydmljZU1hbmFnZXIgOiBwdWJsaWMgQnBJbnRlcmZhY2U8SVNlcnZpY2VNYW5hZ2VyPgp7
CnB1YmxpYzoKICAgIEJwU2VydmljZU1hbmFnZXIoY29uc3Qgc3A8SUJpbmRlcj4mIGltcGwpCiAgICAg
ICAgOiBCcEludGVyZmFjZTxJU2VydmljZU1hbmFnZXI+KGltcGwpCiAgICB7CiAgICB9CgogICAgdmly
dHVhbCBzcDxJQmluZGVyPiBnZXRTZXJ2aWNlKGNvbnN0IFN0cmluZzE2JiBuYW1lKSBjb25zdAogICAg
ewogICAgICAgIHVuc2lnbmVkIG47CiAgICAgICAgZm9yIChuID0gMDsgbiA8IDU7IG4rKyl7CiAgICAg
ICAgICAgIHNwPElCaW5kZXI+IHN2YyA9IGNoZWNrU2VydmljZShuYW1lKTsKICAgICAgICAgICAgaWYg
KHN2YyAhPSBOVUxMKSByZXR1cm4gc3ZjOwogICAgICAgICAgICBBTE9HSSgiV2FpdGluZyBmb3Igc2Vy
dmljZSAlcy4uLlxuIiwgU3RyaW5nOChuYW1lKS5zdHJpbmcoKSk7CiAgICAgICAgICAgIHNsZWVwKDEp
OwogICAgICAgIH0KICAgICAgICByZXR1cm4gTlVMTDsKICAgIH0KCiAgICB2aXJ0dWFsIHNwPElCaW5k
ZXI+IGNoZWNrU2VydmljZSggY29uc3QgU3RyaW5nMTYmIG5hbWUpIGNvbnN0CiAgICB7CiAgICAgICAg
UGFyY2VsIGRhdGEsIHJlcGx5OwogICAgICAgIGRhdGEud3JpdGVJbnRlcmZhY2VUb2tlbihJU2Vydmlj
ZU1hbmFnZXI6OmdldEludGVyZmFjZURlc2NyaXB0b3IoKSk7CiAgICAgICAgZGF0YS53cml0ZVN0cmlu
ZzE2KG5hbWUpOwogICAgICAgIHJlbW90ZSgpLT50cmFuc2FjdChDSEVDS19TRVJWSUNFX1RSQU5TQUNU
SU9OLCBkYXRhLCAmcmVwbHkpOwogICAgICAgIHJldHVybiByZXBseS5yZWFkU3Ryb25nQmluZGVyKCk7
CiAgICB9CgogICAgdmlydHVhbCBzdGF0dXNfdCBhZGRTZXJ2aWNlKGNvbnN0IFN0cmluZzE2JiBuYW1l
LCBjb25zdCBzcDxJQmluZGVyPiYgc2VydmljZSwKICAgICAgICAgICAgYm9vbCBhbGxvd0lzb2xhdGVk
KQogICAgewogICAgICAgIFBhcmNlbCBkYXRhLCByZXBseTsKICAgICAgICBkYXRhLndyaXRlSW50ZXJm
YWNlVG9rZW4oSVNlcnZpY2VNYW5hZ2VyOjpnZXRJbnRlcmZhY2VEZXNjcmlwdG9yKCkpOwogICAgICAg
IGRhdGEud3JpdGVTdHJpbmcxNihuYW1lKTsKICAgICAgICBkYXRhLndyaXRlU3Ryb25nQmluZGVyKHNl
cnZpY2UpOwogICAgICAgIGRhdGEud3JpdGVJbnQzMihhbGxvd0lzb2xhdGVkID8gMSA6IDApOwogICAg
ICAgIHN0YXR1c190IGVyciA9IHJlbW90ZSgpLT50cmFuc2FjdChBRERfU0VSVklDRV9UUkFOU0FDVElP
TiwgZGF0YSwgJnJlcGx5KTsKICAgICAgICByZXR1cm4gZXJyID09IE5PX0VSUk9SID8gcmVwbHkucmVh
ZEV4Y2VwdGlvbkNvZGUoKSA6IGVycjsKICAgIH0KCiAgICB2aXJ0dWFsIFZlY3RvcjxTdHJpbmcxNj4g
bGlzdFNlcnZpY2VzKCkKICAgIHsKICAgICAgICBWZWN0b3I8U3RyaW5nMTY+IHJlczsKICAgICAgICBp
bnQgbiA9IDA7CgogICAgICAgIGZvciAoOzspIHsKICAgICAgICAgICAgUGFyY2VsIGRhdGEsIHJlcGx5
OwogICAgICAgICAgICBkYXRhLndyaXRlSW50ZXJmYWNlVG9rZW4oSVNlcnZpY2VNYW5hZ2VyOjpnZXRJ
bnRlcmZhY2VEZXNjcmlwdG9yKCkpOwogICAgICAgICAgICBkYXRhLndyaXRlSW50MzIobisrKTsKICAg
ICAgICAgICAgc3RhdHVzX3QgZXJyID0gcmVtb3RlKCktPnRyYW5zYWN0KExJU1RfU0VSVklDRVNfVFJB
TlNBQ1RJT04sIGRhdGEsICZyZXBseSk7CiAgICAgICAgICAgIGlmIChlcnIgIT0gTk9fRVJST1IpCiAg
ICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgcmVzLmFkZChyZXBseS5yZWFkU3RyaW5nMTYo
KSk7CiAgICAgICAgfQogICAgICAgIHJldHVybiByZXM7CiAgICB9Cn07CgpJTVBMRU1FTlRfTUVUQV9J
TlRFUkZBQ0UoU2VydmljZU1hbmFnZXIsICJhbmRyb2lkLm9zLklTZXJ2aWNlTWFuYWdlciIpOwoKLy8g
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLQoKc3RhdHVzX3QgQm5TZXJ2aWNlTWFuYWdlcjo6b25UcmFuc2FjdCgKICAgIHVpbnQz
Ml90IGNvZGUsIGNvbnN0IFBhcmNlbCYgZGF0YSwgUGFyY2VsKiByZXBseSwgdWludDMyX3QgZmxhZ3Mp
CnsKICAgIC8vcHJpbnRmKCJTZXJ2aWNlTWFuYWdlciByZWNlaXZlZDogIik7IGRhdGEucHJpbnQoKTsK
ICAgIHN3aXRjaChjb2RlKSB7CiAgICAgICAgY2FzZSBHRVRfU0VSVklDRV9UUkFOU0FDVElPTjogewog
ICAgICAgICAgICBDSEVDS19JTlRFUkZBQ0UoSVNlcnZpY2VNYW5hZ2VyLCBkYXRhLCByZXBseSk7CiAg
ICAgICAgICAgIFN0cmluZzE2IHdoaWNoID0gZGF0YS5yZWFkU3RyaW5nMTYoKTsKICAgICAgICAgICAg
c3A8SUJpbmRlcj4gYiA9IGNvbnN0X2Nhc3Q8Qm5TZXJ2aWNlTWFuYWdlcio+KHRoaXMpLT5nZXRTZXJ2
aWNlKHdoaWNoKTsKICAgICAgICAgICAgcmVwbHktPndyaXRlU3Ryb25nQmluZGVyKGIpOwogICAgICAg
ICAgICByZXR1cm4gTk9fRVJST1I7CiAgICAgICAgfSBicmVhazsKICAgICAgICBjYXNlIENIRUNLX1NF
UlZJQ0VfVFJBTlNBQ1RJT046IHsKICAgICAgICAgICAgQ0hFQ0tfSU5URVJGQUNFKElTZXJ2aWNlTWFu
YWdlciwgZGF0YSwgcmVwbHkpOwogICAgICAgICAgICBTdHJpbmcxNiB3aGljaCA9IGRhdGEucmVhZFN0
cmluZzE2KCk7CiAgICAgICAgICAgIHNwPElCaW5kZXI+IGIgPSBjb25zdF9jYXN0PEJuU2VydmljZU1h
bmFnZXIqPih0aGlzKS0+Y2hlY2tTZXJ2aWNlKHdoaWNoKTsKICAgICAgICAgICAgcmVwbHktPndyaXRl
U3Ryb25nQmluZGVyKGIpOwogICAgICAgICAgICByZXR1cm4gTk9fRVJST1I7CiAgICAgICAgfSBicmVh
azsKICAgICAgICBjYXNlIEFERF9TRVJWSUNFX1RSQU5TQUNUSU9OOiB7CiAgICAgICAgICAgIENIRUNL
X0lOVEVSRkFDRShJU2VydmljZU1hbmFnZXIsIGRhdGEsIHJlcGx5KTsKICAgICAgICAgICAgU3RyaW5n
MTYgd2hpY2ggPSBkYXRhLnJlYWRTdHJpbmcxNigpOwogICAgICAgICAgICBzcDxJQmluZGVyPiBiID0g
ZGF0YS5yZWFkU3Ryb25nQmluZGVyKCk7CiAgICAgICAgICAgIHN0YXR1c190IGVyciA9IGFkZFNlcnZp
Y2Uod2hpY2gsIGIpOwogICAgICAgICAgICByZXBseS0+d3JpdGVJbnQzMihlcnIpOwogICAgICAgICAg
ICByZXR1cm4gTk9fRVJST1I7CiAgICAgICAgfSBicmVhazsKICAgICAgICBjYXNlIExJU1RfU0VSVklD
RVNfVFJBTlNBQ1RJT046IHsKICAgICAgICAgICAgQ0hFQ0tfSU5URVJGQUNFKElTZXJ2aWNlTWFuYWdl
ciwgZGF0YSwgcmVwbHkpOwogICAgICAgICAgICBWZWN0b3I8U3RyaW5nMTY+IGxpc3QgPSBsaXN0U2Vy
dmljZXMoKTsKICAgICAgICAgICAgY29uc3Qgc2l6ZV90IE4gPSBsaXN0LnNpemUoKTsKICAgICAgICAg
ICAgcmVwbHktPndyaXRlSW50MzIoTik7CiAgICAgICAgICAgIGZvciAoc2l6ZV90IGk9MDsgaTxOOyBp
KyspIHsKICAgICAgICAgICAgICAgIHJlcGx5LT53cml0ZVN0cmluZzE2KGxpc3RbaV0pOwogICAgICAg
ICAgICB9CiAgICAgICAgICAgIHJldHVybiBOT19FUlJPUjsKICAgICAgICB9IGJyZWFrOwogICAgICAg
IGRlZmF1bHQ6CiAgICAgICAgICAgIHJldHVybiBCQmluZGVyOjpvblRyYW5zYWN0KGNvZGUsIGRhdGEs
IHJlcGx5LCBmbGFncyk7CiAgICB9Cn0KCn07IC8vIG5hbWVzcGFjZSBhbmRyb2lkCg==</data><mime>application/octet-stream</mime><width>0</width><height>0</height><duration>0</duration><resource-attributes><file-name>IServiceManager.cpp</file-name></resource-attributes></resource><resource><data encoding="base64">LyogQ29weXJpZ2h0IDIwMDggVGhlIEFuZHJvaWQgT3BlbiBTb3VyY2UgUHJvamVjdAogKi8KCiNpbmNs
dWRlIDxpbnR0eXBlcy5oPgojaW5jbHVkZSA8c3RkaW8uaD4KI2luY2x1ZGUgPHN0ZGxpYi5oPgojaW5j
bHVkZSA8ZXJybm8uaD4KI2luY2x1ZGUgPHVuaXN0ZC5oPgojaW5jbHVkZSA8ZmNudGwuaD4KI2luY2x1
ZGUgPHN5cy9tbWFuLmg+CgojaW5jbHVkZSAiYmluZGVyLmgiCgojZGVmaW5lIE1BWF9CSU9fU0laRSAo
MSA8PCAzMCkKCiNkZWZpbmUgVFJBQ0UgMAoKI2RlZmluZSBMT0dfVEFHICJCaW5kZXIiCiNpbmNsdWRl
IDxjdXRpbHMvbG9nLmg+Cgp2b2lkIGJpb19pbml0X2Zyb21fdHhuKHN0cnVjdCBiaW5kZXJfaW8gKmlv
LCBzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uX2RhdGEgKnR4bik7CgojaWYgVFJBQ0UKdm9pZCBoZXhk
dW1wKHZvaWQgKl9kYXRhLCBzaXplX3QgbGVuKQp7CiAgICB1bnNpZ25lZCBjaGFyICpkYXRhID0gX2Rh
dGE7CiAgICBzaXplX3QgY291bnQ7CgogICAgZm9yIChjb3VudCA9IDA7IGNvdW50IDwgbGVuOyBjb3Vu
dCsrKSB7CiAgICAgICAgaWYgKChjb3VudCAmIDE1KSA9PSAwKQogICAgICAgICAgICBmcHJpbnRmKHN0
ZGVyciwiJTA0enU6IiwgY291bnQpOwogICAgICAgIGZwcmludGYoc3RkZXJyLCIgJTAyeCAlYyIsICpk
YXRhLAogICAgICAgICAgICAgICAgKCpkYXRhIDwgMzIpIHx8ICgqZGF0YSA+IDEyNikgPyAnLicgOiAq
ZGF0YSk7CiAgICAgICAgZGF0YSsrOwogICAgICAgIGlmICgoY291bnQgJiAxNSkgPT0gMTUpCiAgICAg
ICAgICAgIGZwcmludGYoc3RkZXJyLCJcbiIpOwogICAgfQogICAgaWYgKChjb3VudCAmIDE1KSAhPSAw
KQogICAgICAgIGZwcmludGYoc3RkZXJyLCJcbiIpOwp9Cgp2b2lkIGJpbmRlcl9kdW1wX3R4bihzdHJ1
Y3QgYmluZGVyX3RyYW5zYWN0aW9uX2RhdGEgKnR4bikKewogICAgc3RydWN0IGZsYXRfYmluZGVyX29i
amVjdCAqb2JqOwogICAgYmluZGVyX3NpemVfdCAqb2ZmcyA9IChiaW5kZXJfc2l6ZV90ICopKHVpbnRw
dHJfdCl0eG4tPmRhdGEucHRyLm9mZnNldHM7CiAgICBzaXplX3QgY291bnQgPSB0eG4tPm9mZnNldHNf
c2l6ZSAvIHNpemVvZihiaW5kZXJfc2l6ZV90KTsKCiAgICBmcHJpbnRmKHN0ZGVyciwiICB0YXJnZXQg
JTAxNiJQUkl4NjQiICBjb29raWUgJTAxNiJQUkl4NjQiICBjb2RlICUwOHggIGZsYWdzICUwOHhcbiIs
CiAgICAgICAgICAgICh1aW50NjRfdCl0eG4tPnRhcmdldC5wdHIsICh1aW50NjRfdCl0eG4tPmNvb2tp
ZSwgdHhuLT5jb2RlLCB0eG4tPmZsYWdzKTsKICAgIGZwcmludGYoc3RkZXJyLCIgIHBpZCAlOGQgIHVp
ZCAlOGQgIGRhdGEgJSJQUkl1NjQiICBvZmZzICUiUFJJdTY0IlxuIiwKICAgICAgICAgICAgdHhuLT5z
ZW5kZXJfcGlkLCB0eG4tPnNlbmRlcl9ldWlkLCAodWludDY0X3QpdHhuLT5kYXRhX3NpemUsICh1aW50
NjRfdCl0eG4tPm9mZnNldHNfc2l6ZSk7CiAgICBoZXhkdW1wKCh2b2lkICopKHVpbnRwdHJfdCl0eG4t
PmRhdGEucHRyLmJ1ZmZlciwgdHhuLT5kYXRhX3NpemUpOwogICAgd2hpbGUgKGNvdW50LS0pIHsKICAg
ICAgICBvYmogPSAoc3RydWN0IGZsYXRfYmluZGVyX29iamVjdCAqKSAoKChjaGFyKikodWludHB0cl90
KXR4bi0+ZGF0YS5wdHIuYnVmZmVyKSArICpvZmZzKyspOwogICAgICAgIGZwcmludGYoc3RkZXJyLCIg
IC0gdHlwZSAlMDh4ICBmbGFncyAlMDh4ICBwdHIgJTAxNiJQUkl4NjQiICBjb29raWUgJTAxNiJQUkl4
NjQiXG4iLAogICAgICAgICAgICAgICAgb2JqLT50eXBlLCBvYmotPmZsYWdzLCAodWludDY0X3Qpb2Jq
LT5iaW5kZXIsICh1aW50NjRfdClvYmotPmNvb2tpZSk7CiAgICB9Cn0KCiNkZWZpbmUgTkFNRShuKSBj
YXNlIG46IHJldHVybiAjbgpjb25zdCBjaGFyICpjbWRfbmFtZSh1aW50MzJfdCBjbWQpCnsKICAgIHN3
aXRjaChjbWQpIHsKICAgICAgICBOQU1FKEJSX05PT1ApOwogICAgICAgIE5BTUUoQlJfVFJBTlNBQ1RJ
T05fQ09NUExFVEUpOwogICAgICAgIE5BTUUoQlJfSU5DUkVGUyk7CiAgICAgICAgTkFNRShCUl9BQ1FV
SVJFKTsKICAgICAgICBOQU1FKEJSX1JFTEVBU0UpOwogICAgICAgIE5BTUUoQlJfREVDUkVGUyk7CiAg
ICAgICAgTkFNRShCUl9UUkFOU0FDVElPTik7CiAgICAgICAgTkFNRShCUl9SRVBMWSk7CiAgICAgICAg
TkFNRShCUl9GQUlMRURfUkVQTFkpOwogICAgICAgIE5BTUUoQlJfREVBRF9SRVBMWSk7CiAgICAgICAg
TkFNRShCUl9ERUFEX0JJTkRFUik7CiAgICBkZWZhdWx0OiByZXR1cm4gIj8/PyI7CiAgICB9Cn0KI2Vs
c2UKI2RlZmluZSBoZXhkdW1wKGEsYikgZG97fSB3aGlsZSAoMCkKI2RlZmluZSBiaW5kZXJfZHVtcF90
eG4odHhuKSAgZG97fSB3aGlsZSAoMCkKI2VuZGlmCgojZGVmaW5lIEJJT19GX1NIQVJFRCAgICAweDAx
ICAvKiBuZWVkcyB0byBiZSBidWZmZXIgZnJlZWQgKi8KI2RlZmluZSBCSU9fRl9PVkVSRkxPVyAgMHgw
MiAgLyogcmFuIG91dCBvZiBzcGFjZSAqLwojZGVmaW5lIEJJT19GX0lPRVJST1IgICAweDA0CiNkZWZp
bmUgQklPX0ZfTUFMTE9DRUQgIDB4MDggIC8qIG5lZWRzIHRvIGJlIGZyZWUoKSdkICovCgpzdHJ1Y3Qg
YmluZGVyX3N0YXRlCnsKICAgIGludCBmZDsKICAgIHZvaWQgKm1hcHBlZDsKICAgIHNpemVfdCBtYXBz
aXplOwp9OwoKc3RydWN0IGJpbmRlcl9zdGF0ZSAqYmluZGVyX29wZW4oc2l6ZV90IG1hcHNpemUpCnsK
ICAgIHN0cnVjdCBiaW5kZXJfc3RhdGUgKmJzOwogICAgc3RydWN0IGJpbmRlcl92ZXJzaW9uIHZlcnM7
CgogICAgYnMgPSBtYWxsb2Moc2l6ZW9mKCpicykpOwogICAgaWYgKCFicykgewogICAgICAgIGVycm5v
ID0gRU5PTUVNOwogICAgICAgIHJldHVybiBOVUxMOwogICAgfQoKICAgIGJzLT5mZCA9IG9wZW4oIi9k
ZXYvYmluZGVyIiwgT19SRFdSKTsKICAgIGlmIChicy0+ZmQgPCAwKSB7CiAgICAgICAgZnByaW50Zihz
dGRlcnIsImJpbmRlcjogY2Fubm90IG9wZW4gZGV2aWNlICglcylcbiIsCiAgICAgICAgICAgICAgICBz
dHJlcnJvcihlcnJubykpOwogICAgICAgIGdvdG8gZmFpbF9vcGVuOwogICAgfQoKICAgIGlmICgoaW9j
dGwoYnMtPmZkLCBCSU5ERVJfVkVSU0lPTiwgJnZlcnMpID09IC0xKSB8fAogICAgICAgICh2ZXJzLnBy
b3RvY29sX3ZlcnNpb24gIT0gQklOREVSX0NVUlJFTlRfUFJPVE9DT0xfVkVSU0lPTikpIHsKICAgICAg
ICBmcHJpbnRmKHN0ZGVyciwgImJpbmRlcjogZHJpdmVyIHZlcnNpb24gZGlmZmVycyBmcm9tIHVzZXIg
c3BhY2VcbiIpOwogICAgICAgIGdvdG8gZmFpbF9vcGVuOwogICAgfQoKICAgIGJzLT5tYXBzaXplID0g
bWFwc2l6ZTsKICAgIGJzLT5tYXBwZWQgPSBtbWFwKE5VTEwsIG1hcHNpemUsIFBST1RfUkVBRCwgTUFQ
X1BSSVZBVEUsIGJzLT5mZCwgMCk7CiAgICBpZiAoYnMtPm1hcHBlZCA9PSBNQVBfRkFJTEVEKSB7CiAg
ICAgICAgZnByaW50ZihzdGRlcnIsImJpbmRlcjogY2Fubm90IG1hcCBkZXZpY2UgKCVzKVxuIiwKICAg
ICAgICAgICAgICAgIHN0cmVycm9yKGVycm5vKSk7CiAgICAgICAgZ290byBmYWlsX21hcDsKICAgIH0K
CiAgICByZXR1cm4gYnM7CgpmYWlsX21hcDoKICAgIGNsb3NlKGJzLT5mZCk7CmZhaWxfb3BlbjoKICAg
IGZyZWUoYnMpOwogICAgcmV0dXJuIE5VTEw7Cn0KCnZvaWQgYmluZGVyX2Nsb3NlKHN0cnVjdCBiaW5k
ZXJfc3RhdGUgKmJzKQp7CiAgICBtdW5tYXAoYnMtPm1hcHBlZCwgYnMtPm1hcHNpemUpOwogICAgY2xv
c2UoYnMtPmZkKTsKICAgIGZyZWUoYnMpOwp9CgppbnQgYmluZGVyX2JlY29tZV9jb250ZXh0X21hbmFn
ZXIoc3RydWN0IGJpbmRlcl9zdGF0ZSAqYnMpCnsKICAgIHJldHVybiBpb2N0bChicy0+ZmQsIEJJTkRF
Ul9TRVRfQ09OVEVYVF9NR1IsIDApOwp9CgppbnQgYmluZGVyX3dyaXRlKHN0cnVjdCBiaW5kZXJfc3Rh
dGUgKmJzLCB2b2lkICpkYXRhLCBzaXplX3QgbGVuKQp7CiAgICBzdHJ1Y3QgYmluZGVyX3dyaXRlX3Jl
YWQgYndyOwogICAgaW50IHJlczsKCiAgICBid3Iud3JpdGVfc2l6ZSA9IGxlbjsKICAgIGJ3ci53cml0
ZV9jb25zdW1lZCA9IDA7CiAgICBid3Iud3JpdGVfYnVmZmVyID0gKHVpbnRwdHJfdCkgZGF0YTsKICAg
IGJ3ci5yZWFkX3NpemUgPSAwOwogICAgYndyLnJlYWRfY29uc3VtZWQgPSAwOwogICAgYndyLnJlYWRf
YnVmZmVyID0gMDsKICAgIHJlcyA9IGlvY3RsKGJzLT5mZCwgQklOREVSX1dSSVRFX1JFQUQsICZid3Ip
OwogICAgaWYgKHJlcyA8IDApIHsKICAgICAgICBmcHJpbnRmKHN0ZGVyciwiYmluZGVyX3dyaXRlOiBp
b2N0bCBmYWlsZWQgKCVzKVxuIiwKICAgICAgICAgICAgICAgIHN0cmVycm9yKGVycm5vKSk7CiAgICB9
CiAgICByZXR1cm4gcmVzOwp9Cgp2b2lkIGJpbmRlcl9zZW5kX3JlcGx5KHN0cnVjdCBiaW5kZXJfc3Rh
dGUgKmJzLAogICAgICAgICAgICAgICAgICAgICAgIHN0cnVjdCBiaW5kZXJfaW8gKnJlcGx5LAogICAg
ICAgICAgICAgICAgICAgICAgIGJpbmRlcl91aW50cHRyX3QgYnVmZmVyX3RvX2ZyZWUsCiAgICAgICAg
ICAgICAgICAgICAgICAgaW50IHN0YXR1cykKewogICAgc3RydWN0IHsKICAgICAgICB1aW50MzJfdCBj
bWRfZnJlZTsKICAgICAgICBiaW5kZXJfdWludHB0cl90IGJ1ZmZlcjsKICAgICAgICB1aW50MzJfdCBj
bWRfcmVwbHk7CiAgICAgICAgc3RydWN0IGJpbmRlcl90cmFuc2FjdGlvbl9kYXRhIHR4bjsKICAgIH0g
X19hdHRyaWJ1dGVfXygocGFja2VkKSkgZGF0YTsKCiAgICBkYXRhLmNtZF9mcmVlID0gQkNfRlJFRV9C
VUZGRVI7CiAgICBkYXRhLmJ1ZmZlciA9IGJ1ZmZlcl90b19mcmVlOwogICAgZGF0YS5jbWRfcmVwbHkg
PSBCQ19SRVBMWTsKICAgIGRhdGEudHhuLnRhcmdldC5wdHIgPSAwOwogICAgZGF0YS50eG4uY29va2ll
ID0gMDsKICAgIGRhdGEudHhuLmNvZGUgPSAwOwogICAgaWYgKHN0YXR1cykgewogICAgICAgIGRhdGEu
dHhuLmZsYWdzID0gVEZfU1RBVFVTX0NPREU7CiAgICAgICAgZGF0YS50eG4uZGF0YV9zaXplID0gc2l6
ZW9mKGludCk7CiAgICAgICAgZGF0YS50eG4ub2Zmc2V0c19zaXplID0gMDsKICAgICAgICBkYXRhLnR4
bi5kYXRhLnB0ci5idWZmZXIgPSAodWludHB0cl90KSZzdGF0dXM7CiAgICAgICAgZGF0YS50eG4uZGF0
YS5wdHIub2Zmc2V0cyA9IDA7CiAgICB9IGVsc2UgewogICAgICAgIGRhdGEudHhuLmZsYWdzID0gMDsK
ICAgICAgICBkYXRhLnR4bi5kYXRhX3NpemUgPSByZXBseS0+ZGF0YSAtIHJlcGx5LT5kYXRhMDsKICAg
ICAgICBkYXRhLnR4bi5vZmZzZXRzX3NpemUgPSAoKGNoYXIqKSByZXBseS0+b2ZmcykgLSAoKGNoYXIq
KSByZXBseS0+b2ZmczApOwogICAgICAgIGRhdGEudHhuLmRhdGEucHRyLmJ1ZmZlciA9ICh1aW50cHRy
X3QpcmVwbHktPmRhdGEwOwogICAgICAgIGRhdGEudHhuLmRhdGEucHRyLm9mZnNldHMgPSAodWludHB0
cl90KXJlcGx5LT5vZmZzMDsKICAgIH0KICAgIGJpbmRlcl93cml0ZShicywgJmRhdGEsIHNpemVvZihk
YXRhKSk7Cn0KCmludCBiaW5kZXJfcGFyc2Uoc3RydWN0IGJpbmRlcl9zdGF0ZSAqYnMsIHN0cnVjdCBi
aW5kZXJfaW8gKmJpbywKICAgICAgICAgICAgICAgICB1aW50cHRyX3QgcHRyLCBzaXplX3Qgc2l6ZSwg
YmluZGVyX2hhbmRsZXIgZnVuYykKewogICAgaW50IHIgPSAxOwogICAgdWludHB0cl90IGVuZCA9IHB0
ciArICh1aW50cHRyX3QpIHNpemU7CgogICAgd2hpbGUgKHB0ciA8IGVuZCkgewogICAgICAgIHVpbnQz
Ml90IGNtZCA9ICoodWludDMyX3QgKikgcHRyOwogICAgICAgIHB0ciArPSBzaXplb2YodWludDMyX3Qp
OwojaWYgVFJBQ0UKICAgICAgICBmcHJpbnRmKHN0ZGVyciwiJXM6XG4iLCBjbWRfbmFtZShjbWQpKTsK
I2VuZGlmCiAgICAgICAgc3dpdGNoKGNtZCkgewogICAgICAgIGNhc2UgQlJfTk9PUDoKICAgICAgICAg
ICAgYnJlYWs7CiAgICAgICAgY2FzZSBCUl9UUkFOU0FDVElPTl9DT01QTEVURToKICAgICAgICAgICAg
YnJlYWs7CiAgICAgICAgY2FzZSBCUl9JTkNSRUZTOgogICAgICAgIGNhc2UgQlJfQUNRVUlSRToKICAg
ICAgICBjYXNlIEJSX1JFTEVBU0U6CiAgICAgICAgY2FzZSBCUl9ERUNSRUZTOgojaWYgVFJBQ0UKICAg
ICAgICAgICAgZnByaW50ZihzdGRlcnIsIiAgJXAsICVwXG4iLCAodm9pZCAqKXB0ciwgKHZvaWQgKiko
cHRyICsgc2l6ZW9mKHZvaWQgKikpKTsKI2VuZGlmCiAgICAgICAgICAgIHB0ciArPSBzaXplb2Yoc3Ry
dWN0IGJpbmRlcl9wdHJfY29va2llKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBCUl9U
UkFOU0FDVElPTjogewogICAgICAgICAgICBzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uX2RhdGEgKnR4
biA9IChzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uX2RhdGEgKikgcHRyOwogICAgICAgICAgICBpZiAo
KGVuZCAtIHB0cikgPCBzaXplb2YoKnR4bikpIHsKICAgICAgICAgICAgICAgIEFMT0dFKCJwYXJzZTog
dHhuIHRvbyBzbWFsbCFcbiIpOwogICAgICAgICAgICAgICAgcmV0dXJuIC0xOwogICAgICAgICAgICB9
CiAgICAgICAgICAgIGJpbmRlcl9kdW1wX3R4bih0eG4pOwogICAgICAgICAgICBpZiAoZnVuYykgewog
ICAgICAgICAgICAgICAgdW5zaWduZWQgcmRhdGFbMjU2LzRdOwogICAgICAgICAgICAgICAgc3RydWN0
IGJpbmRlcl9pbyBtc2c7CiAgICAgICAgICAgICAgICBzdHJ1Y3QgYmluZGVyX2lvIHJlcGx5OwogICAg
ICAgICAgICAgICAgaW50IHJlczsKCiAgICAgICAgICAgICAgICBiaW9faW5pdCgmcmVwbHksIHJkYXRh
LCBzaXplb2YocmRhdGEpLCA0KTsKICAgICAgICAgICAgICAgIGJpb19pbml0X2Zyb21fdHhuKCZtc2cs
IHR4bik7CiAgICAgICAgICAgICAgICByZXMgPSBmdW5jKGJzLCB0eG4sICZtc2csICZyZXBseSk7CiAg
ICAgICAgICAgICAgICBiaW5kZXJfc2VuZF9yZXBseShicywgJnJlcGx5LCB0eG4tPmRhdGEucHRyLmJ1
ZmZlciwgcmVzKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBwdHIgKz0gc2l6ZW9mKCp0eG4pOwog
ICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgICAgY2FzZSBCUl9SRVBMWTogewogICAgICAg
ICAgICBzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uX2RhdGEgKnR4biA9IChzdHJ1Y3QgYmluZGVyX3Ry
YW5zYWN0aW9uX2RhdGEgKikgcHRyOwogICAgICAgICAgICBpZiAoKGVuZCAtIHB0cikgPCBzaXplb2Yo
KnR4bikpIHsKICAgICAgICAgICAgICAgIEFMT0dFKCJwYXJzZTogcmVwbHkgdG9vIHNtYWxsIVxuIik7
CiAgICAgICAgICAgICAgICByZXR1cm4gLTE7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYmluZGVy
X2R1bXBfdHhuKHR4bik7CiAgICAgICAgICAgIGlmIChiaW8pIHsKICAgICAgICAgICAgICAgIGJpb19p
bml0X2Zyb21fdHhuKGJpbywgdHhuKTsKICAgICAgICAgICAgICAgIGJpbyA9IDA7CiAgICAgICAgICAg
IH0gZWxzZSB7CiAgICAgICAgICAgICAgICAvKiB0b2RvIEZSRUUgQlVGRkVSICovCiAgICAgICAgICAg
IH0KICAgICAgICAgICAgcHRyICs9IHNpemVvZigqdHhuKTsKICAgICAgICAgICAgciA9IDA7CiAgICAg
ICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICBjYXNlIEJSX0RFQURfQklOREVSOiB7CiAgICAg
ICAgICAgIHN0cnVjdCBiaW5kZXJfZGVhdGggKmRlYXRoID0gKHN0cnVjdCBiaW5kZXJfZGVhdGggKiko
dWludHB0cl90KSAqKGJpbmRlcl91aW50cHRyX3QgKilwdHI7CiAgICAgICAgICAgIHB0ciArPSBzaXpl
b2YoYmluZGVyX3VpbnRwdHJfdCk7CiAgICAgICAgICAgIGRlYXRoLT5mdW5jKGJzLCBkZWF0aC0+cHRy
KTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICAgIGNhc2UgQlJfRkFJTEVEX1JFUExZ
OgogICAgICAgICAgICByID0gLTE7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgQlJfREVB
RF9SRVBMWToKICAgICAgICAgICAgciA9IC0xOwogICAgICAgICAgICBicmVhazsKICAgICAgICBkZWZh
dWx0OgogICAgICAgICAgICBBTE9HRSgicGFyc2U6IE9PUFMgJWRcbiIsIGNtZCk7CiAgICAgICAgICAg
IHJldHVybiAtMTsKICAgICAgICB9CiAgICB9CgogICAgcmV0dXJuIHI7Cn0KCnZvaWQgYmluZGVyX2Fj
cXVpcmUoc3RydWN0IGJpbmRlcl9zdGF0ZSAqYnMsIHVpbnQzMl90IHRhcmdldCkKewogICAgdWludDMy
X3QgY21kWzJdOwogICAgY21kWzBdID0gQkNfQUNRVUlSRTsKICAgIGNtZFsxXSA9IHRhcmdldDsKICAg
IGJpbmRlcl93cml0ZShicywgY21kLCBzaXplb2YoY21kKSk7Cn0KCnZvaWQgYmluZGVyX3JlbGVhc2Uo
c3RydWN0IGJpbmRlcl9zdGF0ZSAqYnMsIHVpbnQzMl90IHRhcmdldCkKewogICAgdWludDMyX3QgY21k
WzJdOwogICAgY21kWzBdID0gQkNfUkVMRUFTRTsKICAgIGNtZFsxXSA9IHRhcmdldDsKICAgIGJpbmRl
cl93cml0ZShicywgY21kLCBzaXplb2YoY21kKSk7Cn0KCnZvaWQgYmluZGVyX2xpbmtfdG9fZGVhdGgo
c3RydWN0IGJpbmRlcl9zdGF0ZSAqYnMsIHVpbnQzMl90IHRhcmdldCwgc3RydWN0IGJpbmRlcl9kZWF0
aCAqZGVhdGgpCnsKICAgIHN0cnVjdCB7CiAgICAgICAgdWludDMyX3QgY21kOwogICAgICAgIHN0cnVj
dCBiaW5kZXJfaGFuZGxlX2Nvb2tpZSBwYXlsb2FkOwogICAgfSBfX2F0dHJpYnV0ZV9fKChwYWNrZWQp
KSBkYXRhOwoKICAgIGRhdGEuY21kID0gQkNfUkVRVUVTVF9ERUFUSF9OT1RJRklDQVRJT047CiAgICBk
YXRhLnBheWxvYWQuaGFuZGxlID0gdGFyZ2V0OwogICAgZGF0YS5wYXlsb2FkLmNvb2tpZSA9ICh1aW50
cHRyX3QpIGRlYXRoOwogICAgYmluZGVyX3dyaXRlKGJzLCAmZGF0YSwgc2l6ZW9mKGRhdGEpKTsKfQoK
aW50IGJpbmRlcl9jYWxsKHN0cnVjdCBiaW5kZXJfc3RhdGUgKmJzLAogICAgICAgICAgICAgICAgc3Ry
dWN0IGJpbmRlcl9pbyAqbXNnLCBzdHJ1Y3QgYmluZGVyX2lvICpyZXBseSwKICAgICAgICAgICAgICAg
IHVpbnQzMl90IHRhcmdldCwgdWludDMyX3QgY29kZSkKewogICAgaW50IHJlczsKICAgIHN0cnVjdCBi
aW5kZXJfd3JpdGVfcmVhZCBid3I7CiAgICBzdHJ1Y3QgewogICAgICAgIHVpbnQzMl90IGNtZDsKICAg
ICAgICBzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uX2RhdGEgdHhuOwogICAgfSBfX2F0dHJpYnV0ZV9f
KChwYWNrZWQpKSB3cml0ZWJ1ZjsKICAgIHVuc2lnbmVkIHJlYWRidWZbMzJdOwoKICAgIGlmIChtc2ct
PmZsYWdzICYgQklPX0ZfT1ZFUkZMT1cpIHsKICAgICAgICBmcHJpbnRmKHN0ZGVyciwiYmluZGVyOiB0
eG4gYnVmZmVyIG92ZXJmbG93XG4iKTsKICAgICAgICBnb3RvIGZhaWw7CiAgICB9CgogICAgd3JpdGVi
dWYuY21kID0gQkNfVFJBTlNBQ1RJT047CiAgICB3cml0ZWJ1Zi50eG4udGFyZ2V0LmhhbmRsZSA9IHRh
cmdldDsKICAgIHdyaXRlYnVmLnR4bi5jb2RlID0gY29kZTsKICAgIHdyaXRlYnVmLnR4bi5mbGFncyA9
IDA7CiAgICB3cml0ZWJ1Zi50eG4uZGF0YV9zaXplID0gbXNnLT5kYXRhIC0gbXNnLT5kYXRhMDsKICAg
IHdyaXRlYnVmLnR4bi5vZmZzZXRzX3NpemUgPSAoKGNoYXIqKSBtc2ctPm9mZnMpIC0gKChjaGFyKikg
bXNnLT5vZmZzMCk7CiAgICB3cml0ZWJ1Zi50eG4uZGF0YS5wdHIuYnVmZmVyID0gKHVpbnRwdHJfdClt
c2ctPmRhdGEwOwogICAgd3JpdGVidWYudHhuLmRhdGEucHRyLm9mZnNldHMgPSAodWludHB0cl90KW1z
Zy0+b2ZmczA7CgogICAgYndyLndyaXRlX3NpemUgPSBzaXplb2Yod3JpdGVidWYpOwogICAgYndyLndy
aXRlX2NvbnN1bWVkID0gMDsKICAgIGJ3ci53cml0ZV9idWZmZXIgPSAodWludHB0cl90KSAmd3JpdGVi
dWY7CgogICAgaGV4ZHVtcChtc2ctPmRhdGEwLCBtc2ctPmRhdGEgLSBtc2ctPmRhdGEwKTsKICAgIGZv
ciAoOzspIHsKICAgICAgICBid3IucmVhZF9zaXplID0gc2l6ZW9mKHJlYWRidWYpOwogICAgICAgIGJ3
ci5yZWFkX2NvbnN1bWVkID0gMDsKICAgICAgICBid3IucmVhZF9idWZmZXIgPSAodWludHB0cl90KSBy
ZWFkYnVmOwoKICAgICAgICByZXMgPSBpb2N0bChicy0+ZmQsIEJJTkRFUl9XUklURV9SRUFELCAmYndy
KTsKCiAgICAgICAgaWYgKHJlcyA8IDApIHsKICAgICAgICAgICAgZnByaW50ZihzdGRlcnIsImJpbmRl
cjogaW9jdGwgZmFpbGVkICglcylcbiIsIHN0cmVycm9yKGVycm5vKSk7CiAgICAgICAgICAgIGdvdG8g
ZmFpbDsKICAgICAgICB9CgogICAgICAgIHJlcyA9IGJpbmRlcl9wYXJzZShicywgcmVwbHksICh1aW50
cHRyX3QpIHJlYWRidWYsIGJ3ci5yZWFkX2NvbnN1bWVkLCAwKTsKICAgICAgICBpZiAocmVzID09IDAp
IHJldHVybiAwOwogICAgICAgIGlmIChyZXMgPCAwKSBnb3RvIGZhaWw7CiAgICB9CgpmYWlsOgogICAg
bWVtc2V0KHJlcGx5LCAwLCBzaXplb2YoKnJlcGx5KSk7CiAgICByZXBseS0+ZmxhZ3MgfD0gQklPX0Zf
SU9FUlJPUjsKICAgIHJldHVybiAtMTsKfQoKdm9pZCBiaW5kZXJfbG9vcChzdHJ1Y3QgYmluZGVyX3N0
YXRlICpicywgYmluZGVyX2hhbmRsZXIgZnVuYykKewogICAgaW50IHJlczsKICAgIHN0cnVjdCBiaW5k
ZXJfd3JpdGVfcmVhZCBid3I7CiAgICB1aW50MzJfdCByZWFkYnVmWzMyXTsKCiAgICBid3Iud3JpdGVf
c2l6ZSA9IDA7CiAgICBid3Iud3JpdGVfY29uc3VtZWQgPSAwOwogICAgYndyLndyaXRlX2J1ZmZlciA9
IDA7CgogICAgcmVhZGJ1ZlswXSA9IEJDX0VOVEVSX0xPT1BFUjsKICAgIGJpbmRlcl93cml0ZShicywg
cmVhZGJ1Ziwgc2l6ZW9mKHVpbnQzMl90KSk7CgogICAgZm9yICg7OykgewogICAgICAgIGJ3ci5yZWFk
X3NpemUgPSBzaXplb2YocmVhZGJ1Zik7CiAgICAgICAgYndyLnJlYWRfY29uc3VtZWQgPSAwOwogICAg
ICAgIGJ3ci5yZWFkX2J1ZmZlciA9ICh1aW50cHRyX3QpIHJlYWRidWY7CgogICAgICAgIHJlcyA9IGlv
Y3RsKGJzLT5mZCwgQklOREVSX1dSSVRFX1JFQUQsICZid3IpOwoKICAgICAgICBpZiAocmVzIDwgMCkg
ewogICAgICAgICAgICBBTE9HRSgiYmluZGVyX2xvb3A6IGlvY3RsIGZhaWxlZCAoJXMpXG4iLCBzdHJl
cnJvcihlcnJubykpOwogICAgICAgICAgICBicmVhazsKICAgICAgICB9CgogICAgICAgIHJlcyA9IGJp
bmRlcl9wYXJzZShicywgMCwgKHVpbnRwdHJfdCkgcmVhZGJ1ZiwgYndyLnJlYWRfY29uc3VtZWQsIGZ1
bmMpOwogICAgICAgIGlmIChyZXMgPT0gMCkgewogICAgICAgICAgICBBTE9HRSgiYmluZGVyX2xvb3A6
IHVuZXhwZWN0ZWQgcmVwbHk/IVxuIik7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAg
ICBpZiAocmVzIDwgMCkgewogICAgICAgICAgICBBTE9HRSgiYmluZGVyX2xvb3A6IGlvIGVycm9yICVk
ICVzXG4iLCByZXMsIHN0cmVycm9yKGVycm5vKSk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0K
ICAgIH0KfQoKdm9pZCBiaW9faW5pdF9mcm9tX3R4bihzdHJ1Y3QgYmluZGVyX2lvICpiaW8sIHN0cnVj
dCBiaW5kZXJfdHJhbnNhY3Rpb25fZGF0YSAqdHhuKQp7CiAgICBiaW8tPmRhdGEgPSBiaW8tPmRhdGEw
ID0gKGNoYXIgKikoaW50cHRyX3QpdHhuLT5kYXRhLnB0ci5idWZmZXI7CiAgICBiaW8tPm9mZnMgPSBi
aW8tPm9mZnMwID0gKGJpbmRlcl9zaXplX3QgKikoaW50cHRyX3QpdHhuLT5kYXRhLnB0ci5vZmZzZXRz
OwogICAgYmlvLT5kYXRhX2F2YWlsID0gdHhuLT5kYXRhX3NpemU7CiAgICBiaW8tPm9mZnNfYXZhaWwg
PSB0eG4tPm9mZnNldHNfc2l6ZSAvIHNpemVvZihzaXplX3QpOwogICAgYmlvLT5mbGFncyA9IEJJT19G
X1NIQVJFRDsKfQoKdm9pZCBiaW9faW5pdChzdHJ1Y3QgYmluZGVyX2lvICpiaW8sIHZvaWQgKmRhdGEs
CiAgICAgICAgICAgICAgc2l6ZV90IG1heGRhdGEsIHNpemVfdCBtYXhvZmZzKQp7CiAgICBzaXplX3Qg
biA9IG1heG9mZnMgKiBzaXplb2Yoc2l6ZV90KTsKCiAgICBpZiAobiA+IG1heGRhdGEpIHsKICAgICAg
ICBiaW8tPmZsYWdzID0gQklPX0ZfT1ZFUkZMT1c7CiAgICAgICAgYmlvLT5kYXRhX2F2YWlsID0gMDsK
ICAgICAgICBiaW8tPm9mZnNfYXZhaWwgPSAwOwogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBiaW8t
PmRhdGEgPSBiaW8tPmRhdGEwID0gKGNoYXIgKikgZGF0YSArIG47CiAgICBiaW8tPm9mZnMgPSBiaW8t
Pm9mZnMwID0gZGF0YTsKICAgIGJpby0+ZGF0YV9hdmFpbCA9IG1heGRhdGEgLSBuOwogICAgYmlvLT5v
ZmZzX2F2YWlsID0gbWF4b2ZmczsKICAgIGJpby0+ZmxhZ3MgPSAwOwp9CgpzdGF0aWMgdm9pZCAqYmlv
X2FsbG9jKHN0cnVjdCBiaW5kZXJfaW8gKmJpbywgc2l6ZV90IHNpemUpCnsKICAgIHNpemUgPSAoc2l6
ZSArIDMpICYgKH4zKTsKICAgIGlmIChzaXplID4gYmlvLT5kYXRhX2F2YWlsKSB7CiAgICAgICAgYmlv
LT5mbGFncyB8PSBCSU9fRl9PVkVSRkxPVzsKICAgICAgICByZXR1cm4gTlVMTDsKICAgIH0gZWxzZSB7
CiAgICAgICAgdm9pZCAqcHRyID0gYmlvLT5kYXRhOwogICAgICAgIGJpby0+ZGF0YSArPSBzaXplOwog
ICAgICAgIGJpby0+ZGF0YV9hdmFpbCAtPSBzaXplOwogICAgICAgIHJldHVybiBwdHI7CiAgICB9Cn0K
CnZvaWQgYmluZGVyX2RvbmUoc3RydWN0IGJpbmRlcl9zdGF0ZSAqYnMsCiAgICAgICAgICAgICAgICAg
c3RydWN0IGJpbmRlcl9pbyAqbXNnLAogICAgICAgICAgICAgICAgIHN0cnVjdCBiaW5kZXJfaW8gKnJl
cGx5KQp7CiAgICBzdHJ1Y3QgewogICAgICAgIHVpbnQzMl90IGNtZDsKICAgICAgICB1aW50cHRyX3Qg
YnVmZmVyOwogICAgfSBfX2F0dHJpYnV0ZV9fKChwYWNrZWQpKSBkYXRhOwoKICAgIGlmIChyZXBseS0+
ZmxhZ3MgJiBCSU9fRl9TSEFSRUQpIHsKICAgICAgICBkYXRhLmNtZCA9IEJDX0ZSRUVfQlVGRkVSOwog
ICAgICAgIGRhdGEuYnVmZmVyID0gKHVpbnRwdHJfdCkgcmVwbHktPmRhdGEwOwogICAgICAgIGJpbmRl
cl93cml0ZShicywgJmRhdGEsIHNpemVvZihkYXRhKSk7CiAgICAgICAgcmVwbHktPmZsYWdzID0gMDsK
ICAgIH0KfQoKc3RhdGljIHN0cnVjdCBmbGF0X2JpbmRlcl9vYmplY3QgKmJpb19hbGxvY19vYmooc3Ry
dWN0IGJpbmRlcl9pbyAqYmlvKQp7CiAgICBzdHJ1Y3QgZmxhdF9iaW5kZXJfb2JqZWN0ICpvYmo7Cgog
ICAgb2JqID0gYmlvX2FsbG9jKGJpbywgc2l6ZW9mKCpvYmopKTsKCiAgICBpZiAob2JqICYmIGJpby0+
b2Zmc19hdmFpbCkgewogICAgICAgIGJpby0+b2Zmc19hdmFpbC0tOwogICAgICAgICpiaW8tPm9mZnMr
KyA9ICgoY2hhciopIG9iaikgLSAoKGNoYXIqKSBiaW8tPmRhdGEwKTsKICAgICAgICByZXR1cm4gb2Jq
OwogICAgfQoKICAgIGJpby0+ZmxhZ3MgfD0gQklPX0ZfT1ZFUkZMT1c7CiAgICByZXR1cm4gTlVMTDsK
fQoKdm9pZCBiaW9fcHV0X3VpbnQzMihzdHJ1Y3QgYmluZGVyX2lvICpiaW8sIHVpbnQzMl90IG4pCnsK
ICAgIHVpbnQzMl90ICpwdHIgPSBiaW9fYWxsb2MoYmlvLCBzaXplb2YobikpOwogICAgaWYgKHB0cikK
ICAgICAgICAqcHRyID0gbjsKfQoKdm9pZCBiaW9fcHV0X29iaihzdHJ1Y3QgYmluZGVyX2lvICpiaW8s
IHZvaWQgKnB0cikKewogICAgc3RydWN0IGZsYXRfYmluZGVyX29iamVjdCAqb2JqOwoKICAgIG9iaiA9
IGJpb19hbGxvY19vYmooYmlvKTsKICAgIGlmICghb2JqKQogICAgICAgIHJldHVybjsKCiAgICBvYmot
PmZsYWdzID0gMHg3ZiB8IEZMQVRfQklOREVSX0ZMQUdfQUNDRVBUU19GRFM7CiAgICBvYmotPnR5cGUg
PSBCSU5ERVJfVFlQRV9CSU5ERVI7CiAgICBvYmotPmJpbmRlciA9ICh1aW50cHRyX3QpcHRyOwogICAg
b2JqLT5jb29raWUgPSAwOwp9Cgp2b2lkIGJpb19wdXRfcmVmKHN0cnVjdCBiaW5kZXJfaW8gKmJpbywg
dWludDMyX3QgaGFuZGxlKQp7CiAgICBzdHJ1Y3QgZmxhdF9iaW5kZXJfb2JqZWN0ICpvYmo7CgogICAg
aWYgKGhhbmRsZSkKICAgICAgICBvYmogPSBiaW9fYWxsb2Nfb2JqKGJpbyk7CiAgICBlbHNlCiAgICAg
ICAgb2JqID0gYmlvX2FsbG9jKGJpbywgc2l6ZW9mKCpvYmopKTsKCiAgICBpZiAoIW9iaikKICAgICAg
ICByZXR1cm47CgogICAgb2JqLT5mbGFncyA9IDB4N2YgfCBGTEFUX0JJTkRFUl9GTEFHX0FDQ0VQVFNf
RkRTOwogICAgb2JqLT50eXBlID0gQklOREVSX1RZUEVfSEFORExFOwogICAgb2JqLT5oYW5kbGUgPSBo
YW5kbGU7CiAgICBvYmotPmNvb2tpZSA9IDA7Cn0KCnZvaWQgYmlvX3B1dF9zdHJpbmcxNihzdHJ1Y3Qg
YmluZGVyX2lvICpiaW8sIGNvbnN0IHVpbnQxNl90ICpzdHIpCnsKICAgIHNpemVfdCBsZW47CiAgICB1
aW50MTZfdCAqcHRyOwoKICAgIGlmICghc3RyKSB7CiAgICAgICAgYmlvX3B1dF91aW50MzIoYmlvLCAw
eGZmZmZmZmZmKTsKICAgICAgICByZXR1cm47CiAgICB9CgogICAgbGVuID0gMDsKICAgIHdoaWxlIChz
dHJbbGVuXSkgbGVuKys7CgogICAgaWYgKGxlbiA+PSAoTUFYX0JJT19TSVpFIC8gc2l6ZW9mKHVpbnQx
Nl90KSkpIHsKICAgICAgICBiaW9fcHV0X3VpbnQzMihiaW8sIDB4ZmZmZmZmZmYpOwogICAgICAgIHJl
dHVybjsKICAgIH0KCiAgICAvKiBOb3RlOiBUaGUgcGF5bG9hZCB3aWxsIGNhcnJ5IDMyYml0IHNpemUg
aW5zdGVhZCBvZiBzaXplX3QgKi8KICAgIGJpb19wdXRfdWludDMyKGJpbywgKHVpbnQzMl90KSBsZW4p
OwogICAgbGVuID0gKGxlbiArIDEpICogc2l6ZW9mKHVpbnQxNl90KTsKICAgIHB0ciA9IGJpb19hbGxv
YyhiaW8sIGxlbik7CiAgICBpZiAocHRyKQogICAgICAgIG1lbWNweShwdHIsIHN0ciwgbGVuKTsKfQoK
dm9pZCBiaW9fcHV0X3N0cmluZzE2X3goc3RydWN0IGJpbmRlcl9pbyAqYmlvLCBjb25zdCBjaGFyICpf
c3RyKQp7CiAgICB1bnNpZ25lZCBjaGFyICpzdHIgPSAodW5zaWduZWQgY2hhciopIF9zdHI7CiAgICBz
aXplX3QgbGVuOwogICAgdWludDE2X3QgKnB0cjsKCiAgICBpZiAoIXN0cikgewogICAgICAgIGJpb19w
dXRfdWludDMyKGJpbywgMHhmZmZmZmZmZik7CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGxlbiA9
IHN0cmxlbihfc3RyKTsKCiAgICBpZiAobGVuID49IChNQVhfQklPX1NJWkUgLyBzaXplb2YodWludDE2
X3QpKSkgewogICAgICAgIGJpb19wdXRfdWludDMyKGJpbywgMHhmZmZmZmZmZik7CiAgICAgICAgcmV0
dXJuOwogICAgfQoKICAgIC8qIE5vdGU6IFRoZSBwYXlsb2FkIHdpbGwgY2FycnkgMzJiaXQgc2l6ZSBp
bnN0ZWFkIG9mIHNpemVfdCAqLwogICAgYmlvX3B1dF91aW50MzIoYmlvLCBsZW4pOwogICAgcHRyID0g
YmlvX2FsbG9jKGJpbywgKGxlbiArIDEpICogc2l6ZW9mKHVpbnQxNl90KSk7CiAgICBpZiAoIXB0cikK
ICAgICAgICByZXR1cm47CgogICAgd2hpbGUgKCpzdHIpCiAgICAgICAgKnB0cisrID0gKnN0cisrOwog
ICAgKnB0cisrID0gMDsKfQoKc3RhdGljIHZvaWQgKmJpb19nZXQoc3RydWN0IGJpbmRlcl9pbyAqYmlv
LCBzaXplX3Qgc2l6ZSkKewogICAgc2l6ZSA9IChzaXplICsgMykgJiAofjMpOwoKICAgIGlmIChiaW8t
PmRhdGFfYXZhaWwgPCBzaXplKXsKICAgICAgICBiaW8tPmRhdGFfYXZhaWwgPSAwOwogICAgICAgIGJp
by0+ZmxhZ3MgfD0gQklPX0ZfT1ZFUkZMT1c7CiAgICAgICAgcmV0dXJuIE5VTEw7CiAgICB9ICBlbHNl
IHsKICAgICAgICB2b2lkICpwdHIgPSBiaW8tPmRhdGE7CiAgICAgICAgYmlvLT5kYXRhICs9IHNpemU7
CiAgICAgICAgYmlvLT5kYXRhX2F2YWlsIC09IHNpemU7CiAgICAgICAgcmV0dXJuIHB0cjsKICAgIH0K
fQoKdWludDMyX3QgYmlvX2dldF91aW50MzIoc3RydWN0IGJpbmRlcl9pbyAqYmlvKQp7CiAgICB1aW50
MzJfdCAqcHRyID0gYmlvX2dldChiaW8sIHNpemVvZigqcHRyKSk7CiAgICByZXR1cm4gcHRyID8gKnB0
ciA6IDA7Cn0KCnVpbnQxNl90ICpiaW9fZ2V0X3N0cmluZzE2KHN0cnVjdCBiaW5kZXJfaW8gKmJpbywg
c2l6ZV90ICpzeikKewogICAgc2l6ZV90IGxlbjsKCiAgICAvKiBOb3RlOiBUaGUgcGF5bG9hZCB3aWxs
IGNhcnJ5IDMyYml0IHNpemUgaW5zdGVhZCBvZiBzaXplX3QgKi8KICAgIGxlbiA9IChzaXplX3QpIGJp
b19nZXRfdWludDMyKGJpbyk7CiAgICBpZiAoc3opCiAgICAgICAgKnN6ID0gbGVuOwogICAgcmV0dXJu
IGJpb19nZXQoYmlvLCAobGVuICsgMSkgKiBzaXplb2YodWludDE2X3QpKTsKfQoKc3RhdGljIHN0cnVj
dCBmbGF0X2JpbmRlcl9vYmplY3QgKl9iaW9fZ2V0X29iaihzdHJ1Y3QgYmluZGVyX2lvICpiaW8pCnsK
ICAgIHNpemVfdCBuOwogICAgc2l6ZV90IG9mZiA9IGJpby0+ZGF0YSAtIGJpby0+ZGF0YTA7CgogICAg
LyogVE9ETzogYmUgc21hcnRlciBhYm91dCB0aGlzPyAqLwogICAgZm9yIChuID0gMDsgbiA8IGJpby0+
b2Zmc19hdmFpbDsgbisrKSB7CiAgICAgICAgaWYgKGJpby0+b2Zmc1tuXSA9PSBvZmYpCiAgICAgICAg
ICAgIHJldHVybiBiaW9fZ2V0KGJpbywgc2l6ZW9mKHN0cnVjdCBmbGF0X2JpbmRlcl9vYmplY3QpKTsK
ICAgIH0KCiAgICBiaW8tPmRhdGFfYXZhaWwgPSAwOwogICAgYmlvLT5mbGFncyB8PSBCSU9fRl9PVkVS
RkxPVzsKICAgIHJldHVybiBOVUxMOwp9Cgp1aW50MzJfdCBiaW9fZ2V0X3JlZihzdHJ1Y3QgYmluZGVy
X2lvICpiaW8pCnsKICAgIHN0cnVjdCBmbGF0X2JpbmRlcl9vYmplY3QgKm9iajsKCiAgICBvYmogPSBf
YmlvX2dldF9vYmooYmlvKTsKICAgIGlmICghb2JqKQogICAgICAgIHJldHVybiAwOwoKICAgIGlmIChv
YmotPnR5cGUgPT0gQklOREVSX1RZUEVfSEFORExFKQogICAgICAgIHJldHVybiBvYmotPmhhbmRsZTsK
CiAgICByZXR1cm4gMDsKfQo=</data><mime>application/octet-stream</mime><width>0</width><height>0</height><duration>0</duration><resource-attributes><file-name>binder.c</file-name></resource-attributes></resource><resource><data encoding="base64">LyoKICogQ29weXJpZ2h0IChDKSAyMDA1IFRoZSBBbmRyb2lkIE9wZW4gU291cmNlIFByb2plY3QKICoK
ICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNl
bnNlIik7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0
aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAq
CiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVu
bGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29m
dHdhcmUKICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4g
IkFTIElTIiBCQVNJUywKICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJ
TkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNw
ZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKICogbGltaXRhdGlvbnMgdW5k
ZXIgdGhlIExpY2Vuc2UuCiAqLwoKI2RlZmluZSBMT0dfVEFHICJCcEJpbmRlciIKLy8jZGVmaW5lIExP
R19OREVCVUcgMAoKI2luY2x1ZGUgPGJpbmRlci9CcEJpbmRlci5oPgoKI2luY2x1ZGUgPGJpbmRlci9J
UENUaHJlYWRTdGF0ZS5oPgojaW5jbHVkZSA8dXRpbHMvTG9nLmg+CgojaW5jbHVkZSA8c3RkaW8uaD4K
Ci8vI3VuZGVmIEFMT0dWCi8vI2RlZmluZSBBTE9HViguLi4pIGZwcmludGYoc3RkZXJyLCBfX1ZBX0FS
R1NfXykKCm5hbWVzcGFjZSBhbmRyb2lkIHsKCi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKQnBCaW5kZXI6Ok9i
amVjdE1hbmFnZXI6Ok9iamVjdE1hbmFnZXIoKQp7Cn0KCkJwQmluZGVyOjpPYmplY3RNYW5hZ2VyOjp+
T2JqZWN0TWFuYWdlcigpCnsKICAgIGtpbGwoKTsKfQoKdm9pZCBCcEJpbmRlcjo6T2JqZWN0TWFuYWdl
cjo6YXR0YWNoKAogICAgY29uc3Qgdm9pZCogb2JqZWN0SUQsIHZvaWQqIG9iamVjdCwgdm9pZCogY2xl
YW51cENvb2tpZSwKICAgIElCaW5kZXI6Om9iamVjdF9jbGVhbnVwX2Z1bmMgZnVuYykKewogICAgZW50
cnlfdCBlOwogICAgZS5vYmplY3QgPSBvYmplY3Q7CiAgICBlLmNsZWFudXBDb29raWUgPSBjbGVhbnVw
Q29va2llOwogICAgZS5mdW5jID0gZnVuYzsKCiAgICBpZiAobU9iamVjdHMuaW5kZXhPZktleShvYmpl
Y3RJRCkgPj0gMCkgewogICAgICAgIEFMT0dFKCJUcnlpbmcgdG8gYXR0YWNoIG9iamVjdCBJRCAlcCB0
byBiaW5kZXIgT2JqZWN0TWFuYWdlciAlcCB3aXRoIG9iamVjdCAlcCwgYnV0IG9iamVjdCBJRCBhbHJl
YWR5IGluIHVzZSIsCiAgICAgICAgICAgICAgICBvYmplY3RJRCwgdGhpcywgIG9iamVjdCk7CiAgICAg
ICAgcmV0dXJuOwogICAgfQoKICAgIG1PYmplY3RzLmFkZChvYmplY3RJRCwgZSk7Cn0KCnZvaWQqIEJw
QmluZGVyOjpPYmplY3RNYW5hZ2VyOjpmaW5kKGNvbnN0IHZvaWQqIG9iamVjdElEKSBjb25zdAp7CiAg
ICBjb25zdCBzc2l6ZV90IGkgPSBtT2JqZWN0cy5pbmRleE9mS2V5KG9iamVjdElEKTsKICAgIGlmIChp
IDwgMCkgcmV0dXJuIE5VTEw7CiAgICByZXR1cm4gbU9iamVjdHMudmFsdWVBdChpKS5vYmplY3Q7Cn0K
CnZvaWQgQnBCaW5kZXI6Ok9iamVjdE1hbmFnZXI6OmRldGFjaChjb25zdCB2b2lkKiBvYmplY3RJRCkK
ewogICAgbU9iamVjdHMucmVtb3ZlSXRlbShvYmplY3RJRCk7Cn0KCnZvaWQgQnBCaW5kZXI6Ok9iamVj
dE1hbmFnZXI6OmtpbGwoKQp7CiAgICBjb25zdCBzaXplX3QgTiA9IG1PYmplY3RzLnNpemUoKTsKICAg
IEFMT0dWKCJLaWxsaW5nICV6dSBvYmplY3RzIGluIG1hbmFnZXIgJXAiLCBOLCB0aGlzKTsKICAgIGZv
ciAoc2l6ZV90IGk9MDsgaTxOOyBpKyspIHsKICAgICAgICBjb25zdCBlbnRyeV90JiBlID0gbU9iamVj
dHMudmFsdWVBdChpKTsKICAgICAgICBpZiAoZS5mdW5jICE9IE5VTEwpIHsKICAgICAgICAgICAgZS5m
dW5jKG1PYmplY3RzLmtleUF0KGkpLCBlLm9iamVjdCwgZS5jbGVhbnVwQ29va2llKTsKICAgICAgICB9
CiAgICB9CgogICAgbU9iamVjdHMuY2xlYXIoKTsKfQoKLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpCcEJpbmRl
cjo6QnBCaW5kZXIoaW50MzJfdCBoYW5kbGUpCiAgICA6IG1IYW5kbGUoaGFuZGxlKQogICAgLCBtQWxp
dmUoMSkKICAgICwgbU9iaXRzU2VudCgwKQogICAgLCBtT2JpdHVhcmllcyhOVUxMKQp7CiAgICBBTE9H
VigiQ3JlYXRpbmcgQnBCaW5kZXIgJXAgaGFuZGxlICVkXG4iLCB0aGlzLCBtSGFuZGxlKTsKCiAgICBl
eHRlbmRPYmplY3RMaWZldGltZShPQkpFQ1RfTElGRVRJTUVfV0VBSyk7CiAgICBJUENUaHJlYWRTdGF0
ZTo6c2VsZigpLT5pbmNXZWFrSGFuZGxlKGhhbmRsZSk7Cn0KCmJvb2wgQnBCaW5kZXI6OmlzRGVzY3Jp
cHRvckNhY2hlZCgpIGNvbnN0IHsKICAgIE11dGV4OjpBdXRvbG9jayBfbChtTG9jayk7CiAgICByZXR1
cm4gbURlc2NyaXB0b3JDYWNoZS5zaXplKCkgPyB0cnVlIDogZmFsc2U7Cn0KCmNvbnN0IFN0cmluZzE2
JiBCcEJpbmRlcjo6Z2V0SW50ZXJmYWNlRGVzY3JpcHRvcigpIGNvbnN0CnsKICAgIGlmIChpc0Rlc2Ny
aXB0b3JDYWNoZWQoKSA9PSBmYWxzZSkgewogICAgICAgIFBhcmNlbCBzZW5kLCByZXBseTsKICAgICAg
ICAvLyBkbyB0aGUgSVBDIHdpdGhvdXQgYSBsb2NrIGhlbGQuCiAgICAgICAgc3RhdHVzX3QgZXJyID0g
Y29uc3RfY2FzdDxCcEJpbmRlcio+KHRoaXMpLT50cmFuc2FjdCgKICAgICAgICAgICAgICAgIElOVEVS
RkFDRV9UUkFOU0FDVElPTiwgc2VuZCwgJnJlcGx5KTsKICAgICAgICBpZiAoZXJyID09IE5PX0VSUk9S
KSB7CiAgICAgICAgICAgIFN0cmluZzE2IHJlcyhyZXBseS5yZWFkU3RyaW5nMTYoKSk7CiAgICAgICAg
ICAgIE11dGV4OjpBdXRvbG9jayBfbChtTG9jayk7CiAgICAgICAgICAgIC8vIG1EZXNjcmlwdG9yQ2Fj
aGUgY291bGQgaGF2ZSBiZWVuIGFzc2lnbmVkIHdoaWxlIHRoZSBsb2NrIHdhcwogICAgICAgICAgICAv
LyByZWxlYXNlZC4KICAgICAgICAgICAgaWYgKG1EZXNjcmlwdG9yQ2FjaGUuc2l6ZSgpID09IDApCiAg
ICAgICAgICAgICAgICBtRGVzY3JpcHRvckNhY2hlID0gcmVzOwogICAgICAgIH0KICAgIH0KCiAgICAv
LyB3ZSdyZSByZXR1cm5pbmcgYSByZWZlcmVuY2UgdG8gYSBub24tc3RhdGljIG9iamVjdCBoZXJlLiBV
c3VhbGx5IHRoaXMKICAgIC8vIGlzIG5vdCBzb21ldGhpbmcgc21hcnQgdG8gZG8sIGhvd2V2ZXIsIHdp
dGggYmluZGVyIG9iamVjdHMgaXQgaXMKICAgIC8vICh1c3VhbGx5KSBzYWZlIGJlY2F1c2UgdGhleSBh
cmUgcmVmZXJlbmNlLWNvdW50ZWQuCgogICAgcmV0dXJuIG1EZXNjcmlwdG9yQ2FjaGU7Cn0KCmJvb2wg
QnBCaW5kZXI6OmlzQmluZGVyQWxpdmUoKSBjb25zdAp7CiAgICByZXR1cm4gbUFsaXZlICE9IDA7Cn0K
CnN0YXR1c190IEJwQmluZGVyOjpwaW5nQmluZGVyKCkKewogICAgUGFyY2VsIHNlbmQ7CiAgICBQYXJj
ZWwgcmVwbHk7CiAgICBzdGF0dXNfdCBlcnIgPSB0cmFuc2FjdChQSU5HX1RSQU5TQUNUSU9OLCBzZW5k
LCAmcmVwbHkpOwogICAgaWYgKGVyciAhPSBOT19FUlJPUikgcmV0dXJuIGVycjsKICAgIGlmIChyZXBs
eS5kYXRhU2l6ZSgpIDwgc2l6ZW9mKHN0YXR1c190KSkgcmV0dXJuIE5PVF9FTk9VR0hfREFUQTsKICAg
IHJldHVybiAoc3RhdHVzX3QpcmVwbHkucmVhZEludDMyKCk7Cn0KCnN0YXR1c190IEJwQmluZGVyOjpk
dW1wKGludCBmZCwgY29uc3QgVmVjdG9yPFN0cmluZzE2PiYgYXJncykKewogICAgUGFyY2VsIHNlbmQ7
CiAgICBQYXJjZWwgcmVwbHk7CiAgICBzZW5kLndyaXRlRmlsZURlc2NyaXB0b3IoZmQpOwogICAgY29u
c3Qgc2l6ZV90IG51bUFyZ3MgPSBhcmdzLnNpemUoKTsKICAgIHNlbmQud3JpdGVJbnQzMihudW1Bcmdz
KTsKICAgIGZvciAoc2l6ZV90IGkgPSAwOyBpIDwgbnVtQXJnczsgaSsrKSB7CiAgICAgICAgc2VuZC53
cml0ZVN0cmluZzE2KGFyZ3NbaV0pOwogICAgfQogICAgc3RhdHVzX3QgZXJyID0gdHJhbnNhY3QoRFVN
UF9UUkFOU0FDVElPTiwgc2VuZCwgJnJlcGx5KTsKICAgIHJldHVybiBlcnI7Cn0KCnN0YXR1c190IEJw
QmluZGVyOjp0cmFuc2FjdCgKICAgIHVpbnQzMl90IGNvZGUsIGNvbnN0IFBhcmNlbCYgZGF0YSwgUGFy
Y2VsKiByZXBseSwgdWludDMyX3QgZmxhZ3MpCnsKICAgIC8vIE9uY2UgYSBiaW5kZXIgaGFzIGRpZWQs
IGl0IHdpbGwgbmV2ZXIgY29tZSBiYWNrIHRvIGxpZmUuCiAgICBpZiAobUFsaXZlKSB7CiAgICAgICAg
c3RhdHVzX3Qgc3RhdHVzID0gSVBDVGhyZWFkU3RhdGU6OnNlbGYoKS0+dHJhbnNhY3QoCiAgICAgICAg
ICAgIG1IYW5kbGUsIGNvZGUsIGRhdGEsIHJlcGx5LCBmbGFncyk7CiAgICAgICAgaWYgKHN0YXR1cyA9
PSBERUFEX09CSkVDVCkgbUFsaXZlID0gMDsKICAgICAgICByZXR1cm4gc3RhdHVzOwogICAgfQoKICAg
IHJldHVybiBERUFEX09CSkVDVDsKfQoKc3RhdHVzX3QgQnBCaW5kZXI6OmxpbmtUb0RlYXRoKAogICAg
Y29uc3Qgc3A8RGVhdGhSZWNpcGllbnQ+JiByZWNpcGllbnQsIHZvaWQqIGNvb2tpZSwgdWludDMyX3Qg
ZmxhZ3MpCnsKICAgIE9iaXR1YXJ5IG9iOwogICAgb2IucmVjaXBpZW50ID0gcmVjaXBpZW50OwogICAg
b2IuY29va2llID0gY29va2llOwogICAgb2IuZmxhZ3MgPSBmbGFnczsKCiAgICBMT0dfQUxXQVlTX0ZB
VEFMX0lGKHJlY2lwaWVudCA9PSBOVUxMLAogICAgICAgICAgICAgICAgICAgICAgICAibGlua1RvRGVh
dGgoKTogcmVjaXBpZW50IG11c3QgYmUgbm9uLU5VTEwiKTsKCiAgICB7CiAgICAgICAgQXV0b011dGV4
IF9sKG1Mb2NrKTsKCiAgICAgICAgaWYgKCFtT2JpdHNTZW50KSB7CiAgICAgICAgICAgIGlmICghbU9i
aXR1YXJpZXMpIHsKICAgICAgICAgICAgICAgIG1PYml0dWFyaWVzID0gbmV3IFZlY3RvcjxPYml0dWFy
eT47CiAgICAgICAgICAgICAgICBpZiAoIW1PYml0dWFyaWVzKSB7CiAgICAgICAgICAgICAgICAgICAg
cmV0dXJuIE5PX01FTU9SWTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIEFMT0dWKCJS
ZXF1ZXN0aW5nIGRlYXRoIG5vdGlmaWNhdGlvbjogJXAgaGFuZGxlICVkXG4iLCB0aGlzLCBtSGFuZGxl
KTsKICAgICAgICAgICAgICAgIGdldFdlYWtSZWZzKCktPmluY1dlYWsodGhpcyk7CiAgICAgICAgICAg
ICAgICBJUENUaHJlYWRTdGF0ZSogc2VsZiA9IElQQ1RocmVhZFN0YXRlOjpzZWxmKCk7CiAgICAgICAg
ICAgICAgICBzZWxmLT5yZXF1ZXN0RGVhdGhOb3RpZmljYXRpb24obUhhbmRsZSwgdGhpcyk7CiAgICAg
ICAgICAgICAgICBzZWxmLT5mbHVzaENvbW1hbmRzKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAg
c3NpemVfdCByZXMgPSBtT2JpdHVhcmllcy0+YWRkKG9iKTsKICAgICAgICAgICAgcmV0dXJuIHJlcyA+
PSAoc3NpemVfdClOT19FUlJPUiA/IChzdGF0dXNfdClOT19FUlJPUiA6IHJlczsKICAgICAgICB9CiAg
ICB9CgogICAgcmV0dXJuIERFQURfT0JKRUNUOwp9CgpzdGF0dXNfdCBCcEJpbmRlcjo6dW5saW5rVG9E
ZWF0aCgKICAgIGNvbnN0IHdwPERlYXRoUmVjaXBpZW50PiYgcmVjaXBpZW50LCB2b2lkKiBjb29raWUs
IHVpbnQzMl90IGZsYWdzLAogICAgd3A8RGVhdGhSZWNpcGllbnQ+KiBvdXRSZWNpcGllbnQpCnsKICAg
IEF1dG9NdXRleCBfbChtTG9jayk7CgogICAgaWYgKG1PYml0c1NlbnQpIHsKICAgICAgICByZXR1cm4g
REVBRF9PQkpFQ1Q7CiAgICB9CgogICAgY29uc3Qgc2l6ZV90IE4gPSBtT2JpdHVhcmllcyA/IG1PYml0
dWFyaWVzLT5zaXplKCkgOiAwOwogICAgZm9yIChzaXplX3QgaT0wOyBpPE47IGkrKykgewogICAgICAg
IGNvbnN0IE9iaXR1YXJ5JiBvYml0ID0gbU9iaXR1YXJpZXMtPml0ZW1BdChpKTsKICAgICAgICBpZiAo
KG9iaXQucmVjaXBpZW50ID09IHJlY2lwaWVudAogICAgICAgICAgICAgICAgICAgIHx8IChyZWNpcGll
bnQgPT0gTlVMTCAmJiBvYml0LmNvb2tpZSA9PSBjb29raWUpKQogICAgICAgICAgICAgICAgJiYgb2Jp
dC5mbGFncyA9PSBmbGFncykgewogICAgICAgICAgICBjb25zdCB1aW50MzJfdCBhbGxGbGFncyA9IG9i
aXQuZmxhZ3N8ZmxhZ3M7CiAgICAgICAgICAgIGlmIChvdXRSZWNpcGllbnQgIT0gTlVMTCkgewogICAg
ICAgICAgICAgICAgKm91dFJlY2lwaWVudCA9IG1PYml0dWFyaWVzLT5pdGVtQXQoaSkucmVjaXBpZW50
OwogICAgICAgICAgICB9CiAgICAgICAgICAgIG1PYml0dWFyaWVzLT5yZW1vdmVBdChpKTsKICAgICAg
ICAgICAgaWYgKG1PYml0dWFyaWVzLT5zaXplKCkgPT0gMCkgewogICAgICAgICAgICAgICAgQUxPR1Yo
IkNsZWFyaW5nIGRlYXRoIG5vdGlmaWNhdGlvbjogJXAgaGFuZGxlICVkXG4iLCB0aGlzLCBtSGFuZGxl
KTsKICAgICAgICAgICAgICAgIElQQ1RocmVhZFN0YXRlKiBzZWxmID0gSVBDVGhyZWFkU3RhdGU6OnNl
bGYoKTsKICAgICAgICAgICAgICAgIHNlbGYtPmNsZWFyRGVhdGhOb3RpZmljYXRpb24obUhhbmRsZSwg
dGhpcyk7CiAgICAgICAgICAgICAgICBzZWxmLT5mbHVzaENvbW1hbmRzKCk7CiAgICAgICAgICAgICAg
ICBkZWxldGUgbU9iaXR1YXJpZXM7CiAgICAgICAgICAgICAgICBtT2JpdHVhcmllcyA9IE5VTEw7CiAg
ICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIE5PX0VSUk9SOwogICAgICAgIH0KICAgIH0KCiAg
ICByZXR1cm4gTkFNRV9OT1RfRk9VTkQ7Cn0KCnZvaWQgQnBCaW5kZXI6OnNlbmRPYml0dWFyeSgpCnsK
ICAgIEFMT0dWKCJTZW5kaW5nIG9iaXR1YXJ5IGZvciBwcm94eSAlcCBoYW5kbGUgJWQsIG1PYml0c1Nl
bnQ9JXNcbiIsCiAgICAgICAgdGhpcywgbUhhbmRsZSwgbU9iaXRzU2VudCA/ICJ0cnVlIiA6ICJmYWxz
ZSIpOwoKICAgIG1BbGl2ZSA9IDA7CiAgICBpZiAobU9iaXRzU2VudCkgcmV0dXJuOwoKICAgIG1Mb2Nr
LmxvY2soKTsKICAgIFZlY3RvcjxPYml0dWFyeT4qIG9iaXRzID0gbU9iaXR1YXJpZXM7CiAgICBpZihv
Yml0cyAhPSBOVUxMKSB7CiAgICAgICAgQUxPR1YoIkNsZWFyaW5nIHNlbnQgZGVhdGggbm90aWZpY2F0
aW9uOiAlcCBoYW5kbGUgJWRcbiIsIHRoaXMsIG1IYW5kbGUpOwogICAgICAgIElQQ1RocmVhZFN0YXRl
KiBzZWxmID0gSVBDVGhyZWFkU3RhdGU6OnNlbGYoKTsKICAgICAgICBzZWxmLT5jbGVhckRlYXRoTm90
aWZpY2F0aW9uKG1IYW5kbGUsIHRoaXMpOwogICAgICAgIHNlbGYtPmZsdXNoQ29tbWFuZHMoKTsKICAg
ICAgICBtT2JpdHVhcmllcyA9IE5VTEw7CiAgICB9CiAgICBtT2JpdHNTZW50ID0gMTsKICAgIG1Mb2Nr
LnVubG9jaygpOwoKICAgIEFMT0dWKCJSZXBvcnRpbmcgZGVhdGggb2YgcHJveHkgJXAgZm9yICV6dSBy
ZWNpcGllbnRzXG4iLAogICAgICAgIHRoaXMsIG9iaXRzID8gb2JpdHMtPnNpemUoKSA6IDBVKTsKCiAg
ICBpZiAob2JpdHMgIT0gTlVMTCkgewogICAgICAgIGNvbnN0IHNpemVfdCBOID0gb2JpdHMtPnNpemUo
KTsKICAgICAgICBmb3IgKHNpemVfdCBpPTA7IGk8TjsgaSsrKSB7CiAgICAgICAgICAgIHJlcG9ydE9u
ZURlYXRoKG9iaXRzLT5pdGVtQXQoaSkpOwogICAgICAgIH0KCiAgICAgICAgZGVsZXRlIG9iaXRzOwog
ICAgfQp9Cgp2b2lkIEJwQmluZGVyOjpyZXBvcnRPbmVEZWF0aChjb25zdCBPYml0dWFyeSYgb2JpdCkK
ewogICAgc3A8RGVhdGhSZWNpcGllbnQ+IHJlY2lwaWVudCA9IG9iaXQucmVjaXBpZW50LnByb21vdGUo
KTsKICAgIEFMT0dWKCJSZXBvcnRpbmcgZGVhdGggdG8gcmVjaXBpZW50OiAlcFxuIiwgcmVjaXBpZW50
LmdldCgpKTsKICAgIGlmIChyZWNpcGllbnQgPT0gTlVMTCkgcmV0dXJuOwoKICAgIHJlY2lwaWVudC0+
YmluZGVyRGllZCh0aGlzKTsKfQoKCnZvaWQgQnBCaW5kZXI6OmF0dGFjaE9iamVjdCgKICAgIGNvbnN0
IHZvaWQqIG9iamVjdElELCB2b2lkKiBvYmplY3QsIHZvaWQqIGNsZWFudXBDb29raWUsCiAgICBvYmpl
Y3RfY2xlYW51cF9mdW5jIGZ1bmMpCnsKICAgIEF1dG9NdXRleCBfbChtTG9jayk7CiAgICBBTE9HVigi
QXR0YWNoaW5nIG9iamVjdCAlcCB0byBiaW5kZXIgJXAgKG1hbmFnZXI9JXApIiwgb2JqZWN0LCB0aGlz
LCAmbU9iamVjdHMpOwogICAgbU9iamVjdHMuYXR0YWNoKG9iamVjdElELCBvYmplY3QsIGNsZWFudXBD
b29raWUsIGZ1bmMpOwp9Cgp2b2lkKiBCcEJpbmRlcjo6ZmluZE9iamVjdChjb25zdCB2b2lkKiBvYmpl
Y3RJRCkgY29uc3QKewogICAgQXV0b011dGV4IF9sKG1Mb2NrKTsKICAgIHJldHVybiBtT2JqZWN0cy5m
aW5kKG9iamVjdElEKTsKfQoKdm9pZCBCcEJpbmRlcjo6ZGV0YWNoT2JqZWN0KGNvbnN0IHZvaWQqIG9i
amVjdElEKQp7CiAgICBBdXRvTXV0ZXggX2wobUxvY2spOwogICAgbU9iamVjdHMuZGV0YWNoKG9iamVj
dElEKTsKfQoKQnBCaW5kZXIqIEJwQmluZGVyOjpyZW1vdGVCaW5kZXIoKQp7CiAgICByZXR1cm4gdGhp
czsKfQoKQnBCaW5kZXI6On5CcEJpbmRlcigpCnsKICAgIEFMT0dWKCJEZXN0cm95aW5nIEJwQmluZGVy
ICVwIGhhbmRsZSAlZFxuIiwgdGhpcywgbUhhbmRsZSk7CgogICAgSVBDVGhyZWFkU3RhdGUqIGlwYyA9
IElQQ1RocmVhZFN0YXRlOjpzZWxmKCk7CgogICAgbUxvY2subG9jaygpOwogICAgVmVjdG9yPE9iaXR1
YXJ5Piogb2JpdHMgPSBtT2JpdHVhcmllczsKICAgIGlmKG9iaXRzICE9IE5VTEwpIHsKICAgICAgICBp
ZiAoaXBjKSBpcGMtPmNsZWFyRGVhdGhOb3RpZmljYXRpb24obUhhbmRsZSwgdGhpcyk7CiAgICAgICAg
bU9iaXR1YXJpZXMgPSBOVUxMOwogICAgfQogICAgbUxvY2sudW5sb2NrKCk7CgogICAgaWYgKG9iaXRz
ICE9IE5VTEwpIHsKICAgICAgICAvLyBYWFggU2hvdWxkIHdlIHRlbGwgYW55IHJlbWFpbmluZyBEZWF0
aFJlY2lwaWVudAogICAgICAgIC8vIG9iamVjdHMgdGhhdCB0aGUgbGFzdCBzdHJvbmcgcmVmIGhhcyBn
b25lIGF3YXksIHNvIHRoZXkKICAgICAgICAvLyBhcmUgbm8gbG9uZ2VyIGxpbmtlZD8KICAgICAgICBk
ZWxldGUgb2JpdHM7CiAgICB9CgogICAgaWYgKGlwYykgewogICAgICAgIGlwYy0+ZXhwdW5nZUhhbmRs
ZShtSGFuZGxlLCB0aGlzKTsKICAgICAgICBpcGMtPmRlY1dlYWtIYW5kbGUobUhhbmRsZSk7CiAgICB9
Cn0KCnZvaWQgQnBCaW5kZXI6Om9uRmlyc3RSZWYoKQp7CiAgICBBTE9HVigib25GaXJzdFJlZiBCcEJp
bmRlciAlcCBoYW5kbGUgJWRcbiIsIHRoaXMsIG1IYW5kbGUpOwogICAgSVBDVGhyZWFkU3RhdGUqIGlw
YyA9IElQQ1RocmVhZFN0YXRlOjpzZWxmKCk7CiAgICBpZiAoaXBjKSBpcGMtPmluY1N0cm9uZ0hhbmRs
ZShtSGFuZGxlKTsKfQoKdm9pZCBCcEJpbmRlcjo6b25MYXN0U3Ryb25nUmVmKGNvbnN0IHZvaWQqIC8q
aWQqLykKewogICAgQUxPR1YoIm9uTGFzdFN0cm9uZ1JlZiBCcEJpbmRlciAlcCBoYW5kbGUgJWRcbiIs
IHRoaXMsIG1IYW5kbGUpOwogICAgSUZfQUxPR1YoKSB7CiAgICAgICAgcHJpbnRSZWZzKCk7CiAgICB9
CiAgICBJUENUaHJlYWRTdGF0ZSogaXBjID0gSVBDVGhyZWFkU3RhdGU6OnNlbGYoKTsKICAgIGlmIChp
cGMpIGlwYy0+ZGVjU3Ryb25nSGFuZGxlKG1IYW5kbGUpOwp9Cgpib29sIEJwQmluZGVyOjpvbkluY1N0
cm9uZ0F0dGVtcHRlZCh1aW50MzJfdCAvKmZsYWdzKi8sIGNvbnN0IHZvaWQqIC8qaWQqLykKewogICAg
QUxPR1YoIm9uSW5jU3Ryb25nQXR0ZW1wdGVkIEJwQmluZGVyICVwIGhhbmRsZSAlZFxuIiwgdGhpcywg
bUhhbmRsZSk7CiAgICBJUENUaHJlYWRTdGF0ZSogaXBjID0gSVBDVGhyZWFkU3RhdGU6OnNlbGYoKTsK
ICAgIHJldHVybiBpcGMgPyBpcGMtPmF0dGVtcHRJbmNTdHJvbmdIYW5kbGUobUhhbmRsZSkgPT0gTk9f
RVJST1IgOiBmYWxzZTsKfQoKLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgp9OyAvLyBuYW1lc3BhY2UgYW5kcm9p
ZAo=</data><mime>application/octet-stream</mime><width>0</width><height>0</height><duration>0</duration><resource-attributes><file-name>BpBinder.cpp</file-name></resource-attributes></resource><resource><data encoding="base64">LyogYmluZGVyLmMKICoKICogQW5kcm9pZCBJUEMgU3Vic3lzdGVtCiAqCiAqIENvcHlyaWdodCAoQykg
MjAwNy0yMDA4IEdvb2dsZSwgSW5jLgogKgogKiBUaGlzIHNvZnR3YXJlIGlzIGxpY2Vuc2VkIHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljCiAqIExpY2Vuc2UgdmVyc2lvbiAyLCBh
cyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgYW5kCiAqIG1heSBiZSBj
b3BpZWQsIGRpc3RyaWJ1dGVkLCBhbmQgbW9kaWZpZWQgdW5kZXIgdGhvc2UgdGVybXMuCiAqCiAqIFRo
aXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVs
LAogKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJy
YW50eSBvZgogKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBP
U0UuICBTZWUgdGhlCiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMu
CiAqCiAqLwoKI2RlZmluZSBwcl9mbXQoZm10KSBLQlVJTERfTU9ETkFNRSAiOiAiIGZtdAoKI2luY2x1
ZGUgPGFzbS9jYWNoZWZsdXNoLmg+CiNpbmNsdWRlIDxsaW51eC9mZHRhYmxlLmg+CiNpbmNsdWRlIDxs
aW51eC9maWxlLmg+CiNpbmNsdWRlIDxsaW51eC9mcmVlemVyLmg+CiNpbmNsdWRlIDxsaW51eC9mcy5o
PgojaW5jbHVkZSA8bGludXgvbGlzdC5oPgojaW5jbHVkZSA8bGludXgvbWlzY2RldmljZS5oPgojaW5j
bHVkZSA8bGludXgvbW0uaD4KI2luY2x1ZGUgPGxpbnV4L21vZHVsZS5oPgojaW5jbHVkZSA8bGludXgv
bXV0ZXguaD4KI2luY2x1ZGUgPGxpbnV4L25zcHJveHkuaD4KI2luY2x1ZGUgPGxpbnV4L3BvbGwuaD4K
I2luY2x1ZGUgPGxpbnV4L2RlYnVnZnMuaD4KI2luY2x1ZGUgPGxpbnV4L3JidHJlZS5oPgojaW5jbHVk
ZSA8bGludXgvc2NoZWQuaD4KI2luY2x1ZGUgPGxpbnV4L3NlcV9maWxlLmg+CiNpbmNsdWRlIDxsaW51
eC91YWNjZXNzLmg+CiNpbmNsdWRlIDxsaW51eC92bWFsbG9jLmg+CiNpbmNsdWRlIDxsaW51eC9zbGFi
Lmg+CiNpbmNsdWRlIDxsaW51eC9waWRfbmFtZXNwYWNlLmg+CiNpbmNsdWRlIDxsaW51eC9zZWN1cml0
eS5oPgoKI2lmZGVmIENPTkZJR19BTkRST0lEX0JJTkRFUl9JUENfMzJCSVQKI2RlZmluZSBCSU5ERVJf
SVBDXzMyQklUIDEKI2VuZGlmCgojaW5jbHVkZSA8dWFwaS9saW51eC9hbmRyb2lkL2JpbmRlci5oPgoj
aW5jbHVkZSAiYmluZGVyX3RyYWNlLmgiCgpzdGF0aWMgREVGSU5FX01VVEVYKGJpbmRlcl9tYWluX2xv
Y2spOwpzdGF0aWMgREVGSU5FX01VVEVYKGJpbmRlcl9kZWZlcnJlZF9sb2NrKTsKc3RhdGljIERFRklO
RV9NVVRFWChiaW5kZXJfbW1hcF9sb2NrKTsKCnN0YXRpYyBITElTVF9IRUFEKGJpbmRlcl9wcm9jcyk7
CnN0YXRpYyBITElTVF9IRUFEKGJpbmRlcl9kZWZlcnJlZF9saXN0KTsKc3RhdGljIEhMSVNUX0hFQUQo
YmluZGVyX2RlYWRfbm9kZXMpOwoKc3RhdGljIHN0cnVjdCBkZW50cnkgKmJpbmRlcl9kZWJ1Z2ZzX2Rp
cl9lbnRyeV9yb290OwpzdGF0aWMgc3RydWN0IGRlbnRyeSAqYmluZGVyX2RlYnVnZnNfZGlyX2VudHJ5
X3Byb2M7CnN0YXRpYyBzdHJ1Y3QgYmluZGVyX25vZGUgKmJpbmRlcl9jb250ZXh0X21ncl9ub2RlOwpz
dGF0aWMga3VpZF90IGJpbmRlcl9jb250ZXh0X21ncl91aWQgPSBJTlZBTElEX1VJRDsKc3RhdGljIGlu
dCBiaW5kZXJfbGFzdF9pZDsKc3RhdGljIHN0cnVjdCB3b3JrcXVldWVfc3RydWN0ICpiaW5kZXJfZGVm
ZXJyZWRfd29ya3F1ZXVlOwoKI2RlZmluZSBCSU5ERVJfREVCVUdfRU5UUlkobmFtZSkgXApzdGF0aWMg
aW50IGJpbmRlcl8jI25hbWUjI19vcGVuKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBmaWxlICpm
aWxlKSBcCnsgXAoJcmV0dXJuIHNpbmdsZV9vcGVuKGZpbGUsIGJpbmRlcl8jI25hbWUjI19zaG93LCBp
bm9kZS0+aV9wcml2YXRlKTsgXAp9IFwKXApzdGF0aWMgY29uc3Qgc3RydWN0IGZpbGVfb3BlcmF0aW9u
cyBiaW5kZXJfIyNuYW1lIyNfZm9wcyA9IHsgXAoJLm93bmVyID0gVEhJU19NT0RVTEUsIFwKCS5vcGVu
ID0gYmluZGVyXyMjbmFtZSMjX29wZW4sIFwKCS5yZWFkID0gc2VxX3JlYWQsIFwKCS5sbHNlZWsgPSBz
ZXFfbHNlZWssIFwKCS5yZWxlYXNlID0gc2luZ2xlX3JlbGVhc2UsIFwKfQoKc3RhdGljIGludCBiaW5k
ZXJfcHJvY19zaG93KHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqdW51c2VkKTsKQklOREVSX0RFQlVH
X0VOVFJZKHByb2MpOwoKLyogVGhpcyBpcyBvbmx5IGRlZmluZWQgaW4gaW5jbHVkZS9hc20tYXJtL3Np
emVzLmggKi8KI2lmbmRlZiBTWl8xSwojZGVmaW5lIFNaXzFLICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIDB4NDAwCiNlbmRpZgoKI2lmbmRlZiBTWl80TQojZGVmaW5lIFNaXzRNICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIDB4NDAwMDAwCiNlbmRpZgoKI2RlZmluZSBGT1JCSURERU5fTU1BUF9G
TEFHUyAgICAgICAgICAgICAgICAoVk1fV1JJVEUpCgojZGVmaW5lIEJJTkRFUl9TTUFMTF9CVUZfU0la
RSAoUEFHRV9TSVpFICogNjQpCgplbnVtIHsKCUJJTkRFUl9ERUJVR19VU0VSX0VSUk9SICAgICAgICAg
ICAgID0gMVUgPDwgMCwKCUJJTkRFUl9ERUJVR19GQUlMRURfVFJBTlNBQ1RJT04gICAgID0gMVUgPDwg
MSwKCUJJTkRFUl9ERUJVR19ERUFEX1RSQU5TQUNUSU9OICAgICAgID0gMVUgPDwgMiwKCUJJTkRFUl9E
RUJVR19PUEVOX0NMT1NFICAgICAgICAgICAgID0gMVUgPDwgMywKCUJJTkRFUl9ERUJVR19ERUFEX0JJ
TkRFUiAgICAgICAgICAgID0gMVUgPDwgNCwKCUJJTkRFUl9ERUJVR19ERUFUSF9OT1RJRklDQVRJT04g
ICAgID0gMVUgPDwgNSwKCUJJTkRFUl9ERUJVR19SRUFEX1dSSVRFICAgICAgICAgICAgID0gMVUgPDwg
NiwKCUJJTkRFUl9ERUJVR19VU0VSX1JFRlMgICAgICAgICAgICAgID0gMVUgPDwgNywKCUJJTkRFUl9E
RUJVR19USFJFQURTICAgICAgICAgICAgICAgID0gMVUgPDwgOCwKCUJJTkRFUl9ERUJVR19UUkFOU0FD
VElPTiAgICAgICAgICAgID0gMVUgPDwgOSwKCUJJTkRFUl9ERUJVR19UUkFOU0FDVElPTl9DT01QTEVU
RSAgID0gMVUgPDwgMTAsCglCSU5ERVJfREVCVUdfRlJFRV9CVUZGRVIgICAgICAgICAgICA9IDFVIDw8
IDExLAoJQklOREVSX0RFQlVHX0lOVEVSTkFMX1JFRlMgICAgICAgICAgPSAxVSA8PCAxMiwKCUJJTkRF
Ul9ERUJVR19CVUZGRVJfQUxMT0MgICAgICAgICAgID0gMVUgPDwgMTMsCglCSU5ERVJfREVCVUdfUFJJ
T1JJVFlfQ0FQICAgICAgICAgICA9IDFVIDw8IDE0LAoJQklOREVSX0RFQlVHX0JVRkZFUl9BTExPQ19B
U1lOQyAgICAgPSAxVSA8PCAxNSwKfTsKc3RhdGljIHVpbnQzMl90IGJpbmRlcl9kZWJ1Z19tYXNrID0g
QklOREVSX0RFQlVHX1VTRVJfRVJST1IgfAoJQklOREVSX0RFQlVHX0ZBSUxFRF9UUkFOU0FDVElPTiB8
IEJJTkRFUl9ERUJVR19ERUFEX1RSQU5TQUNUSU9OOwptb2R1bGVfcGFyYW1fbmFtZWQoZGVidWdfbWFz
aywgYmluZGVyX2RlYnVnX21hc2ssIHVpbnQsIFNfSVdVU1IgfCBTX0lSVUdPKTsKCnN0YXRpYyBib29s
IGJpbmRlcl9kZWJ1Z19ub19sb2NrOwptb2R1bGVfcGFyYW1fbmFtZWQocHJvY19ub19sb2NrLCBiaW5k
ZXJfZGVidWdfbm9fbG9jaywgYm9vbCwgU19JV1VTUiB8IFNfSVJVR08pOwoKc3RhdGljIERFQ0xBUkVf
V0FJVF9RVUVVRV9IRUFEKGJpbmRlcl91c2VyX2Vycm9yX3dhaXQpOwpzdGF0aWMgaW50IGJpbmRlcl9z
dG9wX29uX3VzZXJfZXJyb3I7CgpzdGF0aWMgaW50IGJpbmRlcl9zZXRfc3RvcF9vbl91c2VyX2Vycm9y
KGNvbnN0IGNoYXIgKnZhbCwKCQkJCQkgc3RydWN0IGtlcm5lbF9wYXJhbSAqa3ApCnsKCWludCByZXQ7
CgoJcmV0ID0gcGFyYW1fc2V0X2ludCh2YWwsIGtwKTsKCWlmIChiaW5kZXJfc3RvcF9vbl91c2VyX2Vy
cm9yIDwgMikKCQl3YWtlX3VwKCZiaW5kZXJfdXNlcl9lcnJvcl93YWl0KTsKCXJldHVybiByZXQ7Cn0K
bW9kdWxlX3BhcmFtX2NhbGwoc3RvcF9vbl91c2VyX2Vycm9yLCBiaW5kZXJfc2V0X3N0b3Bfb25fdXNl
cl9lcnJvciwKCXBhcmFtX2dldF9pbnQsICZiaW5kZXJfc3RvcF9vbl91c2VyX2Vycm9yLCBTX0lXVVNS
IHwgU19JUlVHTyk7CgojZGVmaW5lIGJpbmRlcl9kZWJ1ZyhtYXNrLCB4Li4uKSBcCglkbyB7IFwKCQlp
ZiAoYmluZGVyX2RlYnVnX21hc2sgJiBtYXNrKSBcCgkJCXByX2luZm8oeCk7IFwKCX0gd2hpbGUgKDAp
CgojZGVmaW5lIGJpbmRlcl91c2VyX2Vycm9yKHguLi4pIFwKCWRvIHsgXAoJCWlmIChiaW5kZXJfZGVi
dWdfbWFzayAmIEJJTkRFUl9ERUJVR19VU0VSX0VSUk9SKSBcCgkJCXByX2luZm8oeCk7IFwKCQlpZiAo
YmluZGVyX3N0b3Bfb25fdXNlcl9lcnJvcikgXAoJCQliaW5kZXJfc3RvcF9vbl91c2VyX2Vycm9yID0g
MjsgXAoJfSB3aGlsZSAoMCkKCmVudW0gYmluZGVyX3N0YXRfdHlwZXMgewoJQklOREVSX1NUQVRfUFJP
QywKCUJJTkRFUl9TVEFUX1RIUkVBRCwKCUJJTkRFUl9TVEFUX05PREUsCglCSU5ERVJfU1RBVF9SRUYs
CglCSU5ERVJfU1RBVF9ERUFUSCwKCUJJTkRFUl9TVEFUX1RSQU5TQUNUSU9OLAoJQklOREVSX1NUQVRf
VFJBTlNBQ1RJT05fQ09NUExFVEUsCglCSU5ERVJfU1RBVF9DT1VOVAp9OwoKc3RydWN0IGJpbmRlcl9z
dGF0cyB7CglpbnQgYnJbX0lPQ19OUihCUl9GQUlMRURfUkVQTFkpICsgMV07CglpbnQgYmNbX0lPQ19O
UihCQ19ERUFEX0JJTkRFUl9ET05FKSArIDFdOwoJaW50IG9ial9jcmVhdGVkW0JJTkRFUl9TVEFUX0NP
VU5UXTsKCWludCBvYmpfZGVsZXRlZFtCSU5ERVJfU1RBVF9DT1VOVF07Cn07CgpzdGF0aWMgc3RydWN0
IGJpbmRlcl9zdGF0cyBiaW5kZXJfc3RhdHM7CgpzdGF0aWMgaW5saW5lIHZvaWQgYmluZGVyX3N0YXRz
X2RlbGV0ZWQoZW51bSBiaW5kZXJfc3RhdF90eXBlcyB0eXBlKQp7CgliaW5kZXJfc3RhdHMub2JqX2Rl
bGV0ZWRbdHlwZV0rKzsKfQoKc3RhdGljIGlubGluZSB2b2lkIGJpbmRlcl9zdGF0c19jcmVhdGVkKGVu
dW0gYmluZGVyX3N0YXRfdHlwZXMgdHlwZSkKewoJYmluZGVyX3N0YXRzLm9ial9jcmVhdGVkW3R5cGVd
Kys7Cn0KCnN0cnVjdCBiaW5kZXJfdHJhbnNhY3Rpb25fbG9nX2VudHJ5IHsKCWludCBkZWJ1Z19pZDsK
CWludCBjYWxsX3R5cGU7CglpbnQgZnJvbV9wcm9jOwoJaW50IGZyb21fdGhyZWFkOwoJaW50IHRhcmdl
dF9oYW5kbGU7CglpbnQgdG9fcHJvYzsKCWludCB0b190aHJlYWQ7CglpbnQgdG9fbm9kZTsKCWludCBk
YXRhX3NpemU7CglpbnQgb2Zmc2V0c19zaXplOwp9OwpzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uX2xv
ZyB7CglpbnQgbmV4dDsKCWludCBmdWxsOwoJc3RydWN0IGJpbmRlcl90cmFuc2FjdGlvbl9sb2dfZW50
cnkgZW50cnlbMzJdOwp9OwpzdGF0aWMgc3RydWN0IGJpbmRlcl90cmFuc2FjdGlvbl9sb2cgYmluZGVy
X3RyYW5zYWN0aW9uX2xvZzsKc3RhdGljIHN0cnVjdCBiaW5kZXJfdHJhbnNhY3Rpb25fbG9nIGJpbmRl
cl90cmFuc2FjdGlvbl9sb2dfZmFpbGVkOwoKc3RhdGljIHN0cnVjdCBiaW5kZXJfdHJhbnNhY3Rpb25f
bG9nX2VudHJ5ICpiaW5kZXJfdHJhbnNhY3Rpb25fbG9nX2FkZCgKCXN0cnVjdCBiaW5kZXJfdHJhbnNh
Y3Rpb25fbG9nICpsb2cpCnsKCXN0cnVjdCBiaW5kZXJfdHJhbnNhY3Rpb25fbG9nX2VudHJ5ICplOwoK
CWUgPSAmbG9nLT5lbnRyeVtsb2ctPm5leHRdOwoJbWVtc2V0KGUsIDAsIHNpemVvZigqZSkpOwoJbG9n
LT5uZXh0Kys7CglpZiAobG9nLT5uZXh0ID09IEFSUkFZX1NJWkUobG9nLT5lbnRyeSkpIHsKCQlsb2ct
Pm5leHQgPSAwOwoJCWxvZy0+ZnVsbCA9IDE7Cgl9CglyZXR1cm4gZTsKfQoKc3RydWN0IGJpbmRlcl93
b3JrIHsKCXN0cnVjdCBsaXN0X2hlYWQgZW50cnk7CgllbnVtIHsKCQlCSU5ERVJfV09SS19UUkFOU0FD
VElPTiA9IDEsCgkJQklOREVSX1dPUktfVFJBTlNBQ1RJT05fQ09NUExFVEUsCgkJQklOREVSX1dPUktf
Tk9ERSwKCQlCSU5ERVJfV09SS19ERUFEX0JJTkRFUiwKCQlCSU5ERVJfV09SS19ERUFEX0JJTkRFUl9B
TkRfQ0xFQVIsCgkJQklOREVSX1dPUktfQ0xFQVJfREVBVEhfTk9USUZJQ0FUSU9OLAoJfSB0eXBlOwp9
OwoKc3RydWN0IGJpbmRlcl9ub2RlIHsKCWludCBkZWJ1Z19pZDsKCXN0cnVjdCBiaW5kZXJfd29yayB3
b3JrOwoJdW5pb24gewoJCXN0cnVjdCByYl9ub2RlIHJiX25vZGU7CgkJc3RydWN0IGhsaXN0X25vZGUg
ZGVhZF9ub2RlOwoJfTsKCXN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYzsKCXN0cnVjdCBobGlzdF9oZWFk
IHJlZnM7CglpbnQgaW50ZXJuYWxfc3Ryb25nX3JlZnM7CglpbnQgbG9jYWxfd2Vha19yZWZzOwoJaW50
IGxvY2FsX3N0cm9uZ19yZWZzOwoJYmluZGVyX3VpbnRwdHJfdCBwdHI7CgliaW5kZXJfdWludHB0cl90
IGNvb2tpZTsKCXVuc2lnbmVkIGhhc19zdHJvbmdfcmVmOjE7Cgl1bnNpZ25lZCBwZW5kaW5nX3N0cm9u
Z19yZWY6MTsKCXVuc2lnbmVkIGhhc193ZWFrX3JlZjoxOwoJdW5zaWduZWQgcGVuZGluZ193ZWFrX3Jl
ZjoxOwoJdW5zaWduZWQgaGFzX2FzeW5jX3RyYW5zYWN0aW9uOjE7Cgl1bnNpZ25lZCBhY2NlcHRfZmRz
OjE7Cgl1bnNpZ25lZCBtaW5fcHJpb3JpdHk6ODsKCXN0cnVjdCBsaXN0X2hlYWQgYXN5bmNfdG9kbzsK
fTsKCnN0cnVjdCBiaW5kZXJfcmVmX2RlYXRoIHsKCXN0cnVjdCBiaW5kZXJfd29yayB3b3JrOwoJYmlu
ZGVyX3VpbnRwdHJfdCBjb29raWU7Cn07CgpzdHJ1Y3QgYmluZGVyX3JlZiB7CgkvKiBMb29rdXBzIG5l
ZWRlZDogKi8KCS8qICAgbm9kZSArIHByb2MgPT4gcmVmICh0cmFuc2FjdGlvbikgKi8KCS8qICAgZGVz
YyArIHByb2MgPT4gcmVmICh0cmFuc2FjdGlvbiwgaW5jL2RlYyByZWYpICovCgkvKiAgIG5vZGUgPT4g
cmVmcyArIHByb2NzIChwcm9jIGV4aXQpICovCglpbnQgZGVidWdfaWQ7CglzdHJ1Y3QgcmJfbm9kZSBy
Yl9ub2RlX2Rlc2M7CglzdHJ1Y3QgcmJfbm9kZSByYl9ub2RlX25vZGU7CglzdHJ1Y3QgaGxpc3Rfbm9k
ZSBub2RlX2VudHJ5OwoJc3RydWN0IGJpbmRlcl9wcm9jICpwcm9jOwoJc3RydWN0IGJpbmRlcl9ub2Rl
ICpub2RlOwoJdWludDMyX3QgZGVzYzsKCWludCBzdHJvbmc7CglpbnQgd2VhazsKCXN0cnVjdCBiaW5k
ZXJfcmVmX2RlYXRoICpkZWF0aDsKfTsKCnN0cnVjdCBiaW5kZXJfYnVmZmVyIHsKCXN0cnVjdCBsaXN0
X2hlYWQgZW50cnk7IC8qIGZyZWUgYW5kIGFsbG9jYXRlZCBlbnRyaWVzIGJ5IGFkZHJlc3MgKi8KCXN0
cnVjdCByYl9ub2RlIHJiX25vZGU7IC8qIGZyZWUgZW50cnkgYnkgc2l6ZSBvciBhbGxvY2F0ZWQgZW50
cnkgKi8KCQkJCS8qIGJ5IGFkZHJlc3MgKi8KCXVuc2lnbmVkIGZyZWU6MTsKCXVuc2lnbmVkIGFsbG93
X3VzZXJfZnJlZToxOwoJdW5zaWduZWQgYXN5bmNfdHJhbnNhY3Rpb246MTsKCXVuc2lnbmVkIGRlYnVn
X2lkOjI5OwoKCXN0cnVjdCBiaW5kZXJfdHJhbnNhY3Rpb24gKnRyYW5zYWN0aW9uOwoKCXN0cnVjdCBi
aW5kZXJfbm9kZSAqdGFyZ2V0X25vZGU7CglzaXplX3QgZGF0YV9zaXplOwoJc2l6ZV90IG9mZnNldHNf
c2l6ZTsKCXVpbnQ4X3QgZGF0YVswXTsKfTsKCmVudW0gYmluZGVyX2RlZmVycmVkX3N0YXRlIHsKCUJJ
TkRFUl9ERUZFUlJFRF9QVVRfRklMRVMgICAgPSAweDAxLAoJQklOREVSX0RFRkVSUkVEX0ZMVVNIICAg
ICAgICA9IDB4MDIsCglCSU5ERVJfREVGRVJSRURfUkVMRUFTRSAgICAgID0gMHgwNCwKfTsKCnN0cnVj
dCBiaW5kZXJfcHJvYyB7CglzdHJ1Y3QgaGxpc3Rfbm9kZSBwcm9jX25vZGU7CglzdHJ1Y3QgcmJfcm9v
dCB0aHJlYWRzOwoJc3RydWN0IHJiX3Jvb3Qgbm9kZXM7CglzdHJ1Y3QgcmJfcm9vdCByZWZzX2J5X2Rl
c2M7CglzdHJ1Y3QgcmJfcm9vdCByZWZzX2J5X25vZGU7CglpbnQgcGlkOwoJc3RydWN0IHZtX2FyZWFf
c3RydWN0ICp2bWE7CglzdHJ1Y3QgbW1fc3RydWN0ICp2bWFfdm1fbW07CglzdHJ1Y3QgdGFza19zdHJ1
Y3QgKnRzazsKCXN0cnVjdCBmaWxlc19zdHJ1Y3QgKmZpbGVzOwoJc3RydWN0IGhsaXN0X25vZGUgZGVm
ZXJyZWRfd29ya19ub2RlOwoJaW50IGRlZmVycmVkX3dvcms7Cgl2b2lkICpidWZmZXI7CglwdHJkaWZm
X3QgdXNlcl9idWZmZXJfb2Zmc2V0OwoKCXN0cnVjdCBsaXN0X2hlYWQgYnVmZmVyczsKCXN0cnVjdCBy
Yl9yb290IGZyZWVfYnVmZmVyczsKCXN0cnVjdCByYl9yb290IGFsbG9jYXRlZF9idWZmZXJzOwoJc2l6
ZV90IGZyZWVfYXN5bmNfc3BhY2U7CgoJc3RydWN0IHBhZ2UgKipwYWdlczsKCXNpemVfdCBidWZmZXJf
c2l6ZTsKCXVpbnQzMl90IGJ1ZmZlcl9mcmVlOwoJc3RydWN0IGxpc3RfaGVhZCB0b2RvOwoJd2FpdF9x
dWV1ZV9oZWFkX3Qgd2FpdDsKCXN0cnVjdCBiaW5kZXJfc3RhdHMgc3RhdHM7CglzdHJ1Y3QgbGlzdF9o
ZWFkIGRlbGl2ZXJlZF9kZWF0aDsKCWludCBtYXhfdGhyZWFkczsKCWludCByZXF1ZXN0ZWRfdGhyZWFk
czsKCWludCByZXF1ZXN0ZWRfdGhyZWFkc19zdGFydGVkOwoJaW50IHJlYWR5X3RocmVhZHM7Cglsb25n
IGRlZmF1bHRfcHJpb3JpdHk7CglzdHJ1Y3QgZGVudHJ5ICpkZWJ1Z2ZzX2VudHJ5Owp9OwoKZW51bSB7
CglCSU5ERVJfTE9PUEVSX1NUQVRFX1JFR0lTVEVSRUQgID0gMHgwMSwKCUJJTkRFUl9MT09QRVJfU1RB
VEVfRU5URVJFRCAgICAgPSAweDAyLAoJQklOREVSX0xPT1BFUl9TVEFURV9FWElURUQgICAgICA9IDB4
MDQsCglCSU5ERVJfTE9PUEVSX1NUQVRFX0lOVkFMSUQgICAgID0gMHgwOCwKCUJJTkRFUl9MT09QRVJf
U1RBVEVfV0FJVElORyAgICAgPSAweDEwLAoJQklOREVSX0xPT1BFUl9TVEFURV9ORUVEX1JFVFVSTiA9
IDB4MjAKfTsKCnN0cnVjdCBiaW5kZXJfdGhyZWFkIHsKCXN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYzsK
CXN0cnVjdCByYl9ub2RlIHJiX25vZGU7CglpbnQgcGlkOwoJaW50IGxvb3BlcjsKCXN0cnVjdCBiaW5k
ZXJfdHJhbnNhY3Rpb24gKnRyYW5zYWN0aW9uX3N0YWNrOwoJc3RydWN0IGxpc3RfaGVhZCB0b2RvOwoJ
dWludDMyX3QgcmV0dXJuX2Vycm9yOyAvKiBXcml0ZSBmYWlsZWQsIHJldHVybiBlcnJvciBjb2RlIGlu
IHJlYWQgYnVmICovCgl1aW50MzJfdCByZXR1cm5fZXJyb3IyOyAvKiBXcml0ZSBmYWlsZWQsIHJldHVy
biBlcnJvciBjb2RlIGluIHJlYWQgKi8KCQkvKiBidWZmZXIuIFVzZWQgd2hlbiBzZW5kaW5nIGEgcmVw
bHkgdG8gYSBkZWFkIHByb2Nlc3MgdGhhdCAqLwoJCS8qIHdlIGFyZSBhbHNvIHdhaXRpbmcgb24gKi8K
CXdhaXRfcXVldWVfaGVhZF90IHdhaXQ7CglzdHJ1Y3QgYmluZGVyX3N0YXRzIHN0YXRzOwp9OwoKc3Ry
dWN0IGJpbmRlcl90cmFuc2FjdGlvbiB7CglpbnQgZGVidWdfaWQ7CglzdHJ1Y3QgYmluZGVyX3dvcmsg
d29yazsKCXN0cnVjdCBiaW5kZXJfdGhyZWFkICpmcm9tOwoJc3RydWN0IGJpbmRlcl90cmFuc2FjdGlv
biAqZnJvbV9wYXJlbnQ7CglzdHJ1Y3QgYmluZGVyX3Byb2MgKnRvX3Byb2M7CglzdHJ1Y3QgYmluZGVy
X3RocmVhZCAqdG9fdGhyZWFkOwoJc3RydWN0IGJpbmRlcl90cmFuc2FjdGlvbiAqdG9fcGFyZW50OwoJ
dW5zaWduZWQgbmVlZF9yZXBseToxOwoJLyogdW5zaWduZWQgaXNfZGVhZDoxOyAqLwkvKiBub3QgdXNl
ZCBhdCB0aGUgbW9tZW50ICovCgoJc3RydWN0IGJpbmRlcl9idWZmZXIgKmJ1ZmZlcjsKCXVuc2lnbmVk
IGludAljb2RlOwoJdW5zaWduZWQgaW50CWZsYWdzOwoJbG9uZwlwcmlvcml0eTsKCWxvbmcJc2F2ZWRf
cHJpb3JpdHk7CglrdWlkX3QJc2VuZGVyX2V1aWQ7Cn07CgpzdGF0aWMgdm9pZApiaW5kZXJfZGVmZXJf
d29yayhzdHJ1Y3QgYmluZGVyX3Byb2MgKnByb2MsIGVudW0gYmluZGVyX2RlZmVycmVkX3N0YXRlIGRl
ZmVyKTsKCnN0YXRpYyBpbnQgdGFza19nZXRfdW51c2VkX2ZkX2ZsYWdzKHN0cnVjdCBiaW5kZXJfcHJv
YyAqcHJvYywgaW50IGZsYWdzKQp7CglzdHJ1Y3QgZmlsZXNfc3RydWN0ICpmaWxlcyA9IHByb2MtPmZp
bGVzOwoJdW5zaWduZWQgbG9uZyBybGltX2N1cjsKCXVuc2lnbmVkIGxvbmcgaXJxczsKCglpZiAoZmls
ZXMgPT0gTlVMTCkKCQlyZXR1cm4gLUVTUkNIOwoKCWlmICghbG9ja190YXNrX3NpZ2hhbmQocHJvYy0+
dHNrLCAmaXJxcykpCgkJcmV0dXJuIC1FTUZJTEU7CgoJcmxpbV9jdXIgPSB0YXNrX3JsaW1pdChwcm9j
LT50c2ssIFJMSU1JVF9OT0ZJTEUpOwoJdW5sb2NrX3Rhc2tfc2lnaGFuZChwcm9jLT50c2ssICZpcnFz
KTsKCglyZXR1cm4gX19hbGxvY19mZChmaWxlcywgMCwgcmxpbV9jdXIsIGZsYWdzKTsKfQoKLyoKICog
Y29waWVkIGZyb20gZmRfaW5zdGFsbAogKi8Kc3RhdGljIHZvaWQgdGFza19mZF9pbnN0YWxsKAoJc3Ry
dWN0IGJpbmRlcl9wcm9jICpwcm9jLCB1bnNpZ25lZCBpbnQgZmQsIHN0cnVjdCBmaWxlICpmaWxlKQp7
CglpZiAocHJvYy0+ZmlsZXMpCgkJX19mZF9pbnN0YWxsKHByb2MtPmZpbGVzLCBmZCwgZmlsZSk7Cn0K
Ci8qCiAqIGNvcGllZCBmcm9tIHN5c19jbG9zZQogKi8Kc3RhdGljIGxvbmcgdGFza19jbG9zZV9mZChz
dHJ1Y3QgYmluZGVyX3Byb2MgKnByb2MsIHVuc2lnbmVkIGludCBmZCkKewoJaW50IHJldHZhbDsKCglp
ZiAocHJvYy0+ZmlsZXMgPT0gTlVMTCkKCQlyZXR1cm4gLUVTUkNIOwoKCXJldHZhbCA9IF9fY2xvc2Vf
ZmQocHJvYy0+ZmlsZXMsIGZkKTsKCS8qIGNhbid0IHJlc3RhcnQgY2xvc2Ugc3lzY2FsbCBiZWNhdXNl
IGZpbGUgdGFibGUgZW50cnkgd2FzIGNsZWFyZWQgKi8KCWlmICh1bmxpa2VseShyZXR2YWwgPT0gLUVS
RVNUQVJUU1lTIHx8CgkJICAgICByZXR2YWwgPT0gLUVSRVNUQVJUTk9JTlRSIHx8CgkJICAgICByZXR2
YWwgPT0gLUVSRVNUQVJUTk9IQU5EIHx8CgkJICAgICByZXR2YWwgPT0gLUVSRVNUQVJUX1JFU1RBUlRC
TE9DSykpCgkJcmV0dmFsID0gLUVJTlRSOwoKCXJldHVybiByZXR2YWw7Cn0KCnN0YXRpYyBpbmxpbmUg
dm9pZCBiaW5kZXJfbG9jayhjb25zdCBjaGFyICp0YWcpCnsKCXRyYWNlX2JpbmRlcl9sb2NrKHRhZyk7
CgltdXRleF9sb2NrKCZiaW5kZXJfbWFpbl9sb2NrKTsKCXRyYWNlX2JpbmRlcl9sb2NrZWQodGFnKTsK
fQoKc3RhdGljIGlubGluZSB2b2lkIGJpbmRlcl91bmxvY2soY29uc3QgY2hhciAqdGFnKQp7Cgl0cmFj
ZV9iaW5kZXJfdW5sb2NrKHRhZyk7CgltdXRleF91bmxvY2soJmJpbmRlcl9tYWluX2xvY2spOwp9Cgpz
dGF0aWMgdm9pZCBiaW5kZXJfc2V0X25pY2UobG9uZyBuaWNlKQp7Cglsb25nIG1pbl9uaWNlOwoKCWlm
IChjYW5fbmljZShjdXJyZW50LCBuaWNlKSkgewoJCXNldF91c2VyX25pY2UoY3VycmVudCwgbmljZSk7
CgkJcmV0dXJuOwoJfQoJbWluX25pY2UgPSBybGltaXRfdG9fbmljZShjdXJyZW50LT5zaWduYWwtPnJs
aW1bUkxJTUlUX05JQ0VdLnJsaW1fY3VyKTsKCWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfUFJJT1JJ
VFlfQ0FQLAoJCSAgICAgIiVkOiBuaWNlIHZhbHVlICVsZCBub3QgYWxsb3dlZCB1c2UgJWxkIGluc3Rl
YWRcbiIsCgkJICAgICAgY3VycmVudC0+cGlkLCBuaWNlLCBtaW5fbmljZSk7CglzZXRfdXNlcl9uaWNl
KGN1cnJlbnQsIG1pbl9uaWNlKTsKCWlmIChtaW5fbmljZSA8PSBNQVhfTklDRSkKCQlyZXR1cm47Cgli
aW5kZXJfdXNlcl9lcnJvcigiJWQgUkxJTUlUX05JQ0Ugbm90IHNldFxuIiwgY3VycmVudC0+cGlkKTsK
fQoKc3RhdGljIHNpemVfdCBiaW5kZXJfYnVmZmVyX3NpemUoc3RydWN0IGJpbmRlcl9wcm9jICpwcm9j
LAoJCQkJIHN0cnVjdCBiaW5kZXJfYnVmZmVyICpidWZmZXIpCnsKCWlmIChsaXN0X2lzX2xhc3QoJmJ1
ZmZlci0+ZW50cnksICZwcm9jLT5idWZmZXJzKSkKCQlyZXR1cm4gcHJvYy0+YnVmZmVyICsgcHJvYy0+
YnVmZmVyX3NpemUgLSAodm9pZCAqKWJ1ZmZlci0+ZGF0YTsKCXJldHVybiAoc2l6ZV90KWxpc3RfZW50
cnkoYnVmZmVyLT5lbnRyeS5uZXh0LAoJCQkgIHN0cnVjdCBiaW5kZXJfYnVmZmVyLCBlbnRyeSkgLSAo
c2l6ZV90KWJ1ZmZlci0+ZGF0YTsKfQoKc3RhdGljIHZvaWQgYmluZGVyX2luc2VydF9mcmVlX2J1ZmZl
cihzdHJ1Y3QgYmluZGVyX3Byb2MgKnByb2MsCgkJCQkgICAgICBzdHJ1Y3QgYmluZGVyX2J1ZmZlciAq
bmV3X2J1ZmZlcikKewoJc3RydWN0IHJiX25vZGUgKipwID0gJnByb2MtPmZyZWVfYnVmZmVycy5yYl9u
b2RlOwoJc3RydWN0IHJiX25vZGUgKnBhcmVudCA9IE5VTEw7CglzdHJ1Y3QgYmluZGVyX2J1ZmZlciAq
YnVmZmVyOwoJc2l6ZV90IGJ1ZmZlcl9zaXplOwoJc2l6ZV90IG5ld19idWZmZXJfc2l6ZTsKCglCVUdf
T04oIW5ld19idWZmZXItPmZyZWUpOwoKCW5ld19idWZmZXJfc2l6ZSA9IGJpbmRlcl9idWZmZXJfc2l6
ZShwcm9jLCBuZXdfYnVmZmVyKTsKCgliaW5kZXJfZGVidWcoQklOREVSX0RFQlVHX0JVRkZFUl9BTExP
QywKCQkgICAgICIlZDogYWRkIGZyZWUgYnVmZmVyLCBzaXplICV6ZCwgYXQgJXBcbiIsCgkJICAgICAg
cHJvYy0+cGlkLCBuZXdfYnVmZmVyX3NpemUsIG5ld19idWZmZXIpOwoKCXdoaWxlICgqcCkgewoJCXBh
cmVudCA9ICpwOwoJCWJ1ZmZlciA9IHJiX2VudHJ5KHBhcmVudCwgc3RydWN0IGJpbmRlcl9idWZmZXIs
IHJiX25vZGUpOwoJCUJVR19PTighYnVmZmVyLT5mcmVlKTsKCgkJYnVmZmVyX3NpemUgPSBiaW5kZXJf
YnVmZmVyX3NpemUocHJvYywgYnVmZmVyKTsKCgkJaWYgKG5ld19idWZmZXJfc2l6ZSA8IGJ1ZmZlcl9z
aXplKQoJCQlwID0gJnBhcmVudC0+cmJfbGVmdDsKCQllbHNlCgkJCXAgPSAmcGFyZW50LT5yYl9yaWdo
dDsKCX0KCXJiX2xpbmtfbm9kZSgmbmV3X2J1ZmZlci0+cmJfbm9kZSwgcGFyZW50LCBwKTsKCXJiX2lu
c2VydF9jb2xvcigmbmV3X2J1ZmZlci0+cmJfbm9kZSwgJnByb2MtPmZyZWVfYnVmZmVycyk7Cn0KCnN0
YXRpYyB2b2lkIGJpbmRlcl9pbnNlcnRfYWxsb2NhdGVkX2J1ZmZlcihzdHJ1Y3QgYmluZGVyX3Byb2Mg
KnByb2MsCgkJCQkJICAgc3RydWN0IGJpbmRlcl9idWZmZXIgKm5ld19idWZmZXIpCnsKCXN0cnVjdCBy
Yl9ub2RlICoqcCA9ICZwcm9jLT5hbGxvY2F0ZWRfYnVmZmVycy5yYl9ub2RlOwoJc3RydWN0IHJiX25v
ZGUgKnBhcmVudCA9IE5VTEw7CglzdHJ1Y3QgYmluZGVyX2J1ZmZlciAqYnVmZmVyOwoKCUJVR19PTihu
ZXdfYnVmZmVyLT5mcmVlKTsKCgl3aGlsZSAoKnApIHsKCQlwYXJlbnQgPSAqcDsKCQlidWZmZXIgPSBy
Yl9lbnRyeShwYXJlbnQsIHN0cnVjdCBiaW5kZXJfYnVmZmVyLCByYl9ub2RlKTsKCQlCVUdfT04oYnVm
ZmVyLT5mcmVlKTsKCgkJaWYgKG5ld19idWZmZXIgPCBidWZmZXIpCgkJCXAgPSAmcGFyZW50LT5yYl9s
ZWZ0OwoJCWVsc2UgaWYgKG5ld19idWZmZXIgPiBidWZmZXIpCgkJCXAgPSAmcGFyZW50LT5yYl9yaWdo
dDsKCQllbHNlCgkJCUJVRygpOwoJfQoJcmJfbGlua19ub2RlKCZuZXdfYnVmZmVyLT5yYl9ub2RlLCBw
YXJlbnQsIHApOwoJcmJfaW5zZXJ0X2NvbG9yKCZuZXdfYnVmZmVyLT5yYl9ub2RlLCAmcHJvYy0+YWxs
b2NhdGVkX2J1ZmZlcnMpOwp9CgpzdGF0aWMgc3RydWN0IGJpbmRlcl9idWZmZXIgKmJpbmRlcl9idWZm
ZXJfbG9va3VwKHN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYywKCQkJCQkJICB1aW50cHRyX3QgdXNlcl9w
dHIpCnsKCXN0cnVjdCByYl9ub2RlICpuID0gcHJvYy0+YWxsb2NhdGVkX2J1ZmZlcnMucmJfbm9kZTsK
CXN0cnVjdCBiaW5kZXJfYnVmZmVyICpidWZmZXI7CglzdHJ1Y3QgYmluZGVyX2J1ZmZlciAqa2Vybl9w
dHI7CgoJa2Vybl9wdHIgPSAoc3RydWN0IGJpbmRlcl9idWZmZXIgKikodXNlcl9wdHIgLSBwcm9jLT51
c2VyX2J1ZmZlcl9vZmZzZXQKCQktIG9mZnNldG9mKHN0cnVjdCBiaW5kZXJfYnVmZmVyLCBkYXRhKSk7
CgoJd2hpbGUgKG4pIHsKCQlidWZmZXIgPSByYl9lbnRyeShuLCBzdHJ1Y3QgYmluZGVyX2J1ZmZlciwg
cmJfbm9kZSk7CgkJQlVHX09OKGJ1ZmZlci0+ZnJlZSk7CgoJCWlmIChrZXJuX3B0ciA8IGJ1ZmZlcikK
CQkJbiA9IG4tPnJiX2xlZnQ7CgkJZWxzZSBpZiAoa2Vybl9wdHIgPiBidWZmZXIpCgkJCW4gPSBuLT5y
Yl9yaWdodDsKCQllbHNlCgkJCXJldHVybiBidWZmZXI7Cgl9CglyZXR1cm4gTlVMTDsKfQoKc3RhdGlj
IGludCBiaW5kZXJfdXBkYXRlX3BhZ2VfcmFuZ2Uoc3RydWN0IGJpbmRlcl9wcm9jICpwcm9jLCBpbnQg
YWxsb2NhdGUsCgkJCQkgICAgdm9pZCAqc3RhcnQsIHZvaWQgKmVuZCwKCQkJCSAgICBzdHJ1Y3Qgdm1f
YXJlYV9zdHJ1Y3QgKnZtYSkKewoJdm9pZCAqcGFnZV9hZGRyOwoJdW5zaWduZWQgbG9uZyB1c2VyX3Bh
Z2VfYWRkcjsKCXN0cnVjdCBwYWdlICoqcGFnZTsKCXN0cnVjdCBtbV9zdHJ1Y3QgKm1tOwoKCWJpbmRl
cl9kZWJ1ZyhCSU5ERVJfREVCVUdfQlVGRkVSX0FMTE9DLAoJCSAgICAgIiVkOiAlcyBwYWdlcyAlcC0l
cFxuIiwgcHJvYy0+cGlkLAoJCSAgICAgYWxsb2NhdGUgPyAiYWxsb2NhdGUiIDogImZyZWUiLCBzdGFy
dCwgZW5kKTsKCglpZiAoZW5kIDw9IHN0YXJ0KQoJCXJldHVybiAwOwoKCXRyYWNlX2JpbmRlcl91cGRh
dGVfcGFnZV9yYW5nZShwcm9jLCBhbGxvY2F0ZSwgc3RhcnQsIGVuZCk7CgoJaWYgKHZtYSkKCQltbSA9
IE5VTEw7CgllbHNlCgkJbW0gPSBnZXRfdGFza19tbShwcm9jLT50c2spOwoKCWlmIChtbSkgewoJCWRv
d25fd3JpdGUoJm1tLT5tbWFwX3NlbSk7CgkJdm1hID0gcHJvYy0+dm1hOwoJCWlmICh2bWEgJiYgbW0g
IT0gcHJvYy0+dm1hX3ZtX21tKSB7CgkJCXByX2VycigiJWQ6IHZtYSBtbSBhbmQgdGFzayBtbSBtaXNt
YXRjaFxuIiwKCQkJCXByb2MtPnBpZCk7CgkJCXZtYSA9IE5VTEw7CgkJfQoJfQoKCWlmIChhbGxvY2F0
ZSA9PSAwKQoJCWdvdG8gZnJlZV9yYW5nZTsKCglpZiAodm1hID09IE5VTEwpIHsKCQlwcl9lcnIoIiVk
OiBiaW5kZXJfYWxsb2NfYnVmIGZhaWxlZCB0byBtYXAgcGFnZXMgaW4gdXNlcnNwYWNlLCBubyB2bWFc
biIsCgkJCXByb2MtPnBpZCk7CgkJZ290byBlcnJfbm9fdm1hOwoJfQoKCWZvciAocGFnZV9hZGRyID0g
c3RhcnQ7IHBhZ2VfYWRkciA8IGVuZDsgcGFnZV9hZGRyICs9IFBBR0VfU0laRSkgewoJCWludCByZXQ7
CgoJCXBhZ2UgPSAmcHJvYy0+cGFnZXNbKHBhZ2VfYWRkciAtIHByb2MtPmJ1ZmZlcikgLyBQQUdFX1NJ
WkVdOwoKCQlCVUdfT04oKnBhZ2UpOwoJCSpwYWdlID0gYWxsb2NfcGFnZShHRlBfS0VSTkVMIHwgX19H
RlBfSElHSE1FTSB8IF9fR0ZQX1pFUk8pOwoJCWlmICgqcGFnZSA9PSBOVUxMKSB7CgkJCXByX2Vycigi
JWQ6IGJpbmRlcl9hbGxvY19idWYgZmFpbGVkIGZvciBwYWdlIGF0ICVwXG4iLAoJCQkJcHJvYy0+cGlk
LCBwYWdlX2FkZHIpOwoJCQlnb3RvIGVycl9hbGxvY19wYWdlX2ZhaWxlZDsKCQl9CgkJcmV0ID0gbWFw
X2tlcm5lbF9yYW5nZV9ub2ZsdXNoKCh1bnNpZ25lZCBsb25nKXBhZ2VfYWRkciwKCQkJCQlQQUdFX1NJ
WkUsIFBBR0VfS0VSTkVMLCBwYWdlKTsKCQlmbHVzaF9jYWNoZV92bWFwKCh1bnNpZ25lZCBsb25nKXBh
Z2VfYWRkciwKCQkJCSh1bnNpZ25lZCBsb25nKXBhZ2VfYWRkciArIFBBR0VfU0laRSk7CgkJaWYgKHJl
dCAhPSAxKSB7CgkJCXByX2VycigiJWQ6IGJpbmRlcl9hbGxvY19idWYgZmFpbGVkIHRvIG1hcCBwYWdl
IGF0ICVwIGluIGtlcm5lbFxuIiwKCQkJICAgICAgIHByb2MtPnBpZCwgcGFnZV9hZGRyKTsKCQkJZ290
byBlcnJfbWFwX2tlcm5lbF9mYWlsZWQ7CgkJfQoJCXVzZXJfcGFnZV9hZGRyID0KCQkJKHVpbnRwdHJf
dClwYWdlX2FkZHIgKyBwcm9jLT51c2VyX2J1ZmZlcl9vZmZzZXQ7CgkJcmV0ID0gdm1faW5zZXJ0X3Bh
Z2Uodm1hLCB1c2VyX3BhZ2VfYWRkciwgcGFnZVswXSk7CgkJaWYgKHJldCkgewoJCQlwcl9lcnIoIiVk
OiBiaW5kZXJfYWxsb2NfYnVmIGZhaWxlZCB0byBtYXAgcGFnZSBhdCAlbHggaW4gdXNlcnNwYWNlXG4i
LAoJCQkgICAgICAgcHJvYy0+cGlkLCB1c2VyX3BhZ2VfYWRkcik7CgkJCWdvdG8gZXJyX3ZtX2luc2Vy
dF9wYWdlX2ZhaWxlZDsKCQl9CgkJLyogdm1faW5zZXJ0X3BhZ2UgZG9lcyBub3Qgc2VlbSB0byBpbmNy
ZW1lbnQgdGhlIHJlZmNvdW50ICovCgl9CglpZiAobW0pIHsKCQl1cF93cml0ZSgmbW0tPm1tYXBfc2Vt
KTsKCQltbXB1dChtbSk7Cgl9CglyZXR1cm4gMDsKCmZyZWVfcmFuZ2U6Cglmb3IgKHBhZ2VfYWRkciA9
IGVuZCAtIFBBR0VfU0laRTsgcGFnZV9hZGRyID49IHN0YXJ0OwoJICAgICBwYWdlX2FkZHIgLT0gUEFH
RV9TSVpFKSB7CgkJcGFnZSA9ICZwcm9jLT5wYWdlc1socGFnZV9hZGRyIC0gcHJvYy0+YnVmZmVyKSAv
IFBBR0VfU0laRV07CgkJaWYgKHZtYSkKCQkJemFwX3BhZ2VfcmFuZ2Uodm1hLCAodWludHB0cl90KXBh
Z2VfYWRkciArCgkJCQlwcm9jLT51c2VyX2J1ZmZlcl9vZmZzZXQsIFBBR0VfU0laRSwgTlVMTCk7CmVy
cl92bV9pbnNlcnRfcGFnZV9mYWlsZWQ6CgkJdW5tYXBfa2VybmVsX3JhbmdlKCh1bnNpZ25lZCBsb25n
KXBhZ2VfYWRkciwgUEFHRV9TSVpFKTsKZXJyX21hcF9rZXJuZWxfZmFpbGVkOgoJCV9fZnJlZV9wYWdl
KCpwYWdlKTsKCQkqcGFnZSA9IE5VTEw7CmVycl9hbGxvY19wYWdlX2ZhaWxlZDoKCQk7Cgl9CmVycl9u
b192bWE6CglpZiAobW0pIHsKCQl1cF93cml0ZSgmbW0tPm1tYXBfc2VtKTsKCQltbXB1dChtbSk7Cgl9
CglyZXR1cm4gLUVOT01FTTsKfQoKc3RhdGljIHN0cnVjdCBiaW5kZXJfYnVmZmVyICpiaW5kZXJfYWxs
b2NfYnVmKHN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYywKCQkJCQkgICAgICBzaXplX3QgZGF0YV9zaXpl
LAoJCQkJCSAgICAgIHNpemVfdCBvZmZzZXRzX3NpemUsIGludCBpc19hc3luYykKewoJc3RydWN0IHJi
X25vZGUgKm4gPSBwcm9jLT5mcmVlX2J1ZmZlcnMucmJfbm9kZTsKCXN0cnVjdCBiaW5kZXJfYnVmZmVy
ICpidWZmZXI7CglzaXplX3QgYnVmZmVyX3NpemU7CglzdHJ1Y3QgcmJfbm9kZSAqYmVzdF9maXQgPSBO
VUxMOwoJdm9pZCAqaGFzX3BhZ2VfYWRkcjsKCXZvaWQgKmVuZF9wYWdlX2FkZHI7CglzaXplX3Qgc2l6
ZTsKCglpZiAocHJvYy0+dm1hID09IE5VTEwpIHsKCQlwcl9lcnIoIiVkOiBiaW5kZXJfYWxsb2NfYnVm
LCBubyB2bWFcbiIsCgkJICAgICAgIHByb2MtPnBpZCk7CgkJcmV0dXJuIE5VTEw7Cgl9CgoJc2l6ZSA9
IEFMSUdOKGRhdGFfc2l6ZSwgc2l6ZW9mKHZvaWQgKikpICsKCQlBTElHTihvZmZzZXRzX3NpemUsIHNp
emVvZih2b2lkICopKTsKCglpZiAoc2l6ZSA8IGRhdGFfc2l6ZSB8fCBzaXplIDwgb2Zmc2V0c19zaXpl
KSB7CgkJYmluZGVyX3VzZXJfZXJyb3IoIiVkOiBnb3QgdHJhbnNhY3Rpb24gd2l0aCBpbnZhbGlkIHNp
emUgJXpkLSV6ZFxuIiwKCQkJCXByb2MtPnBpZCwgZGF0YV9zaXplLCBvZmZzZXRzX3NpemUpOwoJCXJl
dHVybiBOVUxMOwoJfQoKCWlmIChpc19hc3luYyAmJgoJICAgIHByb2MtPmZyZWVfYXN5bmNfc3BhY2Ug
PCBzaXplICsgc2l6ZW9mKHN0cnVjdCBiaW5kZXJfYnVmZmVyKSkgewoJCWJpbmRlcl9kZWJ1ZyhCSU5E
RVJfREVCVUdfQlVGRkVSX0FMTE9DLAoJCQkgICAgICIlZDogYmluZGVyX2FsbG9jX2J1ZiBzaXplICV6
ZCBmYWlsZWQsIG5vIGFzeW5jIHNwYWNlIGxlZnRcbiIsCgkJCSAgICAgIHByb2MtPnBpZCwgc2l6ZSk7
CgkJcmV0dXJuIE5VTEw7Cgl9CgoJd2hpbGUgKG4pIHsKCQlidWZmZXIgPSByYl9lbnRyeShuLCBzdHJ1
Y3QgYmluZGVyX2J1ZmZlciwgcmJfbm9kZSk7CgkJQlVHX09OKCFidWZmZXItPmZyZWUpOwoJCWJ1ZmZl
cl9zaXplID0gYmluZGVyX2J1ZmZlcl9zaXplKHByb2MsIGJ1ZmZlcik7CgoJCWlmIChzaXplIDwgYnVm
ZmVyX3NpemUpIHsKCQkJYmVzdF9maXQgPSBuOwoJCQluID0gbi0+cmJfbGVmdDsKCQl9IGVsc2UgaWYg
KHNpemUgPiBidWZmZXJfc2l6ZSkKCQkJbiA9IG4tPnJiX3JpZ2h0OwoJCWVsc2UgewoJCQliZXN0X2Zp
dCA9IG47CgkJCWJyZWFrOwoJCX0KCX0KCWlmIChiZXN0X2ZpdCA9PSBOVUxMKSB7CgkJcHJfZXJyKCIl
ZDogYmluZGVyX2FsbG9jX2J1ZiBzaXplICV6ZCBmYWlsZWQsIG5vIGFkZHJlc3Mgc3BhY2VcbiIsCgkJ
CXByb2MtPnBpZCwgc2l6ZSk7CgkJcmV0dXJuIE5VTEw7Cgl9CglpZiAobiA9PSBOVUxMKSB7CgkJYnVm
ZmVyID0gcmJfZW50cnkoYmVzdF9maXQsIHN0cnVjdCBiaW5kZXJfYnVmZmVyLCByYl9ub2RlKTsKCQli
dWZmZXJfc2l6ZSA9IGJpbmRlcl9idWZmZXJfc2l6ZShwcm9jLCBidWZmZXIpOwoJfQoKCWJpbmRlcl9k
ZWJ1ZyhCSU5ERVJfREVCVUdfQlVGRkVSX0FMTE9DLAoJCSAgICAgIiVkOiBiaW5kZXJfYWxsb2NfYnVm
IHNpemUgJXpkIGdvdCBidWZmZXIgJXAgc2l6ZSAlemRcbiIsCgkJICAgICAgcHJvYy0+cGlkLCBzaXpl
LCBidWZmZXIsIGJ1ZmZlcl9zaXplKTsKCgloYXNfcGFnZV9hZGRyID0KCQkodm9pZCAqKSgoKHVpbnRw
dHJfdClidWZmZXItPmRhdGEgKyBidWZmZXJfc2l6ZSkgJiBQQUdFX01BU0spOwoJaWYgKG4gPT0gTlVM
TCkgewoJCWlmIChzaXplICsgc2l6ZW9mKHN0cnVjdCBiaW5kZXJfYnVmZmVyKSArIDQgPj0gYnVmZmVy
X3NpemUpCgkJCWJ1ZmZlcl9zaXplID0gc2l6ZTsgLyogbm8gcm9vbSBmb3Igb3RoZXIgYnVmZmVycyAq
LwoJCWVsc2UKCQkJYnVmZmVyX3NpemUgPSBzaXplICsgc2l6ZW9mKHN0cnVjdCBiaW5kZXJfYnVmZmVy
KTsKCX0KCWVuZF9wYWdlX2FkZHIgPQoJCSh2b2lkICopUEFHRV9BTElHTigodWludHB0cl90KWJ1ZmZl
ci0+ZGF0YSArIGJ1ZmZlcl9zaXplKTsKCWlmIChlbmRfcGFnZV9hZGRyID4gaGFzX3BhZ2VfYWRkcikK
CQllbmRfcGFnZV9hZGRyID0gaGFzX3BhZ2VfYWRkcjsKCWlmIChiaW5kZXJfdXBkYXRlX3BhZ2VfcmFu
Z2UocHJvYywgMSwKCSAgICAodm9pZCAqKVBBR0VfQUxJR04oKHVpbnRwdHJfdClidWZmZXItPmRhdGEp
LCBlbmRfcGFnZV9hZGRyLCBOVUxMKSkKCQlyZXR1cm4gTlVMTDsKCglyYl9lcmFzZShiZXN0X2ZpdCwg
JnByb2MtPmZyZWVfYnVmZmVycyk7CglidWZmZXItPmZyZWUgPSAwOwoJYmluZGVyX2luc2VydF9hbGxv
Y2F0ZWRfYnVmZmVyKHByb2MsIGJ1ZmZlcik7CglpZiAoYnVmZmVyX3NpemUgIT0gc2l6ZSkgewoJCXN0
cnVjdCBiaW5kZXJfYnVmZmVyICpuZXdfYnVmZmVyID0gKHZvaWQgKilidWZmZXItPmRhdGEgKyBzaXpl
OwoKCQlsaXN0X2FkZCgmbmV3X2J1ZmZlci0+ZW50cnksICZidWZmZXItPmVudHJ5KTsKCQluZXdfYnVm
ZmVyLT5mcmVlID0gMTsKCQliaW5kZXJfaW5zZXJ0X2ZyZWVfYnVmZmVyKHByb2MsIG5ld19idWZmZXIp
OwoJfQoJYmluZGVyX2RlYnVnKEJJTkRFUl9ERUJVR19CVUZGRVJfQUxMT0MsCgkJICAgICAiJWQ6IGJp
bmRlcl9hbGxvY19idWYgc2l6ZSAlemQgZ290ICVwXG4iLAoJCSAgICAgIHByb2MtPnBpZCwgc2l6ZSwg
YnVmZmVyKTsKCWJ1ZmZlci0+ZGF0YV9zaXplID0gZGF0YV9zaXplOwoJYnVmZmVyLT5vZmZzZXRzX3Np
emUgPSBvZmZzZXRzX3NpemU7CglidWZmZXItPmFzeW5jX3RyYW5zYWN0aW9uID0gaXNfYXN5bmM7Cglp
ZiAoaXNfYXN5bmMpIHsKCQlwcm9jLT5mcmVlX2FzeW5jX3NwYWNlIC09IHNpemUgKyBzaXplb2Yoc3Ry
dWN0IGJpbmRlcl9idWZmZXIpOwoJCWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfQlVGRkVSX0FMTE9D
X0FTWU5DLAoJCQkgICAgICIlZDogYmluZGVyX2FsbG9jX2J1ZiBzaXplICV6ZCBhc3luYyBmcmVlICV6
ZFxuIiwKCQkJICAgICAgcHJvYy0+cGlkLCBzaXplLCBwcm9jLT5mcmVlX2FzeW5jX3NwYWNlKTsKCX0K
CglyZXR1cm4gYnVmZmVyOwp9CgpzdGF0aWMgdm9pZCAqYnVmZmVyX3N0YXJ0X3BhZ2Uoc3RydWN0IGJp
bmRlcl9idWZmZXIgKmJ1ZmZlcikKewoJcmV0dXJuICh2b2lkICopKCh1aW50cHRyX3QpYnVmZmVyICYg
UEFHRV9NQVNLKTsKfQoKc3RhdGljIHZvaWQgKmJ1ZmZlcl9lbmRfcGFnZShzdHJ1Y3QgYmluZGVyX2J1
ZmZlciAqYnVmZmVyKQp7CglyZXR1cm4gKHZvaWQgKikoKCh1aW50cHRyX3QpKGJ1ZmZlciArIDEpIC0g
MSkgJiBQQUdFX01BU0spOwp9CgpzdGF0aWMgdm9pZCBiaW5kZXJfZGVsZXRlX2ZyZWVfYnVmZmVyKHN0
cnVjdCBiaW5kZXJfcHJvYyAqcHJvYywKCQkJCSAgICAgIHN0cnVjdCBiaW5kZXJfYnVmZmVyICpidWZm
ZXIpCnsKCXN0cnVjdCBiaW5kZXJfYnVmZmVyICpwcmV2LCAqbmV4dCA9IE5VTEw7CglpbnQgZnJlZV9w
YWdlX2VuZCA9IDE7CglpbnQgZnJlZV9wYWdlX3N0YXJ0ID0gMTsKCglCVUdfT04ocHJvYy0+YnVmZmVy
cy5uZXh0ID09ICZidWZmZXItPmVudHJ5KTsKCXByZXYgPSBsaXN0X2VudHJ5KGJ1ZmZlci0+ZW50cnku
cHJldiwgc3RydWN0IGJpbmRlcl9idWZmZXIsIGVudHJ5KTsKCUJVR19PTighcHJldi0+ZnJlZSk7Cglp
ZiAoYnVmZmVyX2VuZF9wYWdlKHByZXYpID09IGJ1ZmZlcl9zdGFydF9wYWdlKGJ1ZmZlcikpIHsKCQlm
cmVlX3BhZ2Vfc3RhcnQgPSAwOwoJCWlmIChidWZmZXJfZW5kX3BhZ2UocHJldikgPT0gYnVmZmVyX2Vu
ZF9wYWdlKGJ1ZmZlcikpCgkJCWZyZWVfcGFnZV9lbmQgPSAwOwoJCWJpbmRlcl9kZWJ1ZyhCSU5ERVJf
REVCVUdfQlVGRkVSX0FMTE9DLAoJCQkgICAgICIlZDogbWVyZ2UgZnJlZSwgYnVmZmVyICVwIHNoYXJl
IHBhZ2Ugd2l0aCAlcFxuIiwKCQkJICAgICAgcHJvYy0+cGlkLCBidWZmZXIsIHByZXYpOwoJfQoKCWlm
ICghbGlzdF9pc19sYXN0KCZidWZmZXItPmVudHJ5LCAmcHJvYy0+YnVmZmVycykpIHsKCQluZXh0ID0g
bGlzdF9lbnRyeShidWZmZXItPmVudHJ5Lm5leHQsCgkJCQkgIHN0cnVjdCBiaW5kZXJfYnVmZmVyLCBl
bnRyeSk7CgkJaWYgKGJ1ZmZlcl9zdGFydF9wYWdlKG5leHQpID09IGJ1ZmZlcl9lbmRfcGFnZShidWZm
ZXIpKSB7CgkJCWZyZWVfcGFnZV9lbmQgPSAwOwoJCQlpZiAoYnVmZmVyX3N0YXJ0X3BhZ2UobmV4dCkg
PT0KCQkJICAgIGJ1ZmZlcl9zdGFydF9wYWdlKGJ1ZmZlcikpCgkJCQlmcmVlX3BhZ2Vfc3RhcnQgPSAw
OwoJCQliaW5kZXJfZGVidWcoQklOREVSX0RFQlVHX0JVRkZFUl9BTExPQywKCQkJCSAgICAgIiVkOiBt
ZXJnZSBmcmVlLCBidWZmZXIgJXAgc2hhcmUgcGFnZSB3aXRoICVwXG4iLAoJCQkJICAgICAgcHJvYy0+
cGlkLCBidWZmZXIsIHByZXYpOwoJCX0KCX0KCWxpc3RfZGVsKCZidWZmZXItPmVudHJ5KTsKCWlmIChm
cmVlX3BhZ2Vfc3RhcnQgfHwgZnJlZV9wYWdlX2VuZCkgewoJCWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVC
VUdfQlVGRkVSX0FMTE9DLAoJCQkgICAgICIlZDogbWVyZ2UgZnJlZSwgYnVmZmVyICVwIGRvIG5vdCBz
aGFyZSBwYWdlJXMlcyB3aXRoICVwIG9yICVwXG4iLAoJCQkgICAgIHByb2MtPnBpZCwgYnVmZmVyLCBm
cmVlX3BhZ2Vfc3RhcnQgPyAiIiA6ICIgZW5kIiwKCQkJICAgICBmcmVlX3BhZ2VfZW5kID8gIiIgOiAi
IHN0YXJ0IiwgcHJldiwgbmV4dCk7CgkJYmluZGVyX3VwZGF0ZV9wYWdlX3JhbmdlKHByb2MsIDAsIGZy
ZWVfcGFnZV9zdGFydCA/CgkJCWJ1ZmZlcl9zdGFydF9wYWdlKGJ1ZmZlcikgOiBidWZmZXJfZW5kX3Bh
Z2UoYnVmZmVyKSwKCQkJKGZyZWVfcGFnZV9lbmQgPyBidWZmZXJfZW5kX3BhZ2UoYnVmZmVyKSA6CgkJ
CWJ1ZmZlcl9zdGFydF9wYWdlKGJ1ZmZlcikpICsgUEFHRV9TSVpFLCBOVUxMKTsKCX0KfQoKc3RhdGlj
IHZvaWQgYmluZGVyX2ZyZWVfYnVmKHN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYywKCQkJICAgIHN0cnVj
dCBiaW5kZXJfYnVmZmVyICpidWZmZXIpCnsKCXNpemVfdCBzaXplLCBidWZmZXJfc2l6ZTsKCglidWZm
ZXJfc2l6ZSA9IGJpbmRlcl9idWZmZXJfc2l6ZShwcm9jLCBidWZmZXIpOwoKCXNpemUgPSBBTElHTihi
dWZmZXItPmRhdGFfc2l6ZSwgc2l6ZW9mKHZvaWQgKikpICsKCQlBTElHTihidWZmZXItPm9mZnNldHNf
c2l6ZSwgc2l6ZW9mKHZvaWQgKikpOwoKCWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfQlVGRkVSX0FM
TE9DLAoJCSAgICAgIiVkOiBiaW5kZXJfZnJlZV9idWYgJXAgc2l6ZSAlemQgYnVmZmVyX3NpemUgJXpk
XG4iLAoJCSAgICAgIHByb2MtPnBpZCwgYnVmZmVyLCBzaXplLCBidWZmZXJfc2l6ZSk7CgoJQlVHX09O
KGJ1ZmZlci0+ZnJlZSk7CglCVUdfT04oc2l6ZSA+IGJ1ZmZlcl9zaXplKTsKCUJVR19PTihidWZmZXIt
PnRyYW5zYWN0aW9uICE9IE5VTEwpOwoJQlVHX09OKCh2b2lkICopYnVmZmVyIDwgcHJvYy0+YnVmZmVy
KTsKCUJVR19PTigodm9pZCAqKWJ1ZmZlciA+IHByb2MtPmJ1ZmZlciArIHByb2MtPmJ1ZmZlcl9zaXpl
KTsKCglpZiAoYnVmZmVyLT5hc3luY190cmFuc2FjdGlvbikgewoJCXByb2MtPmZyZWVfYXN5bmNfc3Bh
Y2UgKz0gc2l6ZSArIHNpemVvZihzdHJ1Y3QgYmluZGVyX2J1ZmZlcik7CgoJCWJpbmRlcl9kZWJ1ZyhC
SU5ERVJfREVCVUdfQlVGRkVSX0FMTE9DX0FTWU5DLAoJCQkgICAgICIlZDogYmluZGVyX2ZyZWVfYnVm
IHNpemUgJXpkIGFzeW5jIGZyZWUgJXpkXG4iLAoJCQkgICAgICBwcm9jLT5waWQsIHNpemUsIHByb2Mt
PmZyZWVfYXN5bmNfc3BhY2UpOwoJfQoKCWJpbmRlcl91cGRhdGVfcGFnZV9yYW5nZShwcm9jLCAwLAoJ
CSh2b2lkICopUEFHRV9BTElHTigodWludHB0cl90KWJ1ZmZlci0+ZGF0YSksCgkJKHZvaWQgKikoKCh1
aW50cHRyX3QpYnVmZmVyLT5kYXRhICsgYnVmZmVyX3NpemUpICYgUEFHRV9NQVNLKSwKCQlOVUxMKTsK
CXJiX2VyYXNlKCZidWZmZXItPnJiX25vZGUsICZwcm9jLT5hbGxvY2F0ZWRfYnVmZmVycyk7CglidWZm
ZXItPmZyZWUgPSAxOwoJaWYgKCFsaXN0X2lzX2xhc3QoJmJ1ZmZlci0+ZW50cnksICZwcm9jLT5idWZm
ZXJzKSkgewoJCXN0cnVjdCBiaW5kZXJfYnVmZmVyICpuZXh0ID0gbGlzdF9lbnRyeShidWZmZXItPmVu
dHJ5Lm5leHQsCgkJCQkJCXN0cnVjdCBiaW5kZXJfYnVmZmVyLCBlbnRyeSk7CgoJCWlmIChuZXh0LT5m
cmVlKSB7CgkJCXJiX2VyYXNlKCZuZXh0LT5yYl9ub2RlLCAmcHJvYy0+ZnJlZV9idWZmZXJzKTsKCQkJ
YmluZGVyX2RlbGV0ZV9mcmVlX2J1ZmZlcihwcm9jLCBuZXh0KTsKCQl9Cgl9CglpZiAocHJvYy0+YnVm
ZmVycy5uZXh0ICE9ICZidWZmZXItPmVudHJ5KSB7CgkJc3RydWN0IGJpbmRlcl9idWZmZXIgKnByZXYg
PSBsaXN0X2VudHJ5KGJ1ZmZlci0+ZW50cnkucHJldiwKCQkJCQkJc3RydWN0IGJpbmRlcl9idWZmZXIs
IGVudHJ5KTsKCgkJaWYgKHByZXYtPmZyZWUpIHsKCQkJYmluZGVyX2RlbGV0ZV9mcmVlX2J1ZmZlcihw
cm9jLCBidWZmZXIpOwoJCQlyYl9lcmFzZSgmcHJldi0+cmJfbm9kZSwgJnByb2MtPmZyZWVfYnVmZmVy
cyk7CgkJCWJ1ZmZlciA9IHByZXY7CgkJfQoJfQoJYmluZGVyX2luc2VydF9mcmVlX2J1ZmZlcihwcm9j
LCBidWZmZXIpOwp9CgpzdGF0aWMgc3RydWN0IGJpbmRlcl9ub2RlICpiaW5kZXJfZ2V0X25vZGUoc3Ry
dWN0IGJpbmRlcl9wcm9jICpwcm9jLAoJCQkJCSAgIGJpbmRlcl91aW50cHRyX3QgcHRyKQp7CglzdHJ1
Y3QgcmJfbm9kZSAqbiA9IHByb2MtPm5vZGVzLnJiX25vZGU7CglzdHJ1Y3QgYmluZGVyX25vZGUgKm5v
ZGU7CgoJd2hpbGUgKG4pIHsKCQlub2RlID0gcmJfZW50cnkobiwgc3RydWN0IGJpbmRlcl9ub2RlLCBy
Yl9ub2RlKTsKCgkJaWYgKHB0ciA8IG5vZGUtPnB0cikKCQkJbiA9IG4tPnJiX2xlZnQ7CgkJZWxzZSBp
ZiAocHRyID4gbm9kZS0+cHRyKQoJCQluID0gbi0+cmJfcmlnaHQ7CgkJZWxzZQoJCQlyZXR1cm4gbm9k
ZTsKCX0KCXJldHVybiBOVUxMOwp9CgpzdGF0aWMgc3RydWN0IGJpbmRlcl9ub2RlICpiaW5kZXJfbmV3
X25vZGUoc3RydWN0IGJpbmRlcl9wcm9jICpwcm9jLAoJCQkJCSAgIGJpbmRlcl91aW50cHRyX3QgcHRy
LAoJCQkJCSAgIGJpbmRlcl91aW50cHRyX3QgY29va2llKQp7CglzdHJ1Y3QgcmJfbm9kZSAqKnAgPSAm
cHJvYy0+bm9kZXMucmJfbm9kZTsKCXN0cnVjdCByYl9ub2RlICpwYXJlbnQgPSBOVUxMOwoJc3RydWN0
IGJpbmRlcl9ub2RlICpub2RlOwoKCXdoaWxlICgqcCkgewoJCXBhcmVudCA9ICpwOwoJCW5vZGUgPSBy
Yl9lbnRyeShwYXJlbnQsIHN0cnVjdCBiaW5kZXJfbm9kZSwgcmJfbm9kZSk7CgoJCWlmIChwdHIgPCBu
b2RlLT5wdHIpCgkJCXAgPSAmKCpwKS0+cmJfbGVmdDsKCQllbHNlIGlmIChwdHIgPiBub2RlLT5wdHIp
CgkJCXAgPSAmKCpwKS0+cmJfcmlnaHQ7CgkJZWxzZQoJCQlyZXR1cm4gTlVMTDsKCX0KCglub2RlID0g
a3phbGxvYyhzaXplb2YoKm5vZGUpLCBHRlBfS0VSTkVMKTsKCWlmIChub2RlID09IE5VTEwpCgkJcmV0
dXJuIE5VTEw7CgliaW5kZXJfc3RhdHNfY3JlYXRlZChCSU5ERVJfU1RBVF9OT0RFKTsKCXJiX2xpbmtf
bm9kZSgmbm9kZS0+cmJfbm9kZSwgcGFyZW50LCBwKTsKCXJiX2luc2VydF9jb2xvcigmbm9kZS0+cmJf
bm9kZSwgJnByb2MtPm5vZGVzKTsKCW5vZGUtPmRlYnVnX2lkID0gKytiaW5kZXJfbGFzdF9pZDsKCW5v
ZGUtPnByb2MgPSBwcm9jOwoJbm9kZS0+cHRyID0gcHRyOwoJbm9kZS0+Y29va2llID0gY29va2llOwoJ
bm9kZS0+d29yay50eXBlID0gQklOREVSX1dPUktfTk9ERTsKCUlOSVRfTElTVF9IRUFEKCZub2RlLT53
b3JrLmVudHJ5KTsKCUlOSVRfTElTVF9IRUFEKCZub2RlLT5hc3luY190b2RvKTsKCWJpbmRlcl9kZWJ1
ZyhCSU5ERVJfREVCVUdfSU5URVJOQUxfUkVGUywKCQkgICAgICIlZDolZCBub2RlICVkIHUlMDE2bGx4
IGMlMDE2bGx4IGNyZWF0ZWRcbiIsCgkJICAgICBwcm9jLT5waWQsIGN1cnJlbnQtPnBpZCwgbm9kZS0+
ZGVidWdfaWQsCgkJICAgICAodTY0KW5vZGUtPnB0ciwgKHU2NClub2RlLT5jb29raWUpOwoJcmV0dXJu
IG5vZGU7Cn0KCnN0YXRpYyBpbnQgYmluZGVyX2luY19ub2RlKHN0cnVjdCBiaW5kZXJfbm9kZSAqbm9k
ZSwgaW50IHN0cm9uZywgaW50IGludGVybmFsLAoJCQkgICBzdHJ1Y3QgbGlzdF9oZWFkICp0YXJnZXRf
bGlzdCkKewoJaWYgKHN0cm9uZykgewoJCWlmIChpbnRlcm5hbCkgewoJCQlpZiAodGFyZ2V0X2xpc3Qg
PT0gTlVMTCAmJgoJCQkgICAgbm9kZS0+aW50ZXJuYWxfc3Ryb25nX3JlZnMgPT0gMCAmJgoJCQkgICAg
IShub2RlID09IGJpbmRlcl9jb250ZXh0X21ncl9ub2RlICYmCgkJCSAgICBub2RlLT5oYXNfc3Ryb25n
X3JlZikpIHsKCQkJCXByX2VycigiaW52YWxpZCBpbmMgc3Ryb25nIG5vZGUgZm9yICVkXG4iLAoJCQkJ
CW5vZGUtPmRlYnVnX2lkKTsKCQkJCXJldHVybiAtRUlOVkFMOwoJCQl9CgkJCW5vZGUtPmludGVybmFs
X3N0cm9uZ19yZWZzKys7CgkJfSBlbHNlCgkJCW5vZGUtPmxvY2FsX3N0cm9uZ19yZWZzKys7CgkJaWYg
KCFub2RlLT5oYXNfc3Ryb25nX3JlZiAmJiB0YXJnZXRfbGlzdCkgewoJCQlsaXN0X2RlbF9pbml0KCZu
b2RlLT53b3JrLmVudHJ5KTsKCQkJbGlzdF9hZGRfdGFpbCgmbm9kZS0+d29yay5lbnRyeSwgdGFyZ2V0
X2xpc3QpOwoJCX0KCX0gZWxzZSB7CgkJaWYgKCFpbnRlcm5hbCkKCQkJbm9kZS0+bG9jYWxfd2Vha19y
ZWZzKys7CgkJaWYgKCFub2RlLT5oYXNfd2Vha19yZWYgJiYgbGlzdF9lbXB0eSgmbm9kZS0+d29yay5l
bnRyeSkpIHsKCQkJaWYgKHRhcmdldF9saXN0ID09IE5VTEwpIHsKCQkJCXByX2VycigiaW52YWxpZCBp
bmMgd2VhayBub2RlIGZvciAlZFxuIiwKCQkJCQlub2RlLT5kZWJ1Z19pZCk7CgkJCQlyZXR1cm4gLUVJ
TlZBTDsKCQkJfQoJCQlsaXN0X2FkZF90YWlsKCZub2RlLT53b3JrLmVudHJ5LCB0YXJnZXRfbGlzdCk7
CgkJfQoJfQoJcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbnQgYmluZGVyX2RlY19ub2RlKHN0cnVjdCBiaW5k
ZXJfbm9kZSAqbm9kZSwgaW50IHN0cm9uZywgaW50IGludGVybmFsKQp7CglpZiAoc3Ryb25nKSB7CgkJ
aWYgKGludGVybmFsKQoJCQlub2RlLT5pbnRlcm5hbF9zdHJvbmdfcmVmcy0tOwoJCWVsc2UKCQkJbm9k
ZS0+bG9jYWxfc3Ryb25nX3JlZnMtLTsKCQlpZiAobm9kZS0+bG9jYWxfc3Ryb25nX3JlZnMgfHwgbm9k
ZS0+aW50ZXJuYWxfc3Ryb25nX3JlZnMpCgkJCXJldHVybiAwOwoJfSBlbHNlIHsKCQlpZiAoIWludGVy
bmFsKQoJCQlub2RlLT5sb2NhbF93ZWFrX3JlZnMtLTsKCQlpZiAobm9kZS0+bG9jYWxfd2Vha19yZWZz
IHx8ICFobGlzdF9lbXB0eSgmbm9kZS0+cmVmcykpCgkJCXJldHVybiAwOwoJfQoJaWYgKG5vZGUtPnBy
b2MgJiYgKG5vZGUtPmhhc19zdHJvbmdfcmVmIHx8IG5vZGUtPmhhc193ZWFrX3JlZikpIHsKCQlpZiAo
bGlzdF9lbXB0eSgmbm9kZS0+d29yay5lbnRyeSkpIHsKCQkJbGlzdF9hZGRfdGFpbCgmbm9kZS0+d29y
ay5lbnRyeSwgJm5vZGUtPnByb2MtPnRvZG8pOwoJCQl3YWtlX3VwX2ludGVycnVwdGlibGUoJm5vZGUt
PnByb2MtPndhaXQpOwoJCX0KCX0gZWxzZSB7CgkJaWYgKGhsaXN0X2VtcHR5KCZub2RlLT5yZWZzKSAm
JiAhbm9kZS0+bG9jYWxfc3Ryb25nX3JlZnMgJiYKCQkgICAgIW5vZGUtPmxvY2FsX3dlYWtfcmVmcykg
ewoJCQlsaXN0X2RlbF9pbml0KCZub2RlLT53b3JrLmVudHJ5KTsKCQkJaWYgKG5vZGUtPnByb2MpIHsK
CQkJCXJiX2VyYXNlKCZub2RlLT5yYl9ub2RlLCAmbm9kZS0+cHJvYy0+bm9kZXMpOwoJCQkJYmluZGVy
X2RlYnVnKEJJTkRFUl9ERUJVR19JTlRFUk5BTF9SRUZTLAoJCQkJCSAgICAgInJlZmxlc3Mgbm9kZSAl
ZCBkZWxldGVkXG4iLAoJCQkJCSAgICAgbm9kZS0+ZGVidWdfaWQpOwoJCQl9IGVsc2UgewoJCQkJaGxp
c3RfZGVsKCZub2RlLT5kZWFkX25vZGUpOwoJCQkJYmluZGVyX2RlYnVnKEJJTkRFUl9ERUJVR19JTlRF
Uk5BTF9SRUZTLAoJCQkJCSAgICAgImRlYWQgbm9kZSAlZCBkZWxldGVkXG4iLAoJCQkJCSAgICAgbm9k
ZS0+ZGVidWdfaWQpOwoJCQl9CgkJCWtmcmVlKG5vZGUpOwoJCQliaW5kZXJfc3RhdHNfZGVsZXRlZChC
SU5ERVJfU1RBVF9OT0RFKTsKCQl9Cgl9CgoJcmV0dXJuIDA7Cn0KCgpzdGF0aWMgc3RydWN0IGJpbmRl
cl9yZWYgKmJpbmRlcl9nZXRfcmVmKHN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYywKCQkJCQkgdWludDMy
X3QgZGVzYykKewoJc3RydWN0IHJiX25vZGUgKm4gPSBwcm9jLT5yZWZzX2J5X2Rlc2MucmJfbm9kZTsK
CXN0cnVjdCBiaW5kZXJfcmVmICpyZWY7CgoJd2hpbGUgKG4pIHsKCQlyZWYgPSByYl9lbnRyeShuLCBz
dHJ1Y3QgYmluZGVyX3JlZiwgcmJfbm9kZV9kZXNjKTsKCgkJaWYgKGRlc2MgPCByZWYtPmRlc2MpCgkJ
CW4gPSBuLT5yYl9sZWZ0OwoJCWVsc2UgaWYgKGRlc2MgPiByZWYtPmRlc2MpCgkJCW4gPSBuLT5yYl9y
aWdodDsKCQllbHNlCgkJCXJldHVybiByZWY7Cgl9CglyZXR1cm4gTlVMTDsKfQoKc3RhdGljIHN0cnVj
dCBiaW5kZXJfcmVmICpiaW5kZXJfZ2V0X3JlZl9mb3Jfbm9kZShzdHJ1Y3QgYmluZGVyX3Byb2MgKnBy
b2MsCgkJCQkJCSAgc3RydWN0IGJpbmRlcl9ub2RlICpub2RlKQp7CglzdHJ1Y3QgcmJfbm9kZSAqbjsK
CXN0cnVjdCByYl9ub2RlICoqcCA9ICZwcm9jLT5yZWZzX2J5X25vZGUucmJfbm9kZTsKCXN0cnVjdCBy
Yl9ub2RlICpwYXJlbnQgPSBOVUxMOwoJc3RydWN0IGJpbmRlcl9yZWYgKnJlZiwgKm5ld19yZWY7CgoJ
d2hpbGUgKCpwKSB7CgkJcGFyZW50ID0gKnA7CgkJcmVmID0gcmJfZW50cnkocGFyZW50LCBzdHJ1Y3Qg
YmluZGVyX3JlZiwgcmJfbm9kZV9ub2RlKTsKCgkJaWYgKG5vZGUgPCByZWYtPm5vZGUpCgkJCXAgPSAm
KCpwKS0+cmJfbGVmdDsKCQllbHNlIGlmIChub2RlID4gcmVmLT5ub2RlKQoJCQlwID0gJigqcCktPnJi
X3JpZ2h0OwoJCWVsc2UKCQkJcmV0dXJuIHJlZjsKCX0KCW5ld19yZWYgPSBremFsbG9jKHNpemVvZigq
cmVmKSwgR0ZQX0tFUk5FTCk7CglpZiAobmV3X3JlZiA9PSBOVUxMKQoJCXJldHVybiBOVUxMOwoJYmlu
ZGVyX3N0YXRzX2NyZWF0ZWQoQklOREVSX1NUQVRfUkVGKTsKCW5ld19yZWYtPmRlYnVnX2lkID0gKyti
aW5kZXJfbGFzdF9pZDsKCW5ld19yZWYtPnByb2MgPSBwcm9jOwoJbmV3X3JlZi0+bm9kZSA9IG5vZGU7
CglyYl9saW5rX25vZGUoJm5ld19yZWYtPnJiX25vZGVfbm9kZSwgcGFyZW50LCBwKTsKCXJiX2luc2Vy
dF9jb2xvcigmbmV3X3JlZi0+cmJfbm9kZV9ub2RlLCAmcHJvYy0+cmVmc19ieV9ub2RlKTsKCgluZXdf
cmVmLT5kZXNjID0gKG5vZGUgPT0gYmluZGVyX2NvbnRleHRfbWdyX25vZGUpID8gMCA6IDE7Cglmb3Ig
KG4gPSByYl9maXJzdCgmcHJvYy0+cmVmc19ieV9kZXNjKTsgbiAhPSBOVUxMOyBuID0gcmJfbmV4dChu
KSkgewoJCXJlZiA9IHJiX2VudHJ5KG4sIHN0cnVjdCBiaW5kZXJfcmVmLCByYl9ub2RlX2Rlc2MpOwoJ
CWlmIChyZWYtPmRlc2MgPiBuZXdfcmVmLT5kZXNjKQoJCQlicmVhazsKCQluZXdfcmVmLT5kZXNjID0g
cmVmLT5kZXNjICsgMTsKCX0KCglwID0gJnByb2MtPnJlZnNfYnlfZGVzYy5yYl9ub2RlOwoJd2hpbGUg
KCpwKSB7CgkJcGFyZW50ID0gKnA7CgkJcmVmID0gcmJfZW50cnkocGFyZW50LCBzdHJ1Y3QgYmluZGVy
X3JlZiwgcmJfbm9kZV9kZXNjKTsKCgkJaWYgKG5ld19yZWYtPmRlc2MgPCByZWYtPmRlc2MpCgkJCXAg
PSAmKCpwKS0+cmJfbGVmdDsKCQllbHNlIGlmIChuZXdfcmVmLT5kZXNjID4gcmVmLT5kZXNjKQoJCQlw
ID0gJigqcCktPnJiX3JpZ2h0OwoJCWVsc2UKCQkJQlVHKCk7Cgl9CglyYl9saW5rX25vZGUoJm5ld19y
ZWYtPnJiX25vZGVfZGVzYywgcGFyZW50LCBwKTsKCXJiX2luc2VydF9jb2xvcigmbmV3X3JlZi0+cmJf
bm9kZV9kZXNjLCAmcHJvYy0+cmVmc19ieV9kZXNjKTsKCWlmIChub2RlKSB7CgkJaGxpc3RfYWRkX2hl
YWQoJm5ld19yZWYtPm5vZGVfZW50cnksICZub2RlLT5yZWZzKTsKCgkJYmluZGVyX2RlYnVnKEJJTkRF
Ul9ERUJVR19JTlRFUk5BTF9SRUZTLAoJCQkgICAgICIlZCBuZXcgcmVmICVkIGRlc2MgJWQgZm9yIG5v
ZGUgJWRcbiIsCgkJCSAgICAgIHByb2MtPnBpZCwgbmV3X3JlZi0+ZGVidWdfaWQsIG5ld19yZWYtPmRl
c2MsCgkJCSAgICAgIG5vZGUtPmRlYnVnX2lkKTsKCX0gZWxzZSB7CgkJYmluZGVyX2RlYnVnKEJJTkRF
Ul9ERUJVR19JTlRFUk5BTF9SRUZTLAoJCQkgICAgICIlZCBuZXcgcmVmICVkIGRlc2MgJWQgZm9yIGRl
YWQgbm9kZVxuIiwKCQkJICAgICAgcHJvYy0+cGlkLCBuZXdfcmVmLT5kZWJ1Z19pZCwgbmV3X3JlZi0+
ZGVzYyk7Cgl9CglyZXR1cm4gbmV3X3JlZjsKfQoKc3RhdGljIHZvaWQgYmluZGVyX2RlbGV0ZV9yZWYo
c3RydWN0IGJpbmRlcl9yZWYgKnJlZikKewoJYmluZGVyX2RlYnVnKEJJTkRFUl9ERUJVR19JTlRFUk5B
TF9SRUZTLAoJCSAgICAgIiVkIGRlbGV0ZSByZWYgJWQgZGVzYyAlZCBmb3Igbm9kZSAlZFxuIiwKCQkg
ICAgICByZWYtPnByb2MtPnBpZCwgcmVmLT5kZWJ1Z19pZCwgcmVmLT5kZXNjLAoJCSAgICAgIHJlZi0+
bm9kZS0+ZGVidWdfaWQpOwoKCXJiX2VyYXNlKCZyZWYtPnJiX25vZGVfZGVzYywgJnJlZi0+cHJvYy0+
cmVmc19ieV9kZXNjKTsKCXJiX2VyYXNlKCZyZWYtPnJiX25vZGVfbm9kZSwgJnJlZi0+cHJvYy0+cmVm
c19ieV9ub2RlKTsKCWlmIChyZWYtPnN0cm9uZykKCQliaW5kZXJfZGVjX25vZGUocmVmLT5ub2RlLCAx
LCAxKTsKCWhsaXN0X2RlbCgmcmVmLT5ub2RlX2VudHJ5KTsKCWJpbmRlcl9kZWNfbm9kZShyZWYtPm5v
ZGUsIDAsIDEpOwoJaWYgKHJlZi0+ZGVhdGgpIHsKCQliaW5kZXJfZGVidWcoQklOREVSX0RFQlVHX0RF
QURfQklOREVSLAoJCQkgICAgICIlZCBkZWxldGUgcmVmICVkIGRlc2MgJWQgaGFzIGRlYXRoIG5vdGlm
aWNhdGlvblxuIiwKCQkJICAgICAgcmVmLT5wcm9jLT5waWQsIHJlZi0+ZGVidWdfaWQsIHJlZi0+ZGVz
Yyk7CgkJbGlzdF9kZWwoJnJlZi0+ZGVhdGgtPndvcmsuZW50cnkpOwoJCWtmcmVlKHJlZi0+ZGVhdGgp
OwoJCWJpbmRlcl9zdGF0c19kZWxldGVkKEJJTkRFUl9TVEFUX0RFQVRIKTsKCX0KCWtmcmVlKHJlZik7
CgliaW5kZXJfc3RhdHNfZGVsZXRlZChCSU5ERVJfU1RBVF9SRUYpOwp9CgpzdGF0aWMgaW50IGJpbmRl
cl9pbmNfcmVmKHN0cnVjdCBiaW5kZXJfcmVmICpyZWYsIGludCBzdHJvbmcsCgkJCSAgc3RydWN0IGxp
c3RfaGVhZCAqdGFyZ2V0X2xpc3QpCnsKCWludCByZXQ7CgoJaWYgKHN0cm9uZykgewoJCWlmIChyZWYt
PnN0cm9uZyA9PSAwKSB7CgkJCXJldCA9IGJpbmRlcl9pbmNfbm9kZShyZWYtPm5vZGUsIDEsIDEsIHRh
cmdldF9saXN0KTsKCQkJaWYgKHJldCkKCQkJCXJldHVybiByZXQ7CgkJfQoJCXJlZi0+c3Ryb25nKys7
Cgl9IGVsc2UgewoJCWlmIChyZWYtPndlYWsgPT0gMCkgewoJCQlyZXQgPSBiaW5kZXJfaW5jX25vZGUo
cmVmLT5ub2RlLCAwLCAxLCB0YXJnZXRfbGlzdCk7CgkJCWlmIChyZXQpCgkJCQlyZXR1cm4gcmV0OwoJ
CX0KCQlyZWYtPndlYWsrKzsKCX0KCXJldHVybiAwOwp9CgoKc3RhdGljIGludCBiaW5kZXJfZGVjX3Jl
ZihzdHJ1Y3QgYmluZGVyX3JlZiAqcmVmLCBpbnQgc3Ryb25nKQp7CglpZiAoc3Ryb25nKSB7CgkJaWYg
KHJlZi0+c3Ryb25nID09IDApIHsKCQkJYmluZGVyX3VzZXJfZXJyb3IoIiVkIGludmFsaWQgZGVjIHN0
cm9uZywgcmVmICVkIGRlc2MgJWQgcyAlZCB3ICVkXG4iLAoJCQkJCSAgcmVmLT5wcm9jLT5waWQsIHJl
Zi0+ZGVidWdfaWQsCgkJCQkJICByZWYtPmRlc2MsIHJlZi0+c3Ryb25nLCByZWYtPndlYWspOwoJCQly
ZXR1cm4gLUVJTlZBTDsKCQl9CgkJcmVmLT5zdHJvbmctLTsKCQlpZiAocmVmLT5zdHJvbmcgPT0gMCkg
ewoJCQlpbnQgcmV0OwoKCQkJcmV0ID0gYmluZGVyX2RlY19ub2RlKHJlZi0+bm9kZSwgc3Ryb25nLCAx
KTsKCQkJaWYgKHJldCkKCQkJCXJldHVybiByZXQ7CgkJfQoJfSBlbHNlIHsKCQlpZiAocmVmLT53ZWFr
ID09IDApIHsKCQkJYmluZGVyX3VzZXJfZXJyb3IoIiVkIGludmFsaWQgZGVjIHdlYWssIHJlZiAlZCBk
ZXNjICVkIHMgJWQgdyAlZFxuIiwKCQkJCQkgIHJlZi0+cHJvYy0+cGlkLCByZWYtPmRlYnVnX2lkLAoJ
CQkJCSAgcmVmLT5kZXNjLCByZWYtPnN0cm9uZywgcmVmLT53ZWFrKTsKCQkJcmV0dXJuIC1FSU5WQUw7
CgkJfQoJCXJlZi0+d2Vhay0tOwoJfQoJaWYgKHJlZi0+c3Ryb25nID09IDAgJiYgcmVmLT53ZWFrID09
IDApCgkJYmluZGVyX2RlbGV0ZV9yZWYocmVmKTsKCXJldHVybiAwOwp9CgpzdGF0aWMgdm9pZCBiaW5k
ZXJfcG9wX3RyYW5zYWN0aW9uKHN0cnVjdCBiaW5kZXJfdGhyZWFkICp0YXJnZXRfdGhyZWFkLAoJCQkJ
ICAgc3RydWN0IGJpbmRlcl90cmFuc2FjdGlvbiAqdCkKewoJaWYgKHRhcmdldF90aHJlYWQpIHsKCQlC
VUdfT04odGFyZ2V0X3RocmVhZC0+dHJhbnNhY3Rpb25fc3RhY2sgIT0gdCk7CgkJQlVHX09OKHRhcmdl
dF90aHJlYWQtPnRyYW5zYWN0aW9uX3N0YWNrLT5mcm9tICE9IHRhcmdldF90aHJlYWQpOwoJCXRhcmdl
dF90aHJlYWQtPnRyYW5zYWN0aW9uX3N0YWNrID0KCQkJdGFyZ2V0X3RocmVhZC0+dHJhbnNhY3Rpb25f
c3RhY2stPmZyb21fcGFyZW50OwoJCXQtPmZyb20gPSBOVUxMOwoJfQoJdC0+bmVlZF9yZXBseSA9IDA7
CglpZiAodC0+YnVmZmVyKQoJCXQtPmJ1ZmZlci0+dHJhbnNhY3Rpb24gPSBOVUxMOwoJa2ZyZWUodCk7
CgliaW5kZXJfc3RhdHNfZGVsZXRlZChCSU5ERVJfU1RBVF9UUkFOU0FDVElPTik7Cn0KCnN0YXRpYyB2
b2lkIGJpbmRlcl9zZW5kX2ZhaWxlZF9yZXBseShzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uICp0LAoJ
CQkJICAgICB1aW50MzJfdCBlcnJvcl9jb2RlKQp7CglzdHJ1Y3QgYmluZGVyX3RocmVhZCAqdGFyZ2V0
X3RocmVhZDsKCXN0cnVjdCBiaW5kZXJfdHJhbnNhY3Rpb24gKm5leHQ7CgoJQlVHX09OKHQtPmZsYWdz
ICYgVEZfT05FX1dBWSk7Cgl3aGlsZSAoMSkgewoJCXRhcmdldF90aHJlYWQgPSB0LT5mcm9tOwoJCWlm
ICh0YXJnZXRfdGhyZWFkKSB7CgkJCWlmICh0YXJnZXRfdGhyZWFkLT5yZXR1cm5fZXJyb3IgIT0gQlJf
T0sgJiYKCQkJICAgdGFyZ2V0X3RocmVhZC0+cmV0dXJuX2Vycm9yMiA9PSBCUl9PSykgewoJCQkJdGFy
Z2V0X3RocmVhZC0+cmV0dXJuX2Vycm9yMiA9CgkJCQkJdGFyZ2V0X3RocmVhZC0+cmV0dXJuX2Vycm9y
OwoJCQkJdGFyZ2V0X3RocmVhZC0+cmV0dXJuX2Vycm9yID0gQlJfT0s7CgkJCX0KCQkJaWYgKHRhcmdl
dF90aHJlYWQtPnJldHVybl9lcnJvciA9PSBCUl9PSykgewoJCQkJYmluZGVyX2RlYnVnKEJJTkRFUl9E
RUJVR19GQUlMRURfVFJBTlNBQ1RJT04sCgkJCQkJICAgICAic2VuZCBmYWlsZWQgcmVwbHkgZm9yIHRy
YW5zYWN0aW9uICVkIHRvICVkOiVkXG4iLAoJCQkJCSAgICAgIHQtPmRlYnVnX2lkLAoJCQkJCSAgICAg
IHRhcmdldF90aHJlYWQtPnByb2MtPnBpZCwKCQkJCQkgICAgICB0YXJnZXRfdGhyZWFkLT5waWQpOwoK
CQkJCWJpbmRlcl9wb3BfdHJhbnNhY3Rpb24odGFyZ2V0X3RocmVhZCwgdCk7CgkJCQl0YXJnZXRfdGhy
ZWFkLT5yZXR1cm5fZXJyb3IgPSBlcnJvcl9jb2RlOwoJCQkJd2FrZV91cF9pbnRlcnJ1cHRpYmxlKCZ0
YXJnZXRfdGhyZWFkLT53YWl0KTsKCQkJfSBlbHNlIHsKCQkJCXByX2VycigicmVwbHkgZmFpbGVkLCB0
YXJnZXQgdGhyZWFkLCAlZDolZCwgaGFzIGVycm9yIGNvZGUgJWQgYWxyZWFkeVxuIiwKCQkJCQl0YXJn
ZXRfdGhyZWFkLT5wcm9jLT5waWQsCgkJCQkJdGFyZ2V0X3RocmVhZC0+cGlkLAoJCQkJCXRhcmdldF90
aHJlYWQtPnJldHVybl9lcnJvcik7CgkJCX0KCQkJcmV0dXJuOwoJCX0KCQluZXh0ID0gdC0+ZnJvbV9w
YXJlbnQ7CgoJCWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfRkFJTEVEX1RSQU5TQUNUSU9OLAoJCQkg
ICAgICJzZW5kIGZhaWxlZCByZXBseSBmb3IgdHJhbnNhY3Rpb24gJWQsIHRhcmdldCBkZWFkXG4iLAoJ
CQkgICAgIHQtPmRlYnVnX2lkKTsKCgkJYmluZGVyX3BvcF90cmFuc2FjdGlvbih0YXJnZXRfdGhyZWFk
LCB0KTsKCQlpZiAobmV4dCA9PSBOVUxMKSB7CgkJCWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfREVB
RF9CSU5ERVIsCgkJCQkgICAgICJyZXBseSBmYWlsZWQsIG5vIHRhcmdldCB0aHJlYWQgYXQgcm9vdFxu
Iik7CgkJCXJldHVybjsKCQl9CgkJdCA9IG5leHQ7CgkJYmluZGVyX2RlYnVnKEJJTkRFUl9ERUJVR19E
RUFEX0JJTkRFUiwKCQkJICAgICAicmVwbHkgZmFpbGVkLCBubyB0YXJnZXQgdGhyZWFkIC0tIHJldHJ5
ICVkXG4iLAoJCQkgICAgICB0LT5kZWJ1Z19pZCk7Cgl9Cn0KCnN0YXRpYyB2b2lkIGJpbmRlcl90cmFu
c2FjdGlvbl9idWZmZXJfcmVsZWFzZShzdHJ1Y3QgYmluZGVyX3Byb2MgKnByb2MsCgkJCQkJICAgICAg
c3RydWN0IGJpbmRlcl9idWZmZXIgKmJ1ZmZlciwKCQkJCQkgICAgICBiaW5kZXJfc2l6ZV90ICpmYWls
ZWRfYXQpCnsKCWJpbmRlcl9zaXplX3QgKm9mZnAsICpvZmZfZW5kOwoJaW50IGRlYnVnX2lkID0gYnVm
ZmVyLT5kZWJ1Z19pZDsKCgliaW5kZXJfZGVidWcoQklOREVSX0RFQlVHX1RSQU5TQUNUSU9OLAoJCSAg
ICAgIiVkIGJ1ZmZlciByZWxlYXNlICVkLCBzaXplICV6ZC0lemQsIGZhaWxlZCBhdCAlcFxuIiwKCQkg
ICAgIHByb2MtPnBpZCwgYnVmZmVyLT5kZWJ1Z19pZCwKCQkgICAgIGJ1ZmZlci0+ZGF0YV9zaXplLCBi
dWZmZXItPm9mZnNldHNfc2l6ZSwgZmFpbGVkX2F0KTsKCglpZiAoYnVmZmVyLT50YXJnZXRfbm9kZSkK
CQliaW5kZXJfZGVjX25vZGUoYnVmZmVyLT50YXJnZXRfbm9kZSwgMSwgMCk7CgoJb2ZmcCA9IChiaW5k
ZXJfc2l6ZV90ICopKGJ1ZmZlci0+ZGF0YSArCgkJCQkgQUxJR04oYnVmZmVyLT5kYXRhX3NpemUsIHNp
emVvZih2b2lkICopKSk7CglpZiAoZmFpbGVkX2F0KQoJCW9mZl9lbmQgPSBmYWlsZWRfYXQ7CgllbHNl
CgkJb2ZmX2VuZCA9ICh2b2lkICopb2ZmcCArIGJ1ZmZlci0+b2Zmc2V0c19zaXplOwoJZm9yICg7IG9m
ZnAgPCBvZmZfZW5kOyBvZmZwKyspIHsKCQlzdHJ1Y3QgZmxhdF9iaW5kZXJfb2JqZWN0ICpmcDsKCgkJ
aWYgKCpvZmZwID4gYnVmZmVyLT5kYXRhX3NpemUgLSBzaXplb2YoKmZwKSB8fAoJCSAgICBidWZmZXIt
PmRhdGFfc2l6ZSA8IHNpemVvZigqZnApIHx8CgkJICAgICFJU19BTElHTkVEKCpvZmZwLCBzaXplb2Yo
dTMyKSkpIHsKCQkJcHJfZXJyKCJ0cmFuc2FjdGlvbiByZWxlYXNlICVkIGJhZCBvZmZzZXQgJWxsZCwg
c2l6ZSAlemRcbiIsCgkJCSAgICAgICBkZWJ1Z19pZCwgKHU2NCkqb2ZmcCwgYnVmZmVyLT5kYXRhX3Np
emUpOwoJCQljb250aW51ZTsKCQl9CgkJZnAgPSAoc3RydWN0IGZsYXRfYmluZGVyX29iamVjdCAqKShi
dWZmZXItPmRhdGEgKyAqb2ZmcCk7CgkJc3dpdGNoIChmcC0+dHlwZSkgewoJCWNhc2UgQklOREVSX1RZ
UEVfQklOREVSOgoJCWNhc2UgQklOREVSX1RZUEVfV0VBS19CSU5ERVI6IHsKCQkJc3RydWN0IGJpbmRl
cl9ub2RlICpub2RlID0gYmluZGVyX2dldF9ub2RlKHByb2MsIGZwLT5iaW5kZXIpOwoKCQkJaWYgKG5v
ZGUgPT0gTlVMTCkgewoJCQkJcHJfZXJyKCJ0cmFuc2FjdGlvbiByZWxlYXNlICVkIGJhZCBub2RlICUw
MTZsbHhcbiIsCgkJCQkgICAgICAgZGVidWdfaWQsICh1NjQpZnAtPmJpbmRlcik7CgkJCQlicmVhazsK
CQkJfQoJCQliaW5kZXJfZGVidWcoQklOREVSX0RFQlVHX1RSQU5TQUNUSU9OLAoJCQkJICAgICAiICAg
ICAgICBub2RlICVkIHUlMDE2bGx4XG4iLAoJCQkJICAgICBub2RlLT5kZWJ1Z19pZCwgKHU2NClub2Rl
LT5wdHIpOwoJCQliaW5kZXJfZGVjX25vZGUobm9kZSwgZnAtPnR5cGUgPT0gQklOREVSX1RZUEVfQklO
REVSLCAwKTsKCQl9IGJyZWFrOwoJCWNhc2UgQklOREVSX1RZUEVfSEFORExFOgoJCWNhc2UgQklOREVS
X1RZUEVfV0VBS19IQU5ETEU6IHsKCQkJc3RydWN0IGJpbmRlcl9yZWYgKnJlZiA9IGJpbmRlcl9nZXRf
cmVmKHByb2MsIGZwLT5oYW5kbGUpOwoKCQkJaWYgKHJlZiA9PSBOVUxMKSB7CgkJCQlwcl9lcnIoInRy
YW5zYWN0aW9uIHJlbGVhc2UgJWQgYmFkIGhhbmRsZSAlZFxuIiwKCQkJCSBkZWJ1Z19pZCwgZnAtPmhh
bmRsZSk7CgkJCQlicmVhazsKCQkJfQoJCQliaW5kZXJfZGVidWcoQklOREVSX0RFQlVHX1RSQU5TQUNU
SU9OLAoJCQkJICAgICAiICAgICAgICByZWYgJWQgZGVzYyAlZCAobm9kZSAlZClcbiIsCgkJCQkgICAg
IHJlZi0+ZGVidWdfaWQsIHJlZi0+ZGVzYywgcmVmLT5ub2RlLT5kZWJ1Z19pZCk7CgkJCWJpbmRlcl9k
ZWNfcmVmKHJlZiwgZnAtPnR5cGUgPT0gQklOREVSX1RZUEVfSEFORExFKTsKCQl9IGJyZWFrOwoKCQlj
YXNlIEJJTkRFUl9UWVBFX0ZEOgoJCQliaW5kZXJfZGVidWcoQklOREVSX0RFQlVHX1RSQU5TQUNUSU9O
LAoJCQkJICAgICAiICAgICAgICBmZCAlZFxuIiwgZnAtPmhhbmRsZSk7CgkJCWlmIChmYWlsZWRfYXQp
CgkJCQl0YXNrX2Nsb3NlX2ZkKHByb2MsIGZwLT5oYW5kbGUpOwoJCQlicmVhazsKCgkJZGVmYXVsdDoK
CQkJcHJfZXJyKCJ0cmFuc2FjdGlvbiByZWxlYXNlICVkIGJhZCBvYmplY3QgdHlwZSAleFxuIiwKCQkJ
CWRlYnVnX2lkLCBmcC0+dHlwZSk7CgkJCWJyZWFrOwoJCX0KCX0KfQoKc3RhdGljIHZvaWQgYmluZGVy
X3RyYW5zYWN0aW9uKHN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYywKCQkJICAgICAgIHN0cnVjdCBiaW5k
ZXJfdGhyZWFkICp0aHJlYWQsCgkJCSAgICAgICBzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uX2RhdGEg
KnRyLCBpbnQgcmVwbHkpCnsKCXN0cnVjdCBiaW5kZXJfdHJhbnNhY3Rpb24gKnQ7CglzdHJ1Y3QgYmlu
ZGVyX3dvcmsgKnRjb21wbGV0ZTsKCWJpbmRlcl9zaXplX3QgKm9mZnAsICpvZmZfZW5kOwoJYmluZGVy
X3NpemVfdCBvZmZfbWluOwoJc3RydWN0IGJpbmRlcl9wcm9jICp0YXJnZXRfcHJvYzsKCXN0cnVjdCBi
aW5kZXJfdGhyZWFkICp0YXJnZXRfdGhyZWFkID0gTlVMTDsKCXN0cnVjdCBiaW5kZXJfbm9kZSAqdGFy
Z2V0X25vZGUgPSBOVUxMOwoJc3RydWN0IGxpc3RfaGVhZCAqdGFyZ2V0X2xpc3Q7Cgl3YWl0X3F1ZXVl
X2hlYWRfdCAqdGFyZ2V0X3dhaXQ7CglzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uICppbl9yZXBseV90
byA9IE5VTEw7CglzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uX2xvZ19lbnRyeSAqZTsKCXVpbnQzMl90
IHJldHVybl9lcnJvcjsKCgllID0gYmluZGVyX3RyYW5zYWN0aW9uX2xvZ19hZGQoJmJpbmRlcl90cmFu
c2FjdGlvbl9sb2cpOwoJZS0+Y2FsbF90eXBlID0gcmVwbHkgPyAyIDogISEodHItPmZsYWdzICYgVEZf
T05FX1dBWSk7CgllLT5mcm9tX3Byb2MgPSBwcm9jLT5waWQ7CgllLT5mcm9tX3RocmVhZCA9IHRocmVh
ZC0+cGlkOwoJZS0+dGFyZ2V0X2hhbmRsZSA9IHRyLT50YXJnZXQuaGFuZGxlOwoJZS0+ZGF0YV9zaXpl
ID0gdHItPmRhdGFfc2l6ZTsKCWUtPm9mZnNldHNfc2l6ZSA9IHRyLT5vZmZzZXRzX3NpemU7CgoJaWYg
KHJlcGx5KSB7CgkJaW5fcmVwbHlfdG8gPSB0aHJlYWQtPnRyYW5zYWN0aW9uX3N0YWNrOwoJCWlmIChp
bl9yZXBseV90byA9PSBOVUxMKSB7CgkJCWJpbmRlcl91c2VyX2Vycm9yKCIlZDolZCBnb3QgcmVwbHkg
dHJhbnNhY3Rpb24gd2l0aCBubyB0cmFuc2FjdGlvbiBzdGFja1xuIiwKCQkJCQkgIHByb2MtPnBpZCwg
dGhyZWFkLT5waWQpOwoJCQlyZXR1cm5fZXJyb3IgPSBCUl9GQUlMRURfUkVQTFk7CgkJCWdvdG8gZXJy
X2VtcHR5X2NhbGxfc3RhY2s7CgkJfQoJCWJpbmRlcl9zZXRfbmljZShpbl9yZXBseV90by0+c2F2ZWRf
cHJpb3JpdHkpOwoJCWlmIChpbl9yZXBseV90by0+dG9fdGhyZWFkICE9IHRocmVhZCkgewoJCQliaW5k
ZXJfdXNlcl9lcnJvcigiJWQ6JWQgZ290IHJlcGx5IHRyYW5zYWN0aW9uIHdpdGggYmFkIHRyYW5zYWN0
aW9uIHN0YWNrLCB0cmFuc2FjdGlvbiAlZCBoYXMgdGFyZ2V0ICVkOiVkXG4iLAoJCQkJcHJvYy0+cGlk
LCB0aHJlYWQtPnBpZCwgaW5fcmVwbHlfdG8tPmRlYnVnX2lkLAoJCQkJaW5fcmVwbHlfdG8tPnRvX3By
b2MgPwoJCQkJaW5fcmVwbHlfdG8tPnRvX3Byb2MtPnBpZCA6IDAsCgkJCQlpbl9yZXBseV90by0+dG9f
dGhyZWFkID8KCQkJCWluX3JlcGx5X3RvLT50b190aHJlYWQtPnBpZCA6IDApOwoJCQlyZXR1cm5fZXJy
b3IgPSBCUl9GQUlMRURfUkVQTFk7CgkJCWluX3JlcGx5X3RvID0gTlVMTDsKCQkJZ290byBlcnJfYmFk
X2NhbGxfc3RhY2s7CgkJfQoJCXRocmVhZC0+dHJhbnNhY3Rpb25fc3RhY2sgPSBpbl9yZXBseV90by0+
dG9fcGFyZW50OwoJCXRhcmdldF90aHJlYWQgPSBpbl9yZXBseV90by0+ZnJvbTsKCQlpZiAodGFyZ2V0
X3RocmVhZCA9PSBOVUxMKSB7CgkJCXJldHVybl9lcnJvciA9IEJSX0RFQURfUkVQTFk7CgkJCWdvdG8g
ZXJyX2RlYWRfYmluZGVyOwoJCX0KCQlpZiAodGFyZ2V0X3RocmVhZC0+dHJhbnNhY3Rpb25fc3RhY2sg
IT0gaW5fcmVwbHlfdG8pIHsKCQkJYmluZGVyX3VzZXJfZXJyb3IoIiVkOiVkIGdvdCByZXBseSB0cmFu
c2FjdGlvbiB3aXRoIGJhZCB0YXJnZXQgdHJhbnNhY3Rpb24gc3RhY2sgJWQsIGV4cGVjdGVkICVkXG4i
LAoJCQkJcHJvYy0+cGlkLCB0aHJlYWQtPnBpZCwKCQkJCXRhcmdldF90aHJlYWQtPnRyYW5zYWN0aW9u
X3N0YWNrID8KCQkJCXRhcmdldF90aHJlYWQtPnRyYW5zYWN0aW9uX3N0YWNrLT5kZWJ1Z19pZCA6IDAs
CgkJCQlpbl9yZXBseV90by0+ZGVidWdfaWQpOwoJCQlyZXR1cm5fZXJyb3IgPSBCUl9GQUlMRURfUkVQ
TFk7CgkJCWluX3JlcGx5X3RvID0gTlVMTDsKCQkJdGFyZ2V0X3RocmVhZCA9IE5VTEw7CgkJCWdvdG8g
ZXJyX2RlYWRfYmluZGVyOwoJCX0KCQl0YXJnZXRfcHJvYyA9IHRhcmdldF90aHJlYWQtPnByb2M7Cgl9
IGVsc2UgewoJCWlmICh0ci0+dGFyZ2V0LmhhbmRsZSkgewoJCQlzdHJ1Y3QgYmluZGVyX3JlZiAqcmVm
OwoKCQkJcmVmID0gYmluZGVyX2dldF9yZWYocHJvYywgdHItPnRhcmdldC5oYW5kbGUpOwoJCQlpZiAo
cmVmID09IE5VTEwpIHsKCQkJCWJpbmRlcl91c2VyX2Vycm9yKCIlZDolZCBnb3QgdHJhbnNhY3Rpb24g
dG8gaW52YWxpZCBoYW5kbGVcbiIsCgkJCQkJcHJvYy0+cGlkLCB0aHJlYWQtPnBpZCk7CgkJCQlyZXR1
cm5fZXJyb3IgPSBCUl9GQUlMRURfUkVQTFk7CgkJCQlnb3RvIGVycl9pbnZhbGlkX3RhcmdldF9oYW5k
bGU7CgkJCX0KCQkJdGFyZ2V0X25vZGUgPSByZWYtPm5vZGU7CgkJfSBlbHNlIHsKCQkJdGFyZ2V0X25v
ZGUgPSBiaW5kZXJfY29udGV4dF9tZ3Jfbm9kZTsKCQkJaWYgKHRhcmdldF9ub2RlID09IE5VTEwpIHsK
CQkJCXJldHVybl9lcnJvciA9IEJSX0RFQURfUkVQTFk7CgkJCQlnb3RvIGVycl9ub19jb250ZXh0X21n
cl9ub2RlOwoJCQl9CgkJfQoJCWUtPnRvX25vZGUgPSB0YXJnZXRfbm9kZS0+ZGVidWdfaWQ7CgkJdGFy
Z2V0X3Byb2MgPSB0YXJnZXRfbm9kZS0+cHJvYzsKCQlpZiAodGFyZ2V0X3Byb2MgPT0gTlVMTCkgewoJ
CQlyZXR1cm5fZXJyb3IgPSBCUl9ERUFEX1JFUExZOwoJCQlnb3RvIGVycl9kZWFkX2JpbmRlcjsKCQl9
CgkJaWYgKHNlY3VyaXR5X2JpbmRlcl90cmFuc2FjdGlvbihwcm9jLT50c2ssCgkJCQkJCXRhcmdldF9w
cm9jLT50c2spIDwgMCkgewoJCQlyZXR1cm5fZXJyb3IgPSBCUl9GQUlMRURfUkVQTFk7CgkJCWdvdG8g
ZXJyX2ludmFsaWRfdGFyZ2V0X2hhbmRsZTsKCQl9CgkJaWYgKCEodHItPmZsYWdzICYgVEZfT05FX1dB
WSkgJiYgdGhyZWFkLT50cmFuc2FjdGlvbl9zdGFjaykgewoJCQlzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0
aW9uICp0bXA7CgoJCQl0bXAgPSB0aHJlYWQtPnRyYW5zYWN0aW9uX3N0YWNrOwoJCQlpZiAodG1wLT50
b190aHJlYWQgIT0gdGhyZWFkKSB7CgkJCQliaW5kZXJfdXNlcl9lcnJvcigiJWQ6JWQgZ290IG5ldyB0
cmFuc2FjdGlvbiB3aXRoIGJhZCB0cmFuc2FjdGlvbiBzdGFjaywgdHJhbnNhY3Rpb24gJWQgaGFzIHRh
cmdldCAlZDolZFxuIiwKCQkJCQlwcm9jLT5waWQsIHRocmVhZC0+cGlkLCB0bXAtPmRlYnVnX2lkLAoJ
CQkJCXRtcC0+dG9fcHJvYyA/IHRtcC0+dG9fcHJvYy0+cGlkIDogMCwKCQkJCQl0bXAtPnRvX3RocmVh
ZCA/CgkJCQkJdG1wLT50b190aHJlYWQtPnBpZCA6IDApOwoJCQkJcmV0dXJuX2Vycm9yID0gQlJfRkFJ
TEVEX1JFUExZOwoJCQkJZ290byBlcnJfYmFkX2NhbGxfc3RhY2s7CgkJCX0KCQkJd2hpbGUgKHRtcCkg
ewoJCQkJaWYgKHRtcC0+ZnJvbSAmJiB0bXAtPmZyb20tPnByb2MgPT0gdGFyZ2V0X3Byb2MpCgkJCQkJ
dGFyZ2V0X3RocmVhZCA9IHRtcC0+ZnJvbTsKCQkJCXRtcCA9IHRtcC0+ZnJvbV9wYXJlbnQ7CgkJCX0K
CQl9Cgl9CglpZiAodGFyZ2V0X3RocmVhZCkgewoJCWUtPnRvX3RocmVhZCA9IHRhcmdldF90aHJlYWQt
PnBpZDsKCQl0YXJnZXRfbGlzdCA9ICZ0YXJnZXRfdGhyZWFkLT50b2RvOwoJCXRhcmdldF93YWl0ID0g
JnRhcmdldF90aHJlYWQtPndhaXQ7Cgl9IGVsc2UgewoJCXRhcmdldF9saXN0ID0gJnRhcmdldF9wcm9j
LT50b2RvOwoJCXRhcmdldF93YWl0ID0gJnRhcmdldF9wcm9jLT53YWl0OwoJfQoJZS0+dG9fcHJvYyA9
IHRhcmdldF9wcm9jLT5waWQ7CgoJLyogVE9ETzogcmV1c2UgaW5jb21pbmcgdHJhbnNhY3Rpb24gZm9y
IHJlcGx5ICovCgl0ID0ga3phbGxvYyhzaXplb2YoKnQpLCBHRlBfS0VSTkVMKTsKCWlmICh0ID09IE5V
TEwpIHsKCQlyZXR1cm5fZXJyb3IgPSBCUl9GQUlMRURfUkVQTFk7CgkJZ290byBlcnJfYWxsb2NfdF9m
YWlsZWQ7Cgl9CgliaW5kZXJfc3RhdHNfY3JlYXRlZChCSU5ERVJfU1RBVF9UUkFOU0FDVElPTik7CgoJ
dGNvbXBsZXRlID0ga3phbGxvYyhzaXplb2YoKnRjb21wbGV0ZSksIEdGUF9LRVJORUwpOwoJaWYgKHRj
b21wbGV0ZSA9PSBOVUxMKSB7CgkJcmV0dXJuX2Vycm9yID0gQlJfRkFJTEVEX1JFUExZOwoJCWdvdG8g
ZXJyX2FsbG9jX3Rjb21wbGV0ZV9mYWlsZWQ7Cgl9CgliaW5kZXJfc3RhdHNfY3JlYXRlZChCSU5ERVJf
U1RBVF9UUkFOU0FDVElPTl9DT01QTEVURSk7CgoJdC0+ZGVidWdfaWQgPSArK2JpbmRlcl9sYXN0X2lk
OwoJZS0+ZGVidWdfaWQgPSB0LT5kZWJ1Z19pZDsKCglpZiAocmVwbHkpCgkJYmluZGVyX2RlYnVnKEJJ
TkRFUl9ERUJVR19UUkFOU0FDVElPTiwKCQkJICAgICAiJWQ6JWQgQkNfUkVQTFkgJWQgLT4gJWQ6JWQs
IGRhdGEgJTAxNmxseC0lMDE2bGx4IHNpemUgJWxsZC0lbGxkXG4iLAoJCQkgICAgIHByb2MtPnBpZCwg
dGhyZWFkLT5waWQsIHQtPmRlYnVnX2lkLAoJCQkgICAgIHRhcmdldF9wcm9jLT5waWQsIHRhcmdldF90
aHJlYWQtPnBpZCwKCQkJICAgICAodTY0KXRyLT5kYXRhLnB0ci5idWZmZXIsCgkJCSAgICAgKHU2NCl0
ci0+ZGF0YS5wdHIub2Zmc2V0cywKCQkJICAgICAodTY0KXRyLT5kYXRhX3NpemUsICh1NjQpdHItPm9m
ZnNldHNfc2l6ZSk7CgllbHNlCgkJYmluZGVyX2RlYnVnKEJJTkRFUl9ERUJVR19UUkFOU0FDVElPTiwK
CQkJICAgICAiJWQ6JWQgQkNfVFJBTlNBQ1RJT04gJWQgLT4gJWQgLSBub2RlICVkLCBkYXRhICUwMTZs
bHgtJTAxNmxseCBzaXplICVsbGQtJWxsZFxuIiwKCQkJICAgICBwcm9jLT5waWQsIHRocmVhZC0+cGlk
LCB0LT5kZWJ1Z19pZCwKCQkJICAgICB0YXJnZXRfcHJvYy0+cGlkLCB0YXJnZXRfbm9kZS0+ZGVidWdf
aWQsCgkJCSAgICAgKHU2NCl0ci0+ZGF0YS5wdHIuYnVmZmVyLAoJCQkgICAgICh1NjQpdHItPmRhdGEu
cHRyLm9mZnNldHMsCgkJCSAgICAgKHU2NCl0ci0+ZGF0YV9zaXplLCAodTY0KXRyLT5vZmZzZXRzX3Np
emUpOwoKCWlmICghcmVwbHkgJiYgISh0ci0+ZmxhZ3MgJiBURl9PTkVfV0FZKSkKCQl0LT5mcm9tID0g
dGhyZWFkOwoJZWxzZQoJCXQtPmZyb20gPSBOVUxMOwoJdC0+c2VuZGVyX2V1aWQgPSB0YXNrX2V1aWQo
cHJvYy0+dHNrKTsKCXQtPnRvX3Byb2MgPSB0YXJnZXRfcHJvYzsKCXQtPnRvX3RocmVhZCA9IHRhcmdl
dF90aHJlYWQ7Cgl0LT5jb2RlID0gdHItPmNvZGU7Cgl0LT5mbGFncyA9IHRyLT5mbGFnczsKCXQtPnBy
aW9yaXR5ID0gdGFza19uaWNlKGN1cnJlbnQpOwoKCXRyYWNlX2JpbmRlcl90cmFuc2FjdGlvbihyZXBs
eSwgdCwgdGFyZ2V0X25vZGUpOwoKCXQtPmJ1ZmZlciA9IGJpbmRlcl9hbGxvY19idWYodGFyZ2V0X3By
b2MsIHRyLT5kYXRhX3NpemUsCgkJdHItPm9mZnNldHNfc2l6ZSwgIXJlcGx5ICYmICh0LT5mbGFncyAm
IFRGX09ORV9XQVkpKTsKCWlmICh0LT5idWZmZXIgPT0gTlVMTCkgewoJCXJldHVybl9lcnJvciA9IEJS
X0ZBSUxFRF9SRVBMWTsKCQlnb3RvIGVycl9iaW5kZXJfYWxsb2NfYnVmX2ZhaWxlZDsKCX0KCXQtPmJ1
ZmZlci0+YWxsb3dfdXNlcl9mcmVlID0gMDsKCXQtPmJ1ZmZlci0+ZGVidWdfaWQgPSB0LT5kZWJ1Z19p
ZDsKCXQtPmJ1ZmZlci0+dHJhbnNhY3Rpb24gPSB0OwoJdC0+YnVmZmVyLT50YXJnZXRfbm9kZSA9IHRh
cmdldF9ub2RlOwoJdHJhY2VfYmluZGVyX3RyYW5zYWN0aW9uX2FsbG9jX2J1Zih0LT5idWZmZXIpOwoJ
aWYgKHRhcmdldF9ub2RlKQoJCWJpbmRlcl9pbmNfbm9kZSh0YXJnZXRfbm9kZSwgMSwgMCwgTlVMTCk7
CgoJb2ZmcCA9IChiaW5kZXJfc2l6ZV90ICopKHQtPmJ1ZmZlci0+ZGF0YSArCgkJCQkgQUxJR04odHIt
PmRhdGFfc2l6ZSwgc2l6ZW9mKHZvaWQgKikpKTsKCglpZiAoY29weV9mcm9tX3VzZXIodC0+YnVmZmVy
LT5kYXRhLCAoY29uc3Qgdm9pZCBfX3VzZXIgKikodWludHB0cl90KQoJCQkgICB0ci0+ZGF0YS5wdHIu
YnVmZmVyLCB0ci0+ZGF0YV9zaXplKSkgewoJCWJpbmRlcl91c2VyX2Vycm9yKCIlZDolZCBnb3QgdHJh
bnNhY3Rpb24gd2l0aCBpbnZhbGlkIGRhdGEgcHRyXG4iLAoJCQkJcHJvYy0+cGlkLCB0aHJlYWQtPnBp
ZCk7CgkJcmV0dXJuX2Vycm9yID0gQlJfRkFJTEVEX1JFUExZOwoJCWdvdG8gZXJyX2NvcHlfZGF0YV9m
YWlsZWQ7Cgl9CglpZiAoY29weV9mcm9tX3VzZXIob2ZmcCwgKGNvbnN0IHZvaWQgX191c2VyICopKHVp
bnRwdHJfdCkKCQkJICAgdHItPmRhdGEucHRyLm9mZnNldHMsIHRyLT5vZmZzZXRzX3NpemUpKSB7CgkJ
YmluZGVyX3VzZXJfZXJyb3IoIiVkOiVkIGdvdCB0cmFuc2FjdGlvbiB3aXRoIGludmFsaWQgb2Zmc2V0
cyBwdHJcbiIsCgkJCQlwcm9jLT5waWQsIHRocmVhZC0+cGlkKTsKCQlyZXR1cm5fZXJyb3IgPSBCUl9G
QUlMRURfUkVQTFk7CgkJZ290byBlcnJfY29weV9kYXRhX2ZhaWxlZDsKCX0KCWlmICghSVNfQUxJR05F
RCh0ci0+b2Zmc2V0c19zaXplLCBzaXplb2YoYmluZGVyX3NpemVfdCkpKSB7CgkJYmluZGVyX3VzZXJf
ZXJyb3IoIiVkOiVkIGdvdCB0cmFuc2FjdGlvbiB3aXRoIGludmFsaWQgb2Zmc2V0cyBzaXplLCAlbGxk
XG4iLAoJCQkJcHJvYy0+cGlkLCB0aHJlYWQtPnBpZCwgKHU2NCl0ci0+b2Zmc2V0c19zaXplKTsKCQly
ZXR1cm5fZXJyb3IgPSBCUl9GQUlMRURfUkVQTFk7CgkJZ290byBlcnJfYmFkX29mZnNldDsKCX0KCW9m
Zl9lbmQgPSAodm9pZCAqKW9mZnAgKyB0ci0+b2Zmc2V0c19zaXplOwoJb2ZmX21pbiA9IDA7Cglmb3Ig
KDsgb2ZmcCA8IG9mZl9lbmQ7IG9mZnArKykgewoJCXN0cnVjdCBmbGF0X2JpbmRlcl9vYmplY3QgKmZw
OwoKCQlpZiAoKm9mZnAgPiB0LT5idWZmZXItPmRhdGFfc2l6ZSAtIHNpemVvZigqZnApIHx8CgkJICAg
ICpvZmZwIDwgb2ZmX21pbiB8fAoJCSAgICB0LT5idWZmZXItPmRhdGFfc2l6ZSA8IHNpemVvZigqZnAp
IHx8CgkJICAgICFJU19BTElHTkVEKCpvZmZwLCBzaXplb2YodTMyKSkpIHsKCQkJYmluZGVyX3VzZXJf
ZXJyb3IoIiVkOiVkIGdvdCB0cmFuc2FjdGlvbiB3aXRoIGludmFsaWQgb2Zmc2V0LCAlbGxkIChtaW4g
JWxsZCwgbWF4ICVsbGQpXG4iLAoJCQkJCSAgcHJvYy0+cGlkLCB0aHJlYWQtPnBpZCwgKHU2NCkqb2Zm
cCwKCQkJCQkgICh1NjQpb2ZmX21pbiwKCQkJCQkgICh1NjQpKHQtPmJ1ZmZlci0+ZGF0YV9zaXplIC0K
CQkJCQkgIHNpemVvZigqZnApKSk7CgkJCXJldHVybl9lcnJvciA9IEJSX0ZBSUxFRF9SRVBMWTsKCQkJ
Z290byBlcnJfYmFkX29mZnNldDsKCQl9CgkJZnAgPSAoc3RydWN0IGZsYXRfYmluZGVyX29iamVjdCAq
KSh0LT5idWZmZXItPmRhdGEgKyAqb2ZmcCk7CgkJb2ZmX21pbiA9ICpvZmZwICsgc2l6ZW9mKHN0cnVj
dCBmbGF0X2JpbmRlcl9vYmplY3QpOwoJCXN3aXRjaCAoZnAtPnR5cGUpIHsKCQljYXNlIEJJTkRFUl9U
WVBFX0JJTkRFUjoKCQljYXNlIEJJTkRFUl9UWVBFX1dFQUtfQklOREVSOiB7CgkJCXN0cnVjdCBiaW5k
ZXJfcmVmICpyZWY7CgkJCXN0cnVjdCBiaW5kZXJfbm9kZSAqbm9kZSA9IGJpbmRlcl9nZXRfbm9kZShw
cm9jLCBmcC0+YmluZGVyKTsKCgkJCWlmIChub2RlID09IE5VTEwpIHsKCQkJCW5vZGUgPSBiaW5kZXJf
bmV3X25vZGUocHJvYywgZnAtPmJpbmRlciwgZnAtPmNvb2tpZSk7CgkJCQlpZiAobm9kZSA9PSBOVUxM
KSB7CgkJCQkJcmV0dXJuX2Vycm9yID0gQlJfRkFJTEVEX1JFUExZOwoJCQkJCWdvdG8gZXJyX2JpbmRl
cl9uZXdfbm9kZV9mYWlsZWQ7CgkJCQl9CgkJCQlub2RlLT5taW5fcHJpb3JpdHkgPSBmcC0+ZmxhZ3Mg
JiBGTEFUX0JJTkRFUl9GTEFHX1BSSU9SSVRZX01BU0s7CgkJCQlub2RlLT5hY2NlcHRfZmRzID0gISEo
ZnAtPmZsYWdzICYgRkxBVF9CSU5ERVJfRkxBR19BQ0NFUFRTX0ZEUyk7CgkJCX0KCQkJaWYgKGZwLT5j
b29raWUgIT0gbm9kZS0+Y29va2llKSB7CgkJCQliaW5kZXJfdXNlcl9lcnJvcigiJWQ6JWQgc2VuZGlu
ZyB1JTAxNmxseCBub2RlICVkLCBjb29raWUgbWlzbWF0Y2ggJTAxNmxseCAhPSAlMDE2bGx4XG4iLAoJ
CQkJCXByb2MtPnBpZCwgdGhyZWFkLT5waWQsCgkJCQkJKHU2NClmcC0+YmluZGVyLCBub2RlLT5kZWJ1
Z19pZCwKCQkJCQkodTY0KWZwLT5jb29raWUsICh1NjQpbm9kZS0+Y29va2llKTsKCQkJCXJldHVybl9l
cnJvciA9IEJSX0ZBSUxFRF9SRVBMWTsKCQkJCWdvdG8gZXJyX2JpbmRlcl9nZXRfcmVmX2Zvcl9ub2Rl
X2ZhaWxlZDsKCQkJfQoJCQlpZiAoc2VjdXJpdHlfYmluZGVyX3RyYW5zZmVyX2JpbmRlcihwcm9jLT50
c2ssCgkJCQkJCQkgICAgdGFyZ2V0X3Byb2MtPnRzaykpIHsKCQkJCXJldHVybl9lcnJvciA9IEJSX0ZB
SUxFRF9SRVBMWTsKCQkJCWdvdG8gZXJyX2JpbmRlcl9nZXRfcmVmX2Zvcl9ub2RlX2ZhaWxlZDsKCQkJ
fQoJCQlyZWYgPSBiaW5kZXJfZ2V0X3JlZl9mb3Jfbm9kZSh0YXJnZXRfcHJvYywgbm9kZSk7CgkJCWlm
IChyZWYgPT0gTlVMTCkgewoJCQkJcmV0dXJuX2Vycm9yID0gQlJfRkFJTEVEX1JFUExZOwoJCQkJZ290
byBlcnJfYmluZGVyX2dldF9yZWZfZm9yX25vZGVfZmFpbGVkOwoJCQl9CgkJCWlmIChmcC0+dHlwZSA9
PSBCSU5ERVJfVFlQRV9CSU5ERVIpCgkJCQlmcC0+dHlwZSA9IEJJTkRFUl9UWVBFX0hBTkRMRTsKCQkJ
ZWxzZQoJCQkJZnAtPnR5cGUgPSBCSU5ERVJfVFlQRV9XRUFLX0hBTkRMRTsKCQkJZnAtPmhhbmRsZSA9
IHJlZi0+ZGVzYzsKCQkJYmluZGVyX2luY19yZWYocmVmLCBmcC0+dHlwZSA9PSBCSU5ERVJfVFlQRV9I
QU5ETEUsCgkJCQkgICAgICAgJnRocmVhZC0+dG9kbyk7CgoJCQl0cmFjZV9iaW5kZXJfdHJhbnNhY3Rp
b25fbm9kZV90b19yZWYodCwgbm9kZSwgcmVmKTsKCQkJYmluZGVyX2RlYnVnKEJJTkRFUl9ERUJVR19U
UkFOU0FDVElPTiwKCQkJCSAgICAgIiAgICAgICAgbm9kZSAlZCB1JTAxNmxseCAtPiByZWYgJWQgZGVz
YyAlZFxuIiwKCQkJCSAgICAgbm9kZS0+ZGVidWdfaWQsICh1NjQpbm9kZS0+cHRyLAoJCQkJICAgICBy
ZWYtPmRlYnVnX2lkLCByZWYtPmRlc2MpOwoJCX0gYnJlYWs7CgkJY2FzZSBCSU5ERVJfVFlQRV9IQU5E
TEU6CgkJY2FzZSBCSU5ERVJfVFlQRV9XRUFLX0hBTkRMRTogewoJCQlzdHJ1Y3QgYmluZGVyX3JlZiAq
cmVmID0gYmluZGVyX2dldF9yZWYocHJvYywgZnAtPmhhbmRsZSk7CgoJCQlpZiAocmVmID09IE5VTEwp
IHsKCQkJCWJpbmRlcl91c2VyX2Vycm9yKCIlZDolZCBnb3QgdHJhbnNhY3Rpb24gd2l0aCBpbnZhbGlk
IGhhbmRsZSwgJWRcbiIsCgkJCQkJCXByb2MtPnBpZCwKCQkJCQkJdGhyZWFkLT5waWQsIGZwLT5oYW5k
bGUpOwoJCQkJcmV0dXJuX2Vycm9yID0gQlJfRkFJTEVEX1JFUExZOwoJCQkJZ290byBlcnJfYmluZGVy
X2dldF9yZWZfZmFpbGVkOwoJCQl9CgkJCWlmIChzZWN1cml0eV9iaW5kZXJfdHJhbnNmZXJfYmluZGVy
KHByb2MtPnRzaywKCQkJCQkJCSAgICB0YXJnZXRfcHJvYy0+dHNrKSkgewoJCQkJcmV0dXJuX2Vycm9y
ID0gQlJfRkFJTEVEX1JFUExZOwoJCQkJZ290byBlcnJfYmluZGVyX2dldF9yZWZfZmFpbGVkOwoJCQl9
CgkJCWlmIChyZWYtPm5vZGUtPnByb2MgPT0gdGFyZ2V0X3Byb2MpIHsKCQkJCWlmIChmcC0+dHlwZSA9
PSBCSU5ERVJfVFlQRV9IQU5ETEUpCgkJCQkJZnAtPnR5cGUgPSBCSU5ERVJfVFlQRV9CSU5ERVI7CgkJ
CQllbHNlCgkJCQkJZnAtPnR5cGUgPSBCSU5ERVJfVFlQRV9XRUFLX0JJTkRFUjsKCQkJCWZwLT5iaW5k
ZXIgPSByZWYtPm5vZGUtPnB0cjsKCQkJCWZwLT5jb29raWUgPSByZWYtPm5vZGUtPmNvb2tpZTsKCQkJ
CWJpbmRlcl9pbmNfbm9kZShyZWYtPm5vZGUsIGZwLT50eXBlID09IEJJTkRFUl9UWVBFX0JJTkRFUiwg
MCwgTlVMTCk7CgkJCQl0cmFjZV9iaW5kZXJfdHJhbnNhY3Rpb25fcmVmX3RvX25vZGUodCwgcmVmKTsK
CQkJCWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfVFJBTlNBQ1RJT04sCgkJCQkJICAgICAiICAgICAg
ICByZWYgJWQgZGVzYyAlZCAtPiBub2RlICVkIHUlMDE2bGx4XG4iLAoJCQkJCSAgICAgcmVmLT5kZWJ1
Z19pZCwgcmVmLT5kZXNjLCByZWYtPm5vZGUtPmRlYnVnX2lkLAoJCQkJCSAgICAgKHU2NClyZWYtPm5v
ZGUtPnB0cik7CgkJCX0gZWxzZSB7CgkJCQlzdHJ1Y3QgYmluZGVyX3JlZiAqbmV3X3JlZjsKCgkJCQlu
ZXdfcmVmID0gYmluZGVyX2dldF9yZWZfZm9yX25vZGUodGFyZ2V0X3Byb2MsIHJlZi0+bm9kZSk7CgkJ
CQlpZiAobmV3X3JlZiA9PSBOVUxMKSB7CgkJCQkJcmV0dXJuX2Vycm9yID0gQlJfRkFJTEVEX1JFUExZ
OwoJCQkJCWdvdG8gZXJyX2JpbmRlcl9nZXRfcmVmX2Zvcl9ub2RlX2ZhaWxlZDsKCQkJCX0KCQkJCWZw
LT5oYW5kbGUgPSBuZXdfcmVmLT5kZXNjOwoJCQkJYmluZGVyX2luY19yZWYobmV3X3JlZiwgZnAtPnR5
cGUgPT0gQklOREVSX1RZUEVfSEFORExFLCBOVUxMKTsKCQkJCXRyYWNlX2JpbmRlcl90cmFuc2FjdGlv
bl9yZWZfdG9fcmVmKHQsIHJlZiwKCQkJCQkJCQkgICAgbmV3X3JlZik7CgkJCQliaW5kZXJfZGVidWco
QklOREVSX0RFQlVHX1RSQU5TQUNUSU9OLAoJCQkJCSAgICAgIiAgICAgICAgcmVmICVkIGRlc2MgJWQg
LT4gcmVmICVkIGRlc2MgJWQgKG5vZGUgJWQpXG4iLAoJCQkJCSAgICAgcmVmLT5kZWJ1Z19pZCwgcmVm
LT5kZXNjLCBuZXdfcmVmLT5kZWJ1Z19pZCwKCQkJCQkgICAgIG5ld19yZWYtPmRlc2MsIHJlZi0+bm9k
ZS0+ZGVidWdfaWQpOwoJCQl9CgkJfSBicmVhazsKCgkJY2FzZSBCSU5ERVJfVFlQRV9GRDogewoJCQlp
bnQgdGFyZ2V0X2ZkOwoJCQlzdHJ1Y3QgZmlsZSAqZmlsZTsKCgkJCWlmIChyZXBseSkgewoJCQkJaWYg
KCEoaW5fcmVwbHlfdG8tPmZsYWdzICYgVEZfQUNDRVBUX0ZEUykpIHsKCQkJCQliaW5kZXJfdXNlcl9l
cnJvcigiJWQ6JWQgZ290IHJlcGx5IHdpdGggZmQsICVkLCBidXQgdGFyZ2V0IGRvZXMgbm90IGFsbG93
IGZkc1xuIiwKCQkJCQkJcHJvYy0+cGlkLCB0aHJlYWQtPnBpZCwgZnAtPmhhbmRsZSk7CgkJCQkJcmV0
dXJuX2Vycm9yID0gQlJfRkFJTEVEX1JFUExZOwoJCQkJCWdvdG8gZXJyX2ZkX25vdF9hbGxvd2VkOwoJ
CQkJfQoJCQl9IGVsc2UgaWYgKCF0YXJnZXRfbm9kZS0+YWNjZXB0X2ZkcykgewoJCQkJYmluZGVyX3Vz
ZXJfZXJyb3IoIiVkOiVkIGdvdCB0cmFuc2FjdGlvbiB3aXRoIGZkLCAlZCwgYnV0IHRhcmdldCBkb2Vz
IG5vdCBhbGxvdyBmZHNcbiIsCgkJCQkJcHJvYy0+cGlkLCB0aHJlYWQtPnBpZCwgZnAtPmhhbmRsZSk7
CgkJCQlyZXR1cm5fZXJyb3IgPSBCUl9GQUlMRURfUkVQTFk7CgkJCQlnb3RvIGVycl9mZF9ub3RfYWxs
b3dlZDsKCQkJfQoKCQkJZmlsZSA9IGZnZXQoZnAtPmhhbmRsZSk7CgkJCWlmIChmaWxlID09IE5VTEwp
IHsKCQkJCWJpbmRlcl91c2VyX2Vycm9yKCIlZDolZCBnb3QgdHJhbnNhY3Rpb24gd2l0aCBpbnZhbGlk
IGZkLCAlZFxuIiwKCQkJCQlwcm9jLT5waWQsIHRocmVhZC0+cGlkLCBmcC0+aGFuZGxlKTsKCQkJCXJl
dHVybl9lcnJvciA9IEJSX0ZBSUxFRF9SRVBMWTsKCQkJCWdvdG8gZXJyX2ZnZXRfZmFpbGVkOwoJCQl9
CgkJCWlmIChzZWN1cml0eV9iaW5kZXJfdHJhbnNmZXJfZmlsZShwcm9jLT50c2ssCgkJCQkJCQkgIHRh
cmdldF9wcm9jLT50c2ssCgkJCQkJCQkgIGZpbGUpIDwgMCkgewoJCQkJZnB1dChmaWxlKTsKCQkJCXJl
dHVybl9lcnJvciA9IEJSX0ZBSUxFRF9SRVBMWTsKCQkJCWdvdG8gZXJyX2dldF91bnVzZWRfZmRfZmFp
bGVkOwoJCQl9CgkJCXRhcmdldF9mZCA9IHRhc2tfZ2V0X3VudXNlZF9mZF9mbGFncyh0YXJnZXRfcHJv
YywgT19DTE9FWEVDKTsKCQkJaWYgKHRhcmdldF9mZCA8IDApIHsKCQkJCWZwdXQoZmlsZSk7CgkJCQly
ZXR1cm5fZXJyb3IgPSBCUl9GQUlMRURfUkVQTFk7CgkJCQlnb3RvIGVycl9nZXRfdW51c2VkX2ZkX2Zh
aWxlZDsKCQkJfQoJCQl0YXNrX2ZkX2luc3RhbGwodGFyZ2V0X3Byb2MsIHRhcmdldF9mZCwgZmlsZSk7
CgkJCXRyYWNlX2JpbmRlcl90cmFuc2FjdGlvbl9mZCh0LCBmcC0+aGFuZGxlLCB0YXJnZXRfZmQpOwoJ
CQliaW5kZXJfZGVidWcoQklOREVSX0RFQlVHX1RSQU5TQUNUSU9OLAoJCQkJICAgICAiICAgICAgICBm
ZCAlZCAtPiAlZFxuIiwgZnAtPmhhbmRsZSwgdGFyZ2V0X2ZkKTsKCQkJLyogVE9ETzogZnB1dD8gKi8K
CQkJZnAtPmhhbmRsZSA9IHRhcmdldF9mZDsKCQl9IGJyZWFrOwoKCQlkZWZhdWx0OgoJCQliaW5kZXJf
dXNlcl9lcnJvcigiJWQ6JWQgZ290IHRyYW5zYWN0aW9uIHdpdGggaW52YWxpZCBvYmplY3QgdHlwZSwg
JXhcbiIsCgkJCQlwcm9jLT5waWQsIHRocmVhZC0+cGlkLCBmcC0+dHlwZSk7CgkJCXJldHVybl9lcnJv
ciA9IEJSX0ZBSUxFRF9SRVBMWTsKCQkJZ290byBlcnJfYmFkX29iamVjdF90eXBlOwoJCX0KCX0KCWlm
IChyZXBseSkgewoJCUJVR19PTih0LT5idWZmZXItPmFzeW5jX3RyYW5zYWN0aW9uICE9IDApOwoJCWJp
bmRlcl9wb3BfdHJhbnNhY3Rpb24odGFyZ2V0X3RocmVhZCwgaW5fcmVwbHlfdG8pOwoJfSBlbHNlIGlm
ICghKHQtPmZsYWdzICYgVEZfT05FX1dBWSkpIHsKCQlCVUdfT04odC0+YnVmZmVyLT5hc3luY190cmFu
c2FjdGlvbiAhPSAwKTsKCQl0LT5uZWVkX3JlcGx5ID0gMTsKCQl0LT5mcm9tX3BhcmVudCA9IHRocmVh
ZC0+dHJhbnNhY3Rpb25fc3RhY2s7CgkJdGhyZWFkLT50cmFuc2FjdGlvbl9zdGFjayA9IHQ7Cgl9IGVs
c2UgewoJCUJVR19PTih0YXJnZXRfbm9kZSA9PSBOVUxMKTsKCQlCVUdfT04odC0+YnVmZmVyLT5hc3lu
Y190cmFuc2FjdGlvbiAhPSAxKTsKCQlpZiAodGFyZ2V0X25vZGUtPmhhc19hc3luY190cmFuc2FjdGlv
bikgewoJCQl0YXJnZXRfbGlzdCA9ICZ0YXJnZXRfbm9kZS0+YXN5bmNfdG9kbzsKCQkJdGFyZ2V0X3dh
aXQgPSBOVUxMOwoJCX0gZWxzZQoJCQl0YXJnZXRfbm9kZS0+aGFzX2FzeW5jX3RyYW5zYWN0aW9uID0g
MTsKCX0KCXQtPndvcmsudHlwZSA9IEJJTkRFUl9XT1JLX1RSQU5TQUNUSU9OOwoJbGlzdF9hZGRfdGFp
bCgmdC0+d29yay5lbnRyeSwgdGFyZ2V0X2xpc3QpOwoJdGNvbXBsZXRlLT50eXBlID0gQklOREVSX1dP
UktfVFJBTlNBQ1RJT05fQ09NUExFVEU7CglsaXN0X2FkZF90YWlsKCZ0Y29tcGxldGUtPmVudHJ5LCAm
dGhyZWFkLT50b2RvKTsKCWlmICh0YXJnZXRfd2FpdCkKCQl3YWtlX3VwX2ludGVycnVwdGlibGUodGFy
Z2V0X3dhaXQpOwoJcmV0dXJuOwoKZXJyX2dldF91bnVzZWRfZmRfZmFpbGVkOgplcnJfZmdldF9mYWls
ZWQ6CmVycl9mZF9ub3RfYWxsb3dlZDoKZXJyX2JpbmRlcl9nZXRfcmVmX2Zvcl9ub2RlX2ZhaWxlZDoK
ZXJyX2JpbmRlcl9nZXRfcmVmX2ZhaWxlZDoKZXJyX2JpbmRlcl9uZXdfbm9kZV9mYWlsZWQ6CmVycl9i
YWRfb2JqZWN0X3R5cGU6CmVycl9iYWRfb2Zmc2V0OgplcnJfY29weV9kYXRhX2ZhaWxlZDoKCXRyYWNl
X2JpbmRlcl90cmFuc2FjdGlvbl9mYWlsZWRfYnVmZmVyX3JlbGVhc2UodC0+YnVmZmVyKTsKCWJpbmRl
cl90cmFuc2FjdGlvbl9idWZmZXJfcmVsZWFzZSh0YXJnZXRfcHJvYywgdC0+YnVmZmVyLCBvZmZwKTsK
CXQtPmJ1ZmZlci0+dHJhbnNhY3Rpb24gPSBOVUxMOwoJYmluZGVyX2ZyZWVfYnVmKHRhcmdldF9wcm9j
LCB0LT5idWZmZXIpOwplcnJfYmluZGVyX2FsbG9jX2J1Zl9mYWlsZWQ6CglrZnJlZSh0Y29tcGxldGUp
OwoJYmluZGVyX3N0YXRzX2RlbGV0ZWQoQklOREVSX1NUQVRfVFJBTlNBQ1RJT05fQ09NUExFVEUpOwpl
cnJfYWxsb2NfdGNvbXBsZXRlX2ZhaWxlZDoKCWtmcmVlKHQpOwoJYmluZGVyX3N0YXRzX2RlbGV0ZWQo
QklOREVSX1NUQVRfVFJBTlNBQ1RJT04pOwplcnJfYWxsb2NfdF9mYWlsZWQ6CmVycl9iYWRfY2FsbF9z
dGFjazoKZXJyX2VtcHR5X2NhbGxfc3RhY2s6CmVycl9kZWFkX2JpbmRlcjoKZXJyX2ludmFsaWRfdGFy
Z2V0X2hhbmRsZToKZXJyX25vX2NvbnRleHRfbWdyX25vZGU6CgliaW5kZXJfZGVidWcoQklOREVSX0RF
QlVHX0ZBSUxFRF9UUkFOU0FDVElPTiwKCQkgICAgICIlZDolZCB0cmFuc2FjdGlvbiBmYWlsZWQgJWQs
IHNpemUgJWxsZC0lbGxkXG4iLAoJCSAgICAgcHJvYy0+cGlkLCB0aHJlYWQtPnBpZCwgcmV0dXJuX2Vy
cm9yLAoJCSAgICAgKHU2NCl0ci0+ZGF0YV9zaXplLCAodTY0KXRyLT5vZmZzZXRzX3NpemUpOwoKCXsK
CQlzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uX2xvZ19lbnRyeSAqZmU7CgoJCWZlID0gYmluZGVyX3Ry
YW5zYWN0aW9uX2xvZ19hZGQoJmJpbmRlcl90cmFuc2FjdGlvbl9sb2dfZmFpbGVkKTsKCQkqZmUgPSAq
ZTsKCX0KCglCVUdfT04odGhyZWFkLT5yZXR1cm5fZXJyb3IgIT0gQlJfT0spOwoJaWYgKGluX3JlcGx5
X3RvKSB7CgkJdGhyZWFkLT5yZXR1cm5fZXJyb3IgPSBCUl9UUkFOU0FDVElPTl9DT01QTEVURTsKCQli
aW5kZXJfc2VuZF9mYWlsZWRfcmVwbHkoaW5fcmVwbHlfdG8sIHJldHVybl9lcnJvcik7Cgl9IGVsc2UK
CQl0aHJlYWQtPnJldHVybl9lcnJvciA9IHJldHVybl9lcnJvcjsKfQoKc3RhdGljIGludCBiaW5kZXJf
dGhyZWFkX3dyaXRlKHN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYywKCQkJc3RydWN0IGJpbmRlcl90aHJl
YWQgKnRocmVhZCwKCQkJYmluZGVyX3VpbnRwdHJfdCBiaW5kZXJfYnVmZmVyLCBzaXplX3Qgc2l6ZSwK
CQkJYmluZGVyX3NpemVfdCAqY29uc3VtZWQpCnsKCXVpbnQzMl90IGNtZDsKCXZvaWQgX191c2VyICpi
dWZmZXIgPSAodm9pZCBfX3VzZXIgKikodWludHB0cl90KWJpbmRlcl9idWZmZXI7Cgl2b2lkIF9fdXNl
ciAqcHRyID0gYnVmZmVyICsgKmNvbnN1bWVkOwoJdm9pZCBfX3VzZXIgKmVuZCA9IGJ1ZmZlciArIHNp
emU7CgoJd2hpbGUgKHB0ciA8IGVuZCAmJiB0aHJlYWQtPnJldHVybl9lcnJvciA9PSBCUl9PSykgewoJ
CWlmIChnZXRfdXNlcihjbWQsICh1aW50MzJfdCBfX3VzZXIgKilwdHIpKQoJCQlyZXR1cm4gLUVGQVVM
VDsKCQlwdHIgKz0gc2l6ZW9mKHVpbnQzMl90KTsKCQl0cmFjZV9iaW5kZXJfY29tbWFuZChjbWQpOwoJ
CWlmIChfSU9DX05SKGNtZCkgPCBBUlJBWV9TSVpFKGJpbmRlcl9zdGF0cy5iYykpIHsKCQkJYmluZGVy
X3N0YXRzLmJjW19JT0NfTlIoY21kKV0rKzsKCQkJcHJvYy0+c3RhdHMuYmNbX0lPQ19OUihjbWQpXSsr
OwoJCQl0aHJlYWQtPnN0YXRzLmJjW19JT0NfTlIoY21kKV0rKzsKCQl9CgkJc3dpdGNoIChjbWQpIHsK
CQljYXNlIEJDX0lOQ1JFRlM6CgkJY2FzZSBCQ19BQ1FVSVJFOgoJCWNhc2UgQkNfUkVMRUFTRToKCQlj
YXNlIEJDX0RFQ1JFRlM6IHsKCQkJdWludDMyX3QgdGFyZ2V0OwoJCQlzdHJ1Y3QgYmluZGVyX3JlZiAq
cmVmOwoJCQljb25zdCBjaGFyICpkZWJ1Z19zdHJpbmc7CgoJCQlpZiAoZ2V0X3VzZXIodGFyZ2V0LCAo
dWludDMyX3QgX191c2VyICopcHRyKSkKCQkJCXJldHVybiAtRUZBVUxUOwoJCQlwdHIgKz0gc2l6ZW9m
KHVpbnQzMl90KTsKCQkJaWYgKHRhcmdldCA9PSAwICYmIGJpbmRlcl9jb250ZXh0X21ncl9ub2RlICYm
CgkJCSAgICAoY21kID09IEJDX0lOQ1JFRlMgfHwgY21kID09IEJDX0FDUVVJUkUpKSB7CgkJCQlyZWYg
PSBiaW5kZXJfZ2V0X3JlZl9mb3Jfbm9kZShwcm9jLAoJCQkJCSAgICAgICBiaW5kZXJfY29udGV4dF9t
Z3Jfbm9kZSk7CgkJCQlpZiAocmVmLT5kZXNjICE9IHRhcmdldCkgewoJCQkJCWJpbmRlcl91c2VyX2Vy
cm9yKCIlZDolZCB0cmllZCB0byBhY3F1aXJlIHJlZmVyZW5jZSB0byBkZXNjIDAsIGdvdCAlZCBpbnN0
ZWFkXG4iLAoJCQkJCQlwcm9jLT5waWQsIHRocmVhZC0+cGlkLAoJCQkJCQlyZWYtPmRlc2MpOwoJCQkJ
fQoJCQl9IGVsc2UKCQkJCXJlZiA9IGJpbmRlcl9nZXRfcmVmKHByb2MsIHRhcmdldCk7CgkJCWlmIChy
ZWYgPT0gTlVMTCkgewoJCQkJYmluZGVyX3VzZXJfZXJyb3IoIiVkOiVkIHJlZmNvdW50IGNoYW5nZSBv
biBpbnZhbGlkIHJlZiAlZFxuIiwKCQkJCQlwcm9jLT5waWQsIHRocmVhZC0+cGlkLCB0YXJnZXQpOwoJ
CQkJYnJlYWs7CgkJCX0KCQkJc3dpdGNoIChjbWQpIHsKCQkJY2FzZSBCQ19JTkNSRUZTOgoJCQkJZGVi
dWdfc3RyaW5nID0gIkluY1JlZnMiOwoJCQkJYmluZGVyX2luY19yZWYocmVmLCAwLCBOVUxMKTsKCQkJ
CWJyZWFrOwoJCQljYXNlIEJDX0FDUVVJUkU6CgkJCQlkZWJ1Z19zdHJpbmcgPSAiQWNxdWlyZSI7CgkJ
CQliaW5kZXJfaW5jX3JlZihyZWYsIDEsIE5VTEwpOwoJCQkJYnJlYWs7CgkJCWNhc2UgQkNfUkVMRUFT
RToKCQkJCWRlYnVnX3N0cmluZyA9ICJSZWxlYXNlIjsKCQkJCWJpbmRlcl9kZWNfcmVmKHJlZiwgMSk7
CgkJCQlicmVhazsKCQkJY2FzZSBCQ19ERUNSRUZTOgoJCQlkZWZhdWx0OgoJCQkJZGVidWdfc3RyaW5n
ID0gIkRlY1JlZnMiOwoJCQkJYmluZGVyX2RlY19yZWYocmVmLCAwKTsKCQkJCWJyZWFrOwoJCQl9CgkJ
CWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfVVNFUl9SRUZTLAoJCQkJICAgICAiJWQ6JWQgJXMgcmVm
ICVkIGRlc2MgJWQgcyAlZCB3ICVkIGZvciBub2RlICVkXG4iLAoJCQkJICAgICBwcm9jLT5waWQsIHRo
cmVhZC0+cGlkLCBkZWJ1Z19zdHJpbmcsIHJlZi0+ZGVidWdfaWQsCgkJCQkgICAgIHJlZi0+ZGVzYywg
cmVmLT5zdHJvbmcsIHJlZi0+d2VhaywgcmVmLT5ub2RlLT5kZWJ1Z19pZCk7CgkJCWJyZWFrOwoJCX0K
CQljYXNlIEJDX0lOQ1JFRlNfRE9ORToKCQljYXNlIEJDX0FDUVVJUkVfRE9ORTogewoJCQliaW5kZXJf
dWludHB0cl90IG5vZGVfcHRyOwoJCQliaW5kZXJfdWludHB0cl90IGNvb2tpZTsKCQkJc3RydWN0IGJp
bmRlcl9ub2RlICpub2RlOwoKCQkJaWYgKGdldF91c2VyKG5vZGVfcHRyLCAoYmluZGVyX3VpbnRwdHJf
dCBfX3VzZXIgKilwdHIpKQoJCQkJcmV0dXJuIC1FRkFVTFQ7CgkJCXB0ciArPSBzaXplb2YoYmluZGVy
X3VpbnRwdHJfdCk7CgkJCWlmIChnZXRfdXNlcihjb29raWUsIChiaW5kZXJfdWludHB0cl90IF9fdXNl
ciAqKXB0cikpCgkJCQlyZXR1cm4gLUVGQVVMVDsKCQkJcHRyICs9IHNpemVvZihiaW5kZXJfdWludHB0
cl90KTsKCQkJbm9kZSA9IGJpbmRlcl9nZXRfbm9kZShwcm9jLCBub2RlX3B0cik7CgkJCWlmIChub2Rl
ID09IE5VTEwpIHsKCQkJCWJpbmRlcl91c2VyX2Vycm9yKCIlZDolZCAlcyB1JTAxNmxseCBubyBtYXRj
aFxuIiwKCQkJCQlwcm9jLT5waWQsIHRocmVhZC0+cGlkLAoJCQkJCWNtZCA9PSBCQ19JTkNSRUZTX0RP
TkUgPwoJCQkJCSJCQ19JTkNSRUZTX0RPTkUiIDoKCQkJCQkiQkNfQUNRVUlSRV9ET05FIiwKCQkJCQko
dTY0KW5vZGVfcHRyKTsKCQkJCWJyZWFrOwoJCQl9CgkJCWlmIChjb29raWUgIT0gbm9kZS0+Y29va2ll
KSB7CgkJCQliaW5kZXJfdXNlcl9lcnJvcigiJWQ6JWQgJXMgdSUwMTZsbHggbm9kZSAlZCBjb29raWUg
bWlzbWF0Y2ggJTAxNmxseCAhPSAlMDE2bGx4XG4iLAoJCQkJCXByb2MtPnBpZCwgdGhyZWFkLT5waWQs
CgkJCQkJY21kID09IEJDX0lOQ1JFRlNfRE9ORSA/CgkJCQkJIkJDX0lOQ1JFRlNfRE9ORSIgOiAiQkNf
QUNRVUlSRV9ET05FIiwKCQkJCQkodTY0KW5vZGVfcHRyLCBub2RlLT5kZWJ1Z19pZCwKCQkJCQkodTY0
KWNvb2tpZSwgKHU2NClub2RlLT5jb29raWUpOwoJCQkJYnJlYWs7CgkJCX0KCQkJaWYgKGNtZCA9PSBC
Q19BQ1FVSVJFX0RPTkUpIHsKCQkJCWlmIChub2RlLT5wZW5kaW5nX3N0cm9uZ19yZWYgPT0gMCkgewoJ
CQkJCWJpbmRlcl91c2VyX2Vycm9yKCIlZDolZCBCQ19BQ1FVSVJFX0RPTkUgbm9kZSAlZCBoYXMgbm8g
cGVuZGluZyBhY3F1aXJlIHJlcXVlc3RcbiIsCgkJCQkJCXByb2MtPnBpZCwgdGhyZWFkLT5waWQsCgkJ
CQkJCW5vZGUtPmRlYnVnX2lkKTsKCQkJCQlicmVhazsKCQkJCX0KCQkJCW5vZGUtPnBlbmRpbmdfc3Ry
b25nX3JlZiA9IDA7CgkJCX0gZWxzZSB7CgkJCQlpZiAobm9kZS0+cGVuZGluZ193ZWFrX3JlZiA9PSAw
KSB7CgkJCQkJYmluZGVyX3VzZXJfZXJyb3IoIiVkOiVkIEJDX0lOQ1JFRlNfRE9ORSBub2RlICVkIGhh
cyBubyBwZW5kaW5nIGluY3JlZnMgcmVxdWVzdFxuIiwKCQkJCQkJcHJvYy0+cGlkLCB0aHJlYWQtPnBp
ZCwKCQkJCQkJbm9kZS0+ZGVidWdfaWQpOwoJCQkJCWJyZWFrOwoJCQkJfQoJCQkJbm9kZS0+cGVuZGlu
Z193ZWFrX3JlZiA9IDA7CgkJCX0KCQkJYmluZGVyX2RlY19ub2RlKG5vZGUsIGNtZCA9PSBCQ19BQ1FV
SVJFX0RPTkUsIDApOwoJCQliaW5kZXJfZGVidWcoQklOREVSX0RFQlVHX1VTRVJfUkVGUywKCQkJCSAg
ICAgIiVkOiVkICVzIG5vZGUgJWQgbHMgJWQgbHcgJWRcbiIsCgkJCQkgICAgIHByb2MtPnBpZCwgdGhy
ZWFkLT5waWQsCgkJCQkgICAgIGNtZCA9PSBCQ19JTkNSRUZTX0RPTkUgPyAiQkNfSU5DUkVGU19ET05F
IiA6ICJCQ19BQ1FVSVJFX0RPTkUiLAoJCQkJICAgICBub2RlLT5kZWJ1Z19pZCwgbm9kZS0+bG9jYWxf
c3Ryb25nX3JlZnMsIG5vZGUtPmxvY2FsX3dlYWtfcmVmcyk7CgkJCWJyZWFrOwoJCX0KCQljYXNlIEJD
X0FUVEVNUFRfQUNRVUlSRToKCQkJcHJfZXJyKCJCQ19BVFRFTVBUX0FDUVVJUkUgbm90IHN1cHBvcnRl
ZFxuIik7CgkJCXJldHVybiAtRUlOVkFMOwoJCWNhc2UgQkNfQUNRVUlSRV9SRVNVTFQ6CgkJCXByX2Vy
cigiQkNfQUNRVUlSRV9SRVNVTFQgbm90IHN1cHBvcnRlZFxuIik7CgkJCXJldHVybiAtRUlOVkFMOwoK
CQljYXNlIEJDX0ZSRUVfQlVGRkVSOiB7CgkJCWJpbmRlcl91aW50cHRyX3QgZGF0YV9wdHI7CgkJCXN0
cnVjdCBiaW5kZXJfYnVmZmVyICpidWZmZXI7CgoJCQlpZiAoZ2V0X3VzZXIoZGF0YV9wdHIsIChiaW5k
ZXJfdWludHB0cl90IF9fdXNlciAqKXB0cikpCgkJCQlyZXR1cm4gLUVGQVVMVDsKCQkJcHRyICs9IHNp
emVvZihiaW5kZXJfdWludHB0cl90KTsKCgkJCWJ1ZmZlciA9IGJpbmRlcl9idWZmZXJfbG9va3VwKHBy
b2MsIGRhdGFfcHRyKTsKCQkJaWYgKGJ1ZmZlciA9PSBOVUxMKSB7CgkJCQliaW5kZXJfdXNlcl9lcnJv
cigiJWQ6JWQgQkNfRlJFRV9CVUZGRVIgdSUwMTZsbHggbm8gbWF0Y2hcbiIsCgkJCQkJcHJvYy0+cGlk
LCB0aHJlYWQtPnBpZCwgKHU2NClkYXRhX3B0cik7CgkJCQlicmVhazsKCQkJfQoJCQlpZiAoIWJ1ZmZl
ci0+YWxsb3dfdXNlcl9mcmVlKSB7CgkJCQliaW5kZXJfdXNlcl9lcnJvcigiJWQ6JWQgQkNfRlJFRV9C
VUZGRVIgdSUwMTZsbHggbWF0Y2hlZCB1bnJldHVybmVkIGJ1ZmZlclxuIiwKCQkJCQlwcm9jLT5waWQs
IHRocmVhZC0+cGlkLCAodTY0KWRhdGFfcHRyKTsKCQkJCWJyZWFrOwoJCQl9CgkJCWJpbmRlcl9kZWJ1
ZyhCSU5ERVJfREVCVUdfRlJFRV9CVUZGRVIsCgkJCQkgICAgICIlZDolZCBCQ19GUkVFX0JVRkZFUiB1
JTAxNmxseCBmb3VuZCBidWZmZXIgJWQgZm9yICVzIHRyYW5zYWN0aW9uXG4iLAoJCQkJICAgICBwcm9j
LT5waWQsIHRocmVhZC0+cGlkLCAodTY0KWRhdGFfcHRyLAoJCQkJICAgICBidWZmZXItPmRlYnVnX2lk
LAoJCQkJICAgICBidWZmZXItPnRyYW5zYWN0aW9uID8gImFjdGl2ZSIgOiAiZmluaXNoZWQiKTsKCgkJ
CWlmIChidWZmZXItPnRyYW5zYWN0aW9uKSB7CgkJCQlidWZmZXItPnRyYW5zYWN0aW9uLT5idWZmZXIg
PSBOVUxMOwoJCQkJYnVmZmVyLT50cmFuc2FjdGlvbiA9IE5VTEw7CgkJCX0KCQkJaWYgKGJ1ZmZlci0+
YXN5bmNfdHJhbnNhY3Rpb24gJiYgYnVmZmVyLT50YXJnZXRfbm9kZSkgewoJCQkJQlVHX09OKCFidWZm
ZXItPnRhcmdldF9ub2RlLT5oYXNfYXN5bmNfdHJhbnNhY3Rpb24pOwoJCQkJaWYgKGxpc3RfZW1wdHko
JmJ1ZmZlci0+dGFyZ2V0X25vZGUtPmFzeW5jX3RvZG8pKQoJCQkJCWJ1ZmZlci0+dGFyZ2V0X25vZGUt
Pmhhc19hc3luY190cmFuc2FjdGlvbiA9IDA7CgkJCQllbHNlCgkJCQkJbGlzdF9tb3ZlX3RhaWwoYnVm
ZmVyLT50YXJnZXRfbm9kZS0+YXN5bmNfdG9kby5uZXh0LCAmdGhyZWFkLT50b2RvKTsKCQkJfQoJCQl0
cmFjZV9iaW5kZXJfdHJhbnNhY3Rpb25fYnVmZmVyX3JlbGVhc2UoYnVmZmVyKTsKCQkJYmluZGVyX3Ry
YW5zYWN0aW9uX2J1ZmZlcl9yZWxlYXNlKHByb2MsIGJ1ZmZlciwgTlVMTCk7CgkJCWJpbmRlcl9mcmVl
X2J1Zihwcm9jLCBidWZmZXIpOwoJCQlicmVhazsKCQl9CgoJCWNhc2UgQkNfVFJBTlNBQ1RJT046CgkJ
Y2FzZSBCQ19SRVBMWTogewoJCQlzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uX2RhdGEgdHI7CgoJCQlp
ZiAoY29weV9mcm9tX3VzZXIoJnRyLCBwdHIsIHNpemVvZih0cikpKQoJCQkJcmV0dXJuIC1FRkFVTFQ7
CgkJCXB0ciArPSBzaXplb2YodHIpOwoJCQliaW5kZXJfdHJhbnNhY3Rpb24ocHJvYywgdGhyZWFkLCAm
dHIsIGNtZCA9PSBCQ19SRVBMWSk7CgkJCWJyZWFrOwoJCX0KCgkJY2FzZSBCQ19SRUdJU1RFUl9MT09Q
RVI6CgkJCWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfVEhSRUFEUywKCQkJCSAgICAgIiVkOiVkIEJD
X1JFR0lTVEVSX0xPT1BFUlxuIiwKCQkJCSAgICAgcHJvYy0+cGlkLCB0aHJlYWQtPnBpZCk7CgkJCWlm
ICh0aHJlYWQtPmxvb3BlciAmIEJJTkRFUl9MT09QRVJfU1RBVEVfRU5URVJFRCkgewoJCQkJdGhyZWFk
LT5sb29wZXIgfD0gQklOREVSX0xPT1BFUl9TVEFURV9JTlZBTElEOwoJCQkJYmluZGVyX3VzZXJfZXJy
b3IoIiVkOiVkIEVSUk9SOiBCQ19SRUdJU1RFUl9MT09QRVIgY2FsbGVkIGFmdGVyIEJDX0VOVEVSX0xP
T1BFUlxuIiwKCQkJCQlwcm9jLT5waWQsIHRocmVhZC0+cGlkKTsKCQkJfSBlbHNlIGlmIChwcm9jLT5y
ZXF1ZXN0ZWRfdGhyZWFkcyA9PSAwKSB7CgkJCQl0aHJlYWQtPmxvb3BlciB8PSBCSU5ERVJfTE9PUEVS
X1NUQVRFX0lOVkFMSUQ7CgkJCQliaW5kZXJfdXNlcl9lcnJvcigiJWQ6JWQgRVJST1I6IEJDX1JFR0lT
VEVSX0xPT1BFUiBjYWxsZWQgd2l0aG91dCByZXF1ZXN0XG4iLAoJCQkJCXByb2MtPnBpZCwgdGhyZWFk
LT5waWQpOwoJCQl9IGVsc2UgewoJCQkJcHJvYy0+cmVxdWVzdGVkX3RocmVhZHMtLTsKCQkJCXByb2Mt
PnJlcXVlc3RlZF90aHJlYWRzX3N0YXJ0ZWQrKzsKCQkJfQoJCQl0aHJlYWQtPmxvb3BlciB8PSBCSU5E
RVJfTE9PUEVSX1NUQVRFX1JFR0lTVEVSRUQ7CgkJCWJyZWFrOwoJCWNhc2UgQkNfRU5URVJfTE9PUEVS
OgoJCQliaW5kZXJfZGVidWcoQklOREVSX0RFQlVHX1RIUkVBRFMsCgkJCQkgICAgICIlZDolZCBCQ19F
TlRFUl9MT09QRVJcbiIsCgkJCQkgICAgIHByb2MtPnBpZCwgdGhyZWFkLT5waWQpOwoJCQlpZiAodGhy
ZWFkLT5sb29wZXIgJiBCSU5ERVJfTE9PUEVSX1NUQVRFX1JFR0lTVEVSRUQpIHsKCQkJCXRocmVhZC0+
bG9vcGVyIHw9IEJJTkRFUl9MT09QRVJfU1RBVEVfSU5WQUxJRDsKCQkJCWJpbmRlcl91c2VyX2Vycm9y
KCIlZDolZCBFUlJPUjogQkNfRU5URVJfTE9PUEVSIGNhbGxlZCBhZnRlciBCQ19SRUdJU1RFUl9MT09Q
RVJcbiIsCgkJCQkJcHJvYy0+cGlkLCB0aHJlYWQtPnBpZCk7CgkJCX0KCQkJdGhyZWFkLT5sb29wZXIg
fD0gQklOREVSX0xPT1BFUl9TVEFURV9FTlRFUkVEOwoJCQlicmVhazsKCQljYXNlIEJDX0VYSVRfTE9P
UEVSOgoJCQliaW5kZXJfZGVidWcoQklOREVSX0RFQlVHX1RIUkVBRFMsCgkJCQkgICAgICIlZDolZCBC
Q19FWElUX0xPT1BFUlxuIiwKCQkJCSAgICAgcHJvYy0+cGlkLCB0aHJlYWQtPnBpZCk7CgkJCXRocmVh
ZC0+bG9vcGVyIHw9IEJJTkRFUl9MT09QRVJfU1RBVEVfRVhJVEVEOwoJCQlicmVhazsKCgkJY2FzZSBC
Q19SRVFVRVNUX0RFQVRIX05PVElGSUNBVElPTjoKCQljYXNlIEJDX0NMRUFSX0RFQVRIX05PVElGSUNB
VElPTjogewoJCQl1aW50MzJfdCB0YXJnZXQ7CgkJCWJpbmRlcl91aW50cHRyX3QgY29va2llOwoJCQlz
dHJ1Y3QgYmluZGVyX3JlZiAqcmVmOwoJCQlzdHJ1Y3QgYmluZGVyX3JlZl9kZWF0aCAqZGVhdGg7CgoJ
CQlpZiAoZ2V0X3VzZXIodGFyZ2V0LCAodWludDMyX3QgX191c2VyICopcHRyKSkKCQkJCXJldHVybiAt
RUZBVUxUOwoJCQlwdHIgKz0gc2l6ZW9mKHVpbnQzMl90KTsKCQkJaWYgKGdldF91c2VyKGNvb2tpZSwg
KGJpbmRlcl91aW50cHRyX3QgX191c2VyICopcHRyKSkKCQkJCXJldHVybiAtRUZBVUxUOwoJCQlwdHIg
Kz0gc2l6ZW9mKGJpbmRlcl91aW50cHRyX3QpOwoJCQlyZWYgPSBiaW5kZXJfZ2V0X3JlZihwcm9jLCB0
YXJnZXQpOwoJCQlpZiAocmVmID09IE5VTEwpIHsKCQkJCWJpbmRlcl91c2VyX2Vycm9yKCIlZDolZCAl
cyBpbnZhbGlkIHJlZiAlZFxuIiwKCQkJCQlwcm9jLT5waWQsIHRocmVhZC0+cGlkLAoJCQkJCWNtZCA9
PSBCQ19SRVFVRVNUX0RFQVRIX05PVElGSUNBVElPTiA/CgkJCQkJIkJDX1JFUVVFU1RfREVBVEhfTk9U
SUZJQ0FUSU9OIiA6CgkJCQkJIkJDX0NMRUFSX0RFQVRIX05PVElGSUNBVElPTiIsCgkJCQkJdGFyZ2V0
KTsKCQkJCWJyZWFrOwoJCQl9CgoJCQliaW5kZXJfZGVidWcoQklOREVSX0RFQlVHX0RFQVRIX05PVElG
SUNBVElPTiwKCQkJCSAgICAgIiVkOiVkICVzICUwMTZsbHggcmVmICVkIGRlc2MgJWQgcyAlZCB3ICVk
IGZvciBub2RlICVkXG4iLAoJCQkJICAgICBwcm9jLT5waWQsIHRocmVhZC0+cGlkLAoJCQkJICAgICBj
bWQgPT0gQkNfUkVRVUVTVF9ERUFUSF9OT1RJRklDQVRJT04gPwoJCQkJICAgICAiQkNfUkVRVUVTVF9E
RUFUSF9OT1RJRklDQVRJT04iIDoKCQkJCSAgICAgIkJDX0NMRUFSX0RFQVRIX05PVElGSUNBVElPTiIs
CgkJCQkgICAgICh1NjQpY29va2llLCByZWYtPmRlYnVnX2lkLCByZWYtPmRlc2MsCgkJCQkgICAgIHJl
Zi0+c3Ryb25nLCByZWYtPndlYWssIHJlZi0+bm9kZS0+ZGVidWdfaWQpOwoKCQkJaWYgKGNtZCA9PSBC
Q19SRVFVRVNUX0RFQVRIX05PVElGSUNBVElPTikgewoJCQkJaWYgKHJlZi0+ZGVhdGgpIHsKCQkJCQli
aW5kZXJfdXNlcl9lcnJvcigiJWQ6JWQgQkNfUkVRVUVTVF9ERUFUSF9OT1RJRklDQVRJT04gZGVhdGgg
bm90aWZpY2F0aW9uIGFscmVhZHkgc2V0XG4iLAoJCQkJCQlwcm9jLT5waWQsIHRocmVhZC0+cGlkKTsK
CQkJCQlicmVhazsKCQkJCX0KCQkJCWRlYXRoID0ga3phbGxvYyhzaXplb2YoKmRlYXRoKSwgR0ZQX0tF
Uk5FTCk7CgkJCQlpZiAoZGVhdGggPT0gTlVMTCkgewoJCQkJCXRocmVhZC0+cmV0dXJuX2Vycm9yID0g
QlJfRVJST1I7CgkJCQkJYmluZGVyX2RlYnVnKEJJTkRFUl9ERUJVR19GQUlMRURfVFJBTlNBQ1RJT04s
CgkJCQkJCSAgICAgIiVkOiVkIEJDX1JFUVVFU1RfREVBVEhfTk9USUZJQ0FUSU9OIGZhaWxlZFxuIiwK
CQkJCQkJICAgICBwcm9jLT5waWQsIHRocmVhZC0+cGlkKTsKCQkJCQlicmVhazsKCQkJCX0KCQkJCWJp
bmRlcl9zdGF0c19jcmVhdGVkKEJJTkRFUl9TVEFUX0RFQVRIKTsKCQkJCUlOSVRfTElTVF9IRUFEKCZk
ZWF0aC0+d29yay5lbnRyeSk7CgkJCQlkZWF0aC0+Y29va2llID0gY29va2llOwoJCQkJcmVmLT5kZWF0
aCA9IGRlYXRoOwoJCQkJaWYgKHJlZi0+bm9kZS0+cHJvYyA9PSBOVUxMKSB7CgkJCQkJcmVmLT5kZWF0
aC0+d29yay50eXBlID0gQklOREVSX1dPUktfREVBRF9CSU5ERVI7CgkJCQkJaWYgKHRocmVhZC0+bG9v
cGVyICYgKEJJTkRFUl9MT09QRVJfU1RBVEVfUkVHSVNURVJFRCB8IEJJTkRFUl9MT09QRVJfU1RBVEVf
RU5URVJFRCkpIHsKCQkJCQkJbGlzdF9hZGRfdGFpbCgmcmVmLT5kZWF0aC0+d29yay5lbnRyeSwgJnRo
cmVhZC0+dG9kbyk7CgkJCQkJfSBlbHNlIHsKCQkJCQkJbGlzdF9hZGRfdGFpbCgmcmVmLT5kZWF0aC0+
d29yay5lbnRyeSwgJnByb2MtPnRvZG8pOwoJCQkJCQl3YWtlX3VwX2ludGVycnVwdGlibGUoJnByb2Mt
PndhaXQpOwoJCQkJCX0KCQkJCX0KCQkJfSBlbHNlIHsKCQkJCWlmIChyZWYtPmRlYXRoID09IE5VTEwp
IHsKCQkJCQliaW5kZXJfdXNlcl9lcnJvcigiJWQ6JWQgQkNfQ0xFQVJfREVBVEhfTk9USUZJQ0FUSU9O
IGRlYXRoIG5vdGlmaWNhdGlvbiBub3QgYWN0aXZlXG4iLAoJCQkJCQlwcm9jLT5waWQsIHRocmVhZC0+
cGlkKTsKCQkJCQlicmVhazsKCQkJCX0KCQkJCWRlYXRoID0gcmVmLT5kZWF0aDsKCQkJCWlmIChkZWF0
aC0+Y29va2llICE9IGNvb2tpZSkgewoJCQkJCWJpbmRlcl91c2VyX2Vycm9yKCIlZDolZCBCQ19DTEVB
Ul9ERUFUSF9OT1RJRklDQVRJT04gZGVhdGggbm90aWZpY2F0aW9uIGNvb2tpZSBtaXNtYXRjaCAlMDE2
bGx4ICE9ICUwMTZsbHhcbiIsCgkJCQkJCXByb2MtPnBpZCwgdGhyZWFkLT5waWQsCgkJCQkJCSh1NjQp
ZGVhdGgtPmNvb2tpZSwKCQkJCQkJKHU2NCljb29raWUpOwoJCQkJCWJyZWFrOwoJCQkJfQoJCQkJcmVm
LT5kZWF0aCA9IE5VTEw7CgkJCQlpZiAobGlzdF9lbXB0eSgmZGVhdGgtPndvcmsuZW50cnkpKSB7CgkJ
CQkJZGVhdGgtPndvcmsudHlwZSA9IEJJTkRFUl9XT1JLX0NMRUFSX0RFQVRIX05PVElGSUNBVElPTjsK
CQkJCQlpZiAodGhyZWFkLT5sb29wZXIgJiAoQklOREVSX0xPT1BFUl9TVEFURV9SRUdJU1RFUkVEIHwg
QklOREVSX0xPT1BFUl9TVEFURV9FTlRFUkVEKSkgewoJCQkJCQlsaXN0X2FkZF90YWlsKCZkZWF0aC0+
d29yay5lbnRyeSwgJnRocmVhZC0+dG9kbyk7CgkJCQkJfSBlbHNlIHsKCQkJCQkJbGlzdF9hZGRfdGFp
bCgmZGVhdGgtPndvcmsuZW50cnksICZwcm9jLT50b2RvKTsKCQkJCQkJd2FrZV91cF9pbnRlcnJ1cHRp
YmxlKCZwcm9jLT53YWl0KTsKCQkJCQl9CgkJCQl9IGVsc2UgewoJCQkJCUJVR19PTihkZWF0aC0+d29y
ay50eXBlICE9IEJJTkRFUl9XT1JLX0RFQURfQklOREVSKTsKCQkJCQlkZWF0aC0+d29yay50eXBlID0g
QklOREVSX1dPUktfREVBRF9CSU5ERVJfQU5EX0NMRUFSOwoJCQkJfQoJCQl9CgkJfSBicmVhazsKCQlj
YXNlIEJDX0RFQURfQklOREVSX0RPTkU6IHsKCQkJc3RydWN0IGJpbmRlcl93b3JrICp3OwoJCQliaW5k
ZXJfdWludHB0cl90IGNvb2tpZTsKCQkJc3RydWN0IGJpbmRlcl9yZWZfZGVhdGggKmRlYXRoID0gTlVM
TDsKCgkJCWlmIChnZXRfdXNlcihjb29raWUsIChiaW5kZXJfdWludHB0cl90IF9fdXNlciAqKXB0cikp
CgkJCQlyZXR1cm4gLUVGQVVMVDsKCgkJCXB0ciArPSBzaXplb2Yodm9pZCAqKTsKCQkJbGlzdF9mb3Jf
ZWFjaF9lbnRyeSh3LCAmcHJvYy0+ZGVsaXZlcmVkX2RlYXRoLCBlbnRyeSkgewoJCQkJc3RydWN0IGJp
bmRlcl9yZWZfZGVhdGggKnRtcF9kZWF0aCA9IGNvbnRhaW5lcl9vZih3LCBzdHJ1Y3QgYmluZGVyX3Jl
Zl9kZWF0aCwgd29yayk7CgoJCQkJaWYgKHRtcF9kZWF0aC0+Y29va2llID09IGNvb2tpZSkgewoJCQkJ
CWRlYXRoID0gdG1wX2RlYXRoOwoJCQkJCWJyZWFrOwoJCQkJfQoJCQl9CgkJCWJpbmRlcl9kZWJ1ZyhC
SU5ERVJfREVCVUdfREVBRF9CSU5ERVIsCgkJCQkgICAgICIlZDolZCBCQ19ERUFEX0JJTkRFUl9ET05F
ICUwMTZsbHggZm91bmQgJXBcbiIsCgkJCQkgICAgIHByb2MtPnBpZCwgdGhyZWFkLT5waWQsICh1NjQp
Y29va2llLAoJCQkJICAgICBkZWF0aCk7CgkJCWlmIChkZWF0aCA9PSBOVUxMKSB7CgkJCQliaW5kZXJf
dXNlcl9lcnJvcigiJWQ6JWQgQkNfREVBRF9CSU5ERVJfRE9ORSAlMDE2bGx4IG5vdCBmb3VuZFxuIiwK
CQkJCQlwcm9jLT5waWQsIHRocmVhZC0+cGlkLCAodTY0KWNvb2tpZSk7CgkJCQlicmVhazsKCQkJfQoK
CQkJbGlzdF9kZWxfaW5pdCgmZGVhdGgtPndvcmsuZW50cnkpOwoJCQlpZiAoZGVhdGgtPndvcmsudHlw
ZSA9PSBCSU5ERVJfV09SS19ERUFEX0JJTkRFUl9BTkRfQ0xFQVIpIHsKCQkJCWRlYXRoLT53b3JrLnR5
cGUgPSBCSU5ERVJfV09SS19DTEVBUl9ERUFUSF9OT1RJRklDQVRJT047CgkJCQlpZiAodGhyZWFkLT5s
b29wZXIgJiAoQklOREVSX0xPT1BFUl9TVEFURV9SRUdJU1RFUkVEIHwgQklOREVSX0xPT1BFUl9TVEFU
RV9FTlRFUkVEKSkgewoJCQkJCWxpc3RfYWRkX3RhaWwoJmRlYXRoLT53b3JrLmVudHJ5LCAmdGhyZWFk
LT50b2RvKTsKCQkJCX0gZWxzZSB7CgkJCQkJbGlzdF9hZGRfdGFpbCgmZGVhdGgtPndvcmsuZW50cnks
ICZwcm9jLT50b2RvKTsKCQkJCQl3YWtlX3VwX2ludGVycnVwdGlibGUoJnByb2MtPndhaXQpOwoJCQkJ
fQoJCQl9CgkJfSBicmVhazsKCgkJZGVmYXVsdDoKCQkJcHJfZXJyKCIlZDolZCB1bmtub3duIGNvbW1h
bmQgJWRcbiIsCgkJCSAgICAgICBwcm9jLT5waWQsIHRocmVhZC0+cGlkLCBjbWQpOwoJCQlyZXR1cm4g
LUVJTlZBTDsKCQl9CgkJKmNvbnN1bWVkID0gcHRyIC0gYnVmZmVyOwoJfQoJcmV0dXJuIDA7Cn0KCnN0
YXRpYyB2b2lkIGJpbmRlcl9zdGF0X2JyKHN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYywKCQkJICAgc3Ry
dWN0IGJpbmRlcl90aHJlYWQgKnRocmVhZCwgdWludDMyX3QgY21kKQp7Cgl0cmFjZV9iaW5kZXJfcmV0
dXJuKGNtZCk7CglpZiAoX0lPQ19OUihjbWQpIDwgQVJSQVlfU0laRShiaW5kZXJfc3RhdHMuYnIpKSB7
CgkJYmluZGVyX3N0YXRzLmJyW19JT0NfTlIoY21kKV0rKzsKCQlwcm9jLT5zdGF0cy5icltfSU9DX05S
KGNtZCldKys7CgkJdGhyZWFkLT5zdGF0cy5icltfSU9DX05SKGNtZCldKys7Cgl9Cn0KCnN0YXRpYyBp
bnQgYmluZGVyX2hhc19wcm9jX3dvcmsoc3RydWN0IGJpbmRlcl9wcm9jICpwcm9jLAoJCQkJc3RydWN0
IGJpbmRlcl90aHJlYWQgKnRocmVhZCkKewoJcmV0dXJuICFsaXN0X2VtcHR5KCZwcm9jLT50b2RvKSB8
fAoJCSh0aHJlYWQtPmxvb3BlciAmIEJJTkRFUl9MT09QRVJfU1RBVEVfTkVFRF9SRVRVUk4pOwp9Cgpz
dGF0aWMgaW50IGJpbmRlcl9oYXNfdGhyZWFkX3dvcmsoc3RydWN0IGJpbmRlcl90aHJlYWQgKnRocmVh
ZCkKewoJcmV0dXJuICFsaXN0X2VtcHR5KCZ0aHJlYWQtPnRvZG8pIHx8IHRocmVhZC0+cmV0dXJuX2Vy
cm9yICE9IEJSX09LIHx8CgkJKHRocmVhZC0+bG9vcGVyICYgQklOREVSX0xPT1BFUl9TVEFURV9ORUVE
X1JFVFVSTik7Cn0KCnN0YXRpYyBpbnQgYmluZGVyX3RocmVhZF9yZWFkKHN0cnVjdCBiaW5kZXJfcHJv
YyAqcHJvYywKCQkJICAgICAgc3RydWN0IGJpbmRlcl90aHJlYWQgKnRocmVhZCwKCQkJICAgICAgYmlu
ZGVyX3VpbnRwdHJfdCBiaW5kZXJfYnVmZmVyLCBzaXplX3Qgc2l6ZSwKCQkJICAgICAgYmluZGVyX3Np
emVfdCAqY29uc3VtZWQsIGludCBub25fYmxvY2spCnsKCXZvaWQgX191c2VyICpidWZmZXIgPSAodm9p
ZCBfX3VzZXIgKikodWludHB0cl90KWJpbmRlcl9idWZmZXI7Cgl2b2lkIF9fdXNlciAqcHRyID0gYnVm
ZmVyICsgKmNvbnN1bWVkOwoJdm9pZCBfX3VzZXIgKmVuZCA9IGJ1ZmZlciArIHNpemU7CgoJaW50IHJl
dCA9IDA7CglpbnQgd2FpdF9mb3JfcHJvY193b3JrOwoKCWlmICgqY29uc3VtZWQgPT0gMCkgewoJCWlm
IChwdXRfdXNlcihCUl9OT09QLCAodWludDMyX3QgX191c2VyICopcHRyKSkKCQkJcmV0dXJuIC1FRkFV
TFQ7CgkJcHRyICs9IHNpemVvZih1aW50MzJfdCk7Cgl9CgpyZXRyeToKCXdhaXRfZm9yX3Byb2Nfd29y
ayA9IHRocmVhZC0+dHJhbnNhY3Rpb25fc3RhY2sgPT0gTlVMTCAmJgoJCQkJbGlzdF9lbXB0eSgmdGhy
ZWFkLT50b2RvKTsKCglpZiAodGhyZWFkLT5yZXR1cm5fZXJyb3IgIT0gQlJfT0sgJiYgcHRyIDwgZW5k
KSB7CgkJaWYgKHRocmVhZC0+cmV0dXJuX2Vycm9yMiAhPSBCUl9PSykgewoJCQlpZiAocHV0X3VzZXIo
dGhyZWFkLT5yZXR1cm5fZXJyb3IyLCAodWludDMyX3QgX191c2VyICopcHRyKSkKCQkJCXJldHVybiAt
RUZBVUxUOwoJCQlwdHIgKz0gc2l6ZW9mKHVpbnQzMl90KTsKCQkJYmluZGVyX3N0YXRfYnIocHJvYywg
dGhyZWFkLCB0aHJlYWQtPnJldHVybl9lcnJvcjIpOwoJCQlpZiAocHRyID09IGVuZCkKCQkJCWdvdG8g
ZG9uZTsKCQkJdGhyZWFkLT5yZXR1cm5fZXJyb3IyID0gQlJfT0s7CgkJfQoJCWlmIChwdXRfdXNlcih0
aHJlYWQtPnJldHVybl9lcnJvciwgKHVpbnQzMl90IF9fdXNlciAqKXB0cikpCgkJCXJldHVybiAtRUZB
VUxUOwoJCXB0ciArPSBzaXplb2YodWludDMyX3QpOwoJCWJpbmRlcl9zdGF0X2JyKHByb2MsIHRocmVh
ZCwgdGhyZWFkLT5yZXR1cm5fZXJyb3IpOwoJCXRocmVhZC0+cmV0dXJuX2Vycm9yID0gQlJfT0s7CgkJ
Z290byBkb25lOwoJfQoKCgl0aHJlYWQtPmxvb3BlciB8PSBCSU5ERVJfTE9PUEVSX1NUQVRFX1dBSVRJ
Tkc7CglpZiAod2FpdF9mb3JfcHJvY193b3JrKQoJCXByb2MtPnJlYWR5X3RocmVhZHMrKzsKCgliaW5k
ZXJfdW5sb2NrKF9fZnVuY19fKTsKCgl0cmFjZV9iaW5kZXJfd2FpdF9mb3Jfd29yayh3YWl0X2Zvcl9w
cm9jX3dvcmssCgkJCQkgICAhIXRocmVhZC0+dHJhbnNhY3Rpb25fc3RhY2ssCgkJCQkgICAhbGlzdF9l
bXB0eSgmdGhyZWFkLT50b2RvKSk7CglpZiAod2FpdF9mb3JfcHJvY193b3JrKSB7CgkJaWYgKCEodGhy
ZWFkLT5sb29wZXIgJiAoQklOREVSX0xPT1BFUl9TVEFURV9SRUdJU1RFUkVEIHwKCQkJCQlCSU5ERVJf
TE9PUEVSX1NUQVRFX0VOVEVSRUQpKSkgewoJCQliaW5kZXJfdXNlcl9lcnJvcigiJWQ6JWQgRVJST1I6
IFRocmVhZCB3YWl0aW5nIGZvciBwcm9jZXNzIHdvcmsgYmVmb3JlIGNhbGxpbmcgQkNfUkVHSVNURVJf
TE9PUEVSIG9yIEJDX0VOVEVSX0xPT1BFUiAoc3RhdGUgJXgpXG4iLAoJCQkJcHJvYy0+cGlkLCB0aHJl
YWQtPnBpZCwgdGhyZWFkLT5sb29wZXIpOwoJCQl3YWl0X2V2ZW50X2ludGVycnVwdGlibGUoYmluZGVy
X3VzZXJfZXJyb3Jfd2FpdCwKCQkJCQkJIGJpbmRlcl9zdG9wX29uX3VzZXJfZXJyb3IgPCAyKTsKCQl9
CgkJYmluZGVyX3NldF9uaWNlKHByb2MtPmRlZmF1bHRfcHJpb3JpdHkpOwoJCWlmIChub25fYmxvY2sp
IHsKCQkJaWYgKCFiaW5kZXJfaGFzX3Byb2Nfd29yayhwcm9jLCB0aHJlYWQpKQoJCQkJcmV0ID0gLUVB
R0FJTjsKCQl9IGVsc2UKCQkJcmV0ID0gd2FpdF9ldmVudF9mcmVlemFibGVfZXhjbHVzaXZlKHByb2Mt
PndhaXQsIGJpbmRlcl9oYXNfcHJvY193b3JrKHByb2MsIHRocmVhZCkpOwoJfSBlbHNlIHsKCQlpZiAo
bm9uX2Jsb2NrKSB7CgkJCWlmICghYmluZGVyX2hhc190aHJlYWRfd29yayh0aHJlYWQpKQoJCQkJcmV0
ID0gLUVBR0FJTjsKCQl9IGVsc2UKCQkJcmV0ID0gd2FpdF9ldmVudF9mcmVlemFibGUodGhyZWFkLT53
YWl0LCBiaW5kZXJfaGFzX3RocmVhZF93b3JrKHRocmVhZCkpOwoJfQoKCWJpbmRlcl9sb2NrKF9fZnVu
Y19fKTsKCglpZiAod2FpdF9mb3JfcHJvY193b3JrKQoJCXByb2MtPnJlYWR5X3RocmVhZHMtLTsKCXRo
cmVhZC0+bG9vcGVyICY9IH5CSU5ERVJfTE9PUEVSX1NUQVRFX1dBSVRJTkc7CgoJaWYgKHJldCkKCQly
ZXR1cm4gcmV0OwoKCXdoaWxlICgxKSB7CgkJdWludDMyX3QgY21kOwoJCXN0cnVjdCBiaW5kZXJfdHJh
bnNhY3Rpb25fZGF0YSB0cjsKCQlzdHJ1Y3QgYmluZGVyX3dvcmsgKnc7CgkJc3RydWN0IGJpbmRlcl90
cmFuc2FjdGlvbiAqdCA9IE5VTEw7CgoJCWlmICghbGlzdF9lbXB0eSgmdGhyZWFkLT50b2RvKSkgewoJ
CQl3ID0gbGlzdF9maXJzdF9lbnRyeSgmdGhyZWFkLT50b2RvLCBzdHJ1Y3QgYmluZGVyX3dvcmssCgkJ
CQkJICAgICBlbnRyeSk7CgkJfSBlbHNlIGlmICghbGlzdF9lbXB0eSgmcHJvYy0+dG9kbykgJiYgd2Fp
dF9mb3JfcHJvY193b3JrKSB7CgkJCXcgPSBsaXN0X2ZpcnN0X2VudHJ5KCZwcm9jLT50b2RvLCBzdHJ1
Y3QgYmluZGVyX3dvcmssCgkJCQkJICAgICBlbnRyeSk7CgkJfSBlbHNlIHsKCQkJLyogbm8gZGF0YSBh
ZGRlZCAqLwoJCQlpZiAocHRyIC0gYnVmZmVyID09IDQgJiYKCQkJICAgICEodGhyZWFkLT5sb29wZXIg
JiBCSU5ERVJfTE9PUEVSX1NUQVRFX05FRURfUkVUVVJOKSkKCQkJCWdvdG8gcmV0cnk7CgkJCWJyZWFr
OwoJCX0KCgkJaWYgKGVuZCAtIHB0ciA8IHNpemVvZih0cikgKyA0KQoJCQlicmVhazsKCgkJc3dpdGNo
ICh3LT50eXBlKSB7CgkJY2FzZSBCSU5ERVJfV09SS19UUkFOU0FDVElPTjogewoJCQl0ID0gY29udGFp
bmVyX29mKHcsIHN0cnVjdCBiaW5kZXJfdHJhbnNhY3Rpb24sIHdvcmspOwoJCX0gYnJlYWs7CgkJY2Fz
ZSBCSU5ERVJfV09SS19UUkFOU0FDVElPTl9DT01QTEVURTogewoJCQljbWQgPSBCUl9UUkFOU0FDVElP
Tl9DT01QTEVURTsKCQkJaWYgKHB1dF91c2VyKGNtZCwgKHVpbnQzMl90IF9fdXNlciAqKXB0cikpCgkJ
CQlyZXR1cm4gLUVGQVVMVDsKCQkJcHRyICs9IHNpemVvZih1aW50MzJfdCk7CgoJCQliaW5kZXJfc3Rh
dF9icihwcm9jLCB0aHJlYWQsIGNtZCk7CgkJCWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfVFJBTlNB
Q1RJT05fQ09NUExFVEUsCgkJCQkgICAgICIlZDolZCBCUl9UUkFOU0FDVElPTl9DT01QTEVURVxuIiwK
CQkJCSAgICAgcHJvYy0+cGlkLCB0aHJlYWQtPnBpZCk7CgoJCQlsaXN0X2RlbCgmdy0+ZW50cnkpOwoJ
CQlrZnJlZSh3KTsKCQkJYmluZGVyX3N0YXRzX2RlbGV0ZWQoQklOREVSX1NUQVRfVFJBTlNBQ1RJT05f
Q09NUExFVEUpOwoJCX0gYnJlYWs7CgkJY2FzZSBCSU5ERVJfV09SS19OT0RFOiB7CgkJCXN0cnVjdCBi
aW5kZXJfbm9kZSAqbm9kZSA9IGNvbnRhaW5lcl9vZih3LCBzdHJ1Y3QgYmluZGVyX25vZGUsIHdvcmsp
OwoJCQl1aW50MzJfdCBjbWQgPSBCUl9OT09QOwoJCQljb25zdCBjaGFyICpjbWRfbmFtZTsKCQkJaW50
IHN0cm9uZyA9IG5vZGUtPmludGVybmFsX3N0cm9uZ19yZWZzIHx8IG5vZGUtPmxvY2FsX3N0cm9uZ19y
ZWZzOwoJCQlpbnQgd2VhayA9ICFobGlzdF9lbXB0eSgmbm9kZS0+cmVmcykgfHwgbm9kZS0+bG9jYWxf
d2Vha19yZWZzIHx8IHN0cm9uZzsKCgkJCWlmICh3ZWFrICYmICFub2RlLT5oYXNfd2Vha19yZWYpIHsK
CQkJCWNtZCA9IEJSX0lOQ1JFRlM7CgkJCQljbWRfbmFtZSA9ICJCUl9JTkNSRUZTIjsKCQkJCW5vZGUt
Pmhhc193ZWFrX3JlZiA9IDE7CgkJCQlub2RlLT5wZW5kaW5nX3dlYWtfcmVmID0gMTsKCQkJCW5vZGUt
PmxvY2FsX3dlYWtfcmVmcysrOwoJCQl9IGVsc2UgaWYgKHN0cm9uZyAmJiAhbm9kZS0+aGFzX3N0cm9u
Z19yZWYpIHsKCQkJCWNtZCA9IEJSX0FDUVVJUkU7CgkJCQljbWRfbmFtZSA9ICJCUl9BQ1FVSVJFIjsK
CQkJCW5vZGUtPmhhc19zdHJvbmdfcmVmID0gMTsKCQkJCW5vZGUtPnBlbmRpbmdfc3Ryb25nX3JlZiA9
IDE7CgkJCQlub2RlLT5sb2NhbF9zdHJvbmdfcmVmcysrOwoJCQl9IGVsc2UgaWYgKCFzdHJvbmcgJiYg
bm9kZS0+aGFzX3N0cm9uZ19yZWYpIHsKCQkJCWNtZCA9IEJSX1JFTEVBU0U7CgkJCQljbWRfbmFtZSA9
ICJCUl9SRUxFQVNFIjsKCQkJCW5vZGUtPmhhc19zdHJvbmdfcmVmID0gMDsKCQkJfSBlbHNlIGlmICgh
d2VhayAmJiBub2RlLT5oYXNfd2Vha19yZWYpIHsKCQkJCWNtZCA9IEJSX0RFQ1JFRlM7CgkJCQljbWRf
bmFtZSA9ICJCUl9ERUNSRUZTIjsKCQkJCW5vZGUtPmhhc193ZWFrX3JlZiA9IDA7CgkJCX0KCQkJaWYg
KGNtZCAhPSBCUl9OT09QKSB7CgkJCQlpZiAocHV0X3VzZXIoY21kLCAodWludDMyX3QgX191c2VyICop
cHRyKSkKCQkJCQlyZXR1cm4gLUVGQVVMVDsKCQkJCXB0ciArPSBzaXplb2YodWludDMyX3QpOwoJCQkJ
aWYgKHB1dF91c2VyKG5vZGUtPnB0ciwKCQkJCQkgICAgIChiaW5kZXJfdWludHB0cl90IF9fdXNlciAq
KXB0cikpCgkJCQkJcmV0dXJuIC1FRkFVTFQ7CgkJCQlwdHIgKz0gc2l6ZW9mKGJpbmRlcl91aW50cHRy
X3QpOwoJCQkJaWYgKHB1dF91c2VyKG5vZGUtPmNvb2tpZSwKCQkJCQkgICAgIChiaW5kZXJfdWludHB0
cl90IF9fdXNlciAqKXB0cikpCgkJCQkJcmV0dXJuIC1FRkFVTFQ7CgkJCQlwdHIgKz0gc2l6ZW9mKGJp
bmRlcl91aW50cHRyX3QpOwoKCQkJCWJpbmRlcl9zdGF0X2JyKHByb2MsIHRocmVhZCwgY21kKTsKCQkJ
CWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfVVNFUl9SRUZTLAoJCQkJCSAgICAgIiVkOiVkICVzICVk
IHUlMDE2bGx4IGMlMDE2bGx4XG4iLAoJCQkJCSAgICAgcHJvYy0+cGlkLCB0aHJlYWQtPnBpZCwgY21k
X25hbWUsCgkJCQkJICAgICBub2RlLT5kZWJ1Z19pZCwKCQkJCQkgICAgICh1NjQpbm9kZS0+cHRyLCAo
dTY0KW5vZGUtPmNvb2tpZSk7CgkJCX0gZWxzZSB7CgkJCQlsaXN0X2RlbF9pbml0KCZ3LT5lbnRyeSk7
CgkJCQlpZiAoIXdlYWsgJiYgIXN0cm9uZykgewoJCQkJCWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdf
SU5URVJOQUxfUkVGUywKCQkJCQkJICAgICAiJWQ6JWQgbm9kZSAlZCB1JTAxNmxseCBjJTAxNmxseCBk
ZWxldGVkXG4iLAoJCQkJCQkgICAgIHByb2MtPnBpZCwgdGhyZWFkLT5waWQsCgkJCQkJCSAgICAgbm9k
ZS0+ZGVidWdfaWQsCgkJCQkJCSAgICAgKHU2NClub2RlLT5wdHIsCgkJCQkJCSAgICAgKHU2NClub2Rl
LT5jb29raWUpOwoJCQkJCXJiX2VyYXNlKCZub2RlLT5yYl9ub2RlLCAmcHJvYy0+bm9kZXMpOwoJCQkJ
CWtmcmVlKG5vZGUpOwoJCQkJCWJpbmRlcl9zdGF0c19kZWxldGVkKEJJTkRFUl9TVEFUX05PREUpOwoJ
CQkJfSBlbHNlIHsKCQkJCQliaW5kZXJfZGVidWcoQklOREVSX0RFQlVHX0lOVEVSTkFMX1JFRlMsCgkJ
CQkJCSAgICAgIiVkOiVkIG5vZGUgJWQgdSUwMTZsbHggYyUwMTZsbHggc3RhdGUgdW5jaGFuZ2VkXG4i
LAoJCQkJCQkgICAgIHByb2MtPnBpZCwgdGhyZWFkLT5waWQsCgkJCQkJCSAgICAgbm9kZS0+ZGVidWdf
aWQsCgkJCQkJCSAgICAgKHU2NClub2RlLT5wdHIsCgkJCQkJCSAgICAgKHU2NClub2RlLT5jb29raWUp
OwoJCQkJfQoJCQl9CgkJfSBicmVhazsKCQljYXNlIEJJTkRFUl9XT1JLX0RFQURfQklOREVSOgoJCWNh
c2UgQklOREVSX1dPUktfREVBRF9CSU5ERVJfQU5EX0NMRUFSOgoJCWNhc2UgQklOREVSX1dPUktfQ0xF
QVJfREVBVEhfTk9USUZJQ0FUSU9OOiB7CgkJCXN0cnVjdCBiaW5kZXJfcmVmX2RlYXRoICpkZWF0aDsK
CQkJdWludDMyX3QgY21kOwoKCQkJZGVhdGggPSBjb250YWluZXJfb2Yodywgc3RydWN0IGJpbmRlcl9y
ZWZfZGVhdGgsIHdvcmspOwoJCQlpZiAody0+dHlwZSA9PSBCSU5ERVJfV09SS19DTEVBUl9ERUFUSF9O
T1RJRklDQVRJT04pCgkJCQljbWQgPSBCUl9DTEVBUl9ERUFUSF9OT1RJRklDQVRJT05fRE9ORTsKCQkJ
ZWxzZQoJCQkJY21kID0gQlJfREVBRF9CSU5ERVI7CgkJCWlmIChwdXRfdXNlcihjbWQsICh1aW50MzJf
dCBfX3VzZXIgKilwdHIpKQoJCQkJcmV0dXJuIC1FRkFVTFQ7CgkJCXB0ciArPSBzaXplb2YodWludDMy
X3QpOwoJCQlpZiAocHV0X3VzZXIoZGVhdGgtPmNvb2tpZSwKCQkJCSAgICAgKGJpbmRlcl91aW50cHRy
X3QgX191c2VyICopcHRyKSkKCQkJCXJldHVybiAtRUZBVUxUOwoJCQlwdHIgKz0gc2l6ZW9mKGJpbmRl
cl91aW50cHRyX3QpOwoJCQliaW5kZXJfc3RhdF9icihwcm9jLCB0aHJlYWQsIGNtZCk7CgkJCWJpbmRl
cl9kZWJ1ZyhCSU5ERVJfREVCVUdfREVBVEhfTk9USUZJQ0FUSU9OLAoJCQkJICAgICAiJWQ6JWQgJXMg
JTAxNmxseFxuIiwKCQkJCSAgICAgIHByb2MtPnBpZCwgdGhyZWFkLT5waWQsCgkJCQkgICAgICBjbWQg
PT0gQlJfREVBRF9CSU5ERVIgPwoJCQkJICAgICAgIkJSX0RFQURfQklOREVSIiA6CgkJCQkgICAgICAi
QlJfQ0xFQVJfREVBVEhfTk9USUZJQ0FUSU9OX0RPTkUiLAoJCQkJICAgICAgKHU2NClkZWF0aC0+Y29v
a2llKTsKCgkJCWlmICh3LT50eXBlID09IEJJTkRFUl9XT1JLX0NMRUFSX0RFQVRIX05PVElGSUNBVElP
TikgewoJCQkJbGlzdF9kZWwoJnctPmVudHJ5KTsKCQkJCWtmcmVlKGRlYXRoKTsKCQkJCWJpbmRlcl9z
dGF0c19kZWxldGVkKEJJTkRFUl9TVEFUX0RFQVRIKTsKCQkJfSBlbHNlCgkJCQlsaXN0X21vdmUoJnct
PmVudHJ5LCAmcHJvYy0+ZGVsaXZlcmVkX2RlYXRoKTsKCQkJaWYgKGNtZCA9PSBCUl9ERUFEX0JJTkRF
UikKCQkJCWdvdG8gZG9uZTsgLyogREVBRF9CSU5ERVIgbm90aWZpY2F0aW9ucyBjYW4gY2F1c2UgdHJh
bnNhY3Rpb25zICovCgkJfSBicmVhazsKCQl9CgoJCWlmICghdCkKCQkJY29udGludWU7CgoJCUJVR19P
Tih0LT5idWZmZXIgPT0gTlVMTCk7CgkJaWYgKHQtPmJ1ZmZlci0+dGFyZ2V0X25vZGUpIHsKCQkJc3Ry
dWN0IGJpbmRlcl9ub2RlICp0YXJnZXRfbm9kZSA9IHQtPmJ1ZmZlci0+dGFyZ2V0X25vZGU7CgoJCQl0
ci50YXJnZXQucHRyID0gdGFyZ2V0X25vZGUtPnB0cjsKCQkJdHIuY29va2llID0gIHRhcmdldF9ub2Rl
LT5jb29raWU7CgkJCXQtPnNhdmVkX3ByaW9yaXR5ID0gdGFza19uaWNlKGN1cnJlbnQpOwoJCQlpZiAo
dC0+cHJpb3JpdHkgPCB0YXJnZXRfbm9kZS0+bWluX3ByaW9yaXR5ICYmCgkJCSAgICAhKHQtPmZsYWdz
ICYgVEZfT05FX1dBWSkpCgkJCQliaW5kZXJfc2V0X25pY2UodC0+cHJpb3JpdHkpOwoJCQllbHNlIGlm
ICghKHQtPmZsYWdzICYgVEZfT05FX1dBWSkgfHwKCQkJCSB0LT5zYXZlZF9wcmlvcml0eSA+IHRhcmdl
dF9ub2RlLT5taW5fcHJpb3JpdHkpCgkJCQliaW5kZXJfc2V0X25pY2UodGFyZ2V0X25vZGUtPm1pbl9w
cmlvcml0eSk7CgkJCWNtZCA9IEJSX1RSQU5TQUNUSU9OOwoJCX0gZWxzZSB7CgkJCXRyLnRhcmdldC5w
dHIgPSAwOwoJCQl0ci5jb29raWUgPSAwOwoJCQljbWQgPSBCUl9SRVBMWTsKCQl9CgkJdHIuY29kZSA9
IHQtPmNvZGU7CgkJdHIuZmxhZ3MgPSB0LT5mbGFnczsKCQl0ci5zZW5kZXJfZXVpZCA9IGZyb21fa3Vp
ZChjdXJyZW50X3VzZXJfbnMoKSwgdC0+c2VuZGVyX2V1aWQpOwoKCQlpZiAodC0+ZnJvbSkgewoJCQlz
dHJ1Y3QgdGFza19zdHJ1Y3QgKnNlbmRlciA9IHQtPmZyb20tPnByb2MtPnRzazsKCgkJCXRyLnNlbmRl
cl9waWQgPSB0YXNrX3RnaWRfbnJfbnMoc2VuZGVyLAoJCQkJCQkJdGFza19hY3RpdmVfcGlkX25zKGN1
cnJlbnQpKTsKCQl9IGVsc2UgewoJCQl0ci5zZW5kZXJfcGlkID0gMDsKCQl9CgoJCXRyLmRhdGFfc2l6
ZSA9IHQtPmJ1ZmZlci0+ZGF0YV9zaXplOwoJCXRyLm9mZnNldHNfc2l6ZSA9IHQtPmJ1ZmZlci0+b2Zm
c2V0c19zaXplOwoJCXRyLmRhdGEucHRyLmJ1ZmZlciA9IChiaW5kZXJfdWludHB0cl90KSgKCQkJCQko
dWludHB0cl90KXQtPmJ1ZmZlci0+ZGF0YSArCgkJCQkJcHJvYy0+dXNlcl9idWZmZXJfb2Zmc2V0KTsK
CQl0ci5kYXRhLnB0ci5vZmZzZXRzID0gdHIuZGF0YS5wdHIuYnVmZmVyICsKCQkJCQlBTElHTih0LT5i
dWZmZXItPmRhdGFfc2l6ZSwKCQkJCQkgICAgc2l6ZW9mKHZvaWQgKikpOwoKCQlpZiAocHV0X3VzZXIo
Y21kLCAodWludDMyX3QgX191c2VyICopcHRyKSkKCQkJcmV0dXJuIC1FRkFVTFQ7CgkJcHRyICs9IHNp
emVvZih1aW50MzJfdCk7CgkJaWYgKGNvcHlfdG9fdXNlcihwdHIsICZ0ciwgc2l6ZW9mKHRyKSkpCgkJ
CXJldHVybiAtRUZBVUxUOwoJCXB0ciArPSBzaXplb2YodHIpOwoKCQl0cmFjZV9iaW5kZXJfdHJhbnNh
Y3Rpb25fcmVjZWl2ZWQodCk7CgkJYmluZGVyX3N0YXRfYnIocHJvYywgdGhyZWFkLCBjbWQpOwoJCWJp
bmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfVFJBTlNBQ1RJT04sCgkJCSAgICAgIiVkOiVkICVzICVkICVk
OiVkLCBjbWQgJWQgc2l6ZSAlemQtJXpkIHB0ciAlMDE2bGx4LSUwMTZsbHhcbiIsCgkJCSAgICAgcHJv
Yy0+cGlkLCB0aHJlYWQtPnBpZCwKCQkJICAgICAoY21kID09IEJSX1RSQU5TQUNUSU9OKSA/ICJCUl9U
UkFOU0FDVElPTiIgOgoJCQkgICAgICJCUl9SRVBMWSIsCgkJCSAgICAgdC0+ZGVidWdfaWQsIHQtPmZy
b20gPyB0LT5mcm9tLT5wcm9jLT5waWQgOiAwLAoJCQkgICAgIHQtPmZyb20gPyB0LT5mcm9tLT5waWQg
OiAwLCBjbWQsCgkJCSAgICAgdC0+YnVmZmVyLT5kYXRhX3NpemUsIHQtPmJ1ZmZlci0+b2Zmc2V0c19z
aXplLAoJCQkgICAgICh1NjQpdHIuZGF0YS5wdHIuYnVmZmVyLCAodTY0KXRyLmRhdGEucHRyLm9mZnNl
dHMpOwoKCQlsaXN0X2RlbCgmdC0+d29yay5lbnRyeSk7CgkJdC0+YnVmZmVyLT5hbGxvd191c2VyX2Zy
ZWUgPSAxOwoJCWlmIChjbWQgPT0gQlJfVFJBTlNBQ1RJT04gJiYgISh0LT5mbGFncyAmIFRGX09ORV9X
QVkpKSB7CgkJCXQtPnRvX3BhcmVudCA9IHRocmVhZC0+dHJhbnNhY3Rpb25fc3RhY2s7CgkJCXQtPnRv
X3RocmVhZCA9IHRocmVhZDsKCQkJdGhyZWFkLT50cmFuc2FjdGlvbl9zdGFjayA9IHQ7CgkJfSBlbHNl
IHsKCQkJdC0+YnVmZmVyLT50cmFuc2FjdGlvbiA9IE5VTEw7CgkJCWtmcmVlKHQpOwoJCQliaW5kZXJf
c3RhdHNfZGVsZXRlZChCSU5ERVJfU1RBVF9UUkFOU0FDVElPTik7CgkJfQoJCWJyZWFrOwoJfQoKZG9u
ZToKCgkqY29uc3VtZWQgPSBwdHIgLSBidWZmZXI7CglpZiAocHJvYy0+cmVxdWVzdGVkX3RocmVhZHMg
KyBwcm9jLT5yZWFkeV90aHJlYWRzID09IDAgJiYKCSAgICBwcm9jLT5yZXF1ZXN0ZWRfdGhyZWFkc19z
dGFydGVkIDwgcHJvYy0+bWF4X3RocmVhZHMgJiYKCSAgICAodGhyZWFkLT5sb29wZXIgJiAoQklOREVS
X0xPT1BFUl9TVEFURV9SRUdJU1RFUkVEIHwKCSAgICAgQklOREVSX0xPT1BFUl9TVEFURV9FTlRFUkVE
KSkgLyogdGhlIHVzZXItc3BhY2UgY29kZSBmYWlscyB0byAqLwoJICAgICAvKnNwYXduIGEgbmV3IHRo
cmVhZCBpZiB3ZSBsZWF2ZSB0aGlzIG91dCAqLykgewoJCXByb2MtPnJlcXVlc3RlZF90aHJlYWRzKys7
CgkJYmluZGVyX2RlYnVnKEJJTkRFUl9ERUJVR19USFJFQURTLAoJCQkgICAgICIlZDolZCBCUl9TUEFX
Tl9MT09QRVJcbiIsCgkJCSAgICAgcHJvYy0+cGlkLCB0aHJlYWQtPnBpZCk7CgkJaWYgKHB1dF91c2Vy
KEJSX1NQQVdOX0xPT1BFUiwgKHVpbnQzMl90IF9fdXNlciAqKWJ1ZmZlcikpCgkJCXJldHVybiAtRUZB
VUxUOwoJCWJpbmRlcl9zdGF0X2JyKHByb2MsIHRocmVhZCwgQlJfU1BBV05fTE9PUEVSKTsKCX0KCXJl
dHVybiAwOwp9CgpzdGF0aWMgdm9pZCBiaW5kZXJfcmVsZWFzZV93b3JrKHN0cnVjdCBsaXN0X2hlYWQg
Kmxpc3QpCnsKCXN0cnVjdCBiaW5kZXJfd29yayAqdzsKCgl3aGlsZSAoIWxpc3RfZW1wdHkobGlzdCkp
IHsKCQl3ID0gbGlzdF9maXJzdF9lbnRyeShsaXN0LCBzdHJ1Y3QgYmluZGVyX3dvcmssIGVudHJ5KTsK
CQlsaXN0X2RlbF9pbml0KCZ3LT5lbnRyeSk7CgkJc3dpdGNoICh3LT50eXBlKSB7CgkJY2FzZSBCSU5E
RVJfV09SS19UUkFOU0FDVElPTjogewoJCQlzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uICp0OwoKCQkJ
dCA9IGNvbnRhaW5lcl9vZih3LCBzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uLCB3b3JrKTsKCQkJaWYg
KHQtPmJ1ZmZlci0+dGFyZ2V0X25vZGUgJiYKCQkJICAgICEodC0+ZmxhZ3MgJiBURl9PTkVfV0FZKSkg
ewoJCQkJYmluZGVyX3NlbmRfZmFpbGVkX3JlcGx5KHQsIEJSX0RFQURfUkVQTFkpOwoJCQl9IGVsc2Ug
ewoJCQkJYmluZGVyX2RlYnVnKEJJTkRFUl9ERUJVR19ERUFEX1RSQU5TQUNUSU9OLAoJCQkJCSJ1bmRl
bGl2ZXJlZCB0cmFuc2FjdGlvbiAlZFxuIiwKCQkJCQl0LT5kZWJ1Z19pZCk7CgkJCQl0LT5idWZmZXIt
PnRyYW5zYWN0aW9uID0gTlVMTDsKCQkJCWtmcmVlKHQpOwoJCQkJYmluZGVyX3N0YXRzX2RlbGV0ZWQo
QklOREVSX1NUQVRfVFJBTlNBQ1RJT04pOwoJCQl9CgkJfSBicmVhazsKCQljYXNlIEJJTkRFUl9XT1JL
X1RSQU5TQUNUSU9OX0NPTVBMRVRFOiB7CgkJCWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfREVBRF9U
UkFOU0FDVElPTiwKCQkJCSJ1bmRlbGl2ZXJlZCBUUkFOU0FDVElPTl9DT01QTEVURVxuIik7CgkJCWtm
cmVlKHcpOwoJCQliaW5kZXJfc3RhdHNfZGVsZXRlZChCSU5ERVJfU1RBVF9UUkFOU0FDVElPTl9DT01Q
TEVURSk7CgkJfSBicmVhazsKCQljYXNlIEJJTkRFUl9XT1JLX0RFQURfQklOREVSX0FORF9DTEVBUjoK
CQljYXNlIEJJTkRFUl9XT1JLX0NMRUFSX0RFQVRIX05PVElGSUNBVElPTjogewoJCQlzdHJ1Y3QgYmlu
ZGVyX3JlZl9kZWF0aCAqZGVhdGg7CgoJCQlkZWF0aCA9IGNvbnRhaW5lcl9vZih3LCBzdHJ1Y3QgYmlu
ZGVyX3JlZl9kZWF0aCwgd29yayk7CgkJCWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfREVBRF9UUkFO
U0FDVElPTiwKCQkJCSJ1bmRlbGl2ZXJlZCBkZWF0aCBub3RpZmljYXRpb24sICUwMTZsbHhcbiIsCgkJ
CQkodTY0KWRlYXRoLT5jb29raWUpOwoJCQlrZnJlZShkZWF0aCk7CgkJCWJpbmRlcl9zdGF0c19kZWxl
dGVkKEJJTkRFUl9TVEFUX0RFQVRIKTsKCQl9IGJyZWFrOwoJCWRlZmF1bHQ6CgkJCXByX2VycigidW5l
eHBlY3RlZCB3b3JrIHR5cGUsICVkLCBub3QgZnJlZWRcbiIsCgkJCSAgICAgICB3LT50eXBlKTsKCQkJ
YnJlYWs7CgkJfQoJfQoKfQoKc3RhdGljIHN0cnVjdCBiaW5kZXJfdGhyZWFkICpiaW5kZXJfZ2V0X3Ro
cmVhZChzdHJ1Y3QgYmluZGVyX3Byb2MgKnByb2MpCnsKCXN0cnVjdCBiaW5kZXJfdGhyZWFkICp0aHJl
YWQgPSBOVUxMOwoJc3RydWN0IHJiX25vZGUgKnBhcmVudCA9IE5VTEw7CglzdHJ1Y3QgcmJfbm9kZSAq
KnAgPSAmcHJvYy0+dGhyZWFkcy5yYl9ub2RlOwoKCXdoaWxlICgqcCkgewoJCXBhcmVudCA9ICpwOwoJ
CXRocmVhZCA9IHJiX2VudHJ5KHBhcmVudCwgc3RydWN0IGJpbmRlcl90aHJlYWQsIHJiX25vZGUpOwoK
CQlpZiAoY3VycmVudC0+cGlkIDwgdGhyZWFkLT5waWQpCgkJCXAgPSAmKCpwKS0+cmJfbGVmdDsKCQll
bHNlIGlmIChjdXJyZW50LT5waWQgPiB0aHJlYWQtPnBpZCkKCQkJcCA9ICYoKnApLT5yYl9yaWdodDsK
CQllbHNlCgkJCWJyZWFrOwoJfQoJaWYgKCpwID09IE5VTEwpIHsKCQl0aHJlYWQgPSBremFsbG9jKHNp
emVvZigqdGhyZWFkKSwgR0ZQX0tFUk5FTCk7CgkJaWYgKHRocmVhZCA9PSBOVUxMKQoJCQlyZXR1cm4g
TlVMTDsKCQliaW5kZXJfc3RhdHNfY3JlYXRlZChCSU5ERVJfU1RBVF9USFJFQUQpOwoJCXRocmVhZC0+
cHJvYyA9IHByb2M7CgkJdGhyZWFkLT5waWQgPSBjdXJyZW50LT5waWQ7CgkJaW5pdF93YWl0cXVldWVf
aGVhZCgmdGhyZWFkLT53YWl0KTsKCQlJTklUX0xJU1RfSEVBRCgmdGhyZWFkLT50b2RvKTsKCQlyYl9s
aW5rX25vZGUoJnRocmVhZC0+cmJfbm9kZSwgcGFyZW50LCBwKTsKCQlyYl9pbnNlcnRfY29sb3IoJnRo
cmVhZC0+cmJfbm9kZSwgJnByb2MtPnRocmVhZHMpOwoJCXRocmVhZC0+bG9vcGVyIHw9IEJJTkRFUl9M
T09QRVJfU1RBVEVfTkVFRF9SRVRVUk47CgkJdGhyZWFkLT5yZXR1cm5fZXJyb3IgPSBCUl9PSzsKCQl0
aHJlYWQtPnJldHVybl9lcnJvcjIgPSBCUl9PSzsKCX0KCXJldHVybiB0aHJlYWQ7Cn0KCnN0YXRpYyBp
bnQgYmluZGVyX2ZyZWVfdGhyZWFkKHN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYywKCQkJICAgICAgc3Ry
dWN0IGJpbmRlcl90aHJlYWQgKnRocmVhZCkKewoJc3RydWN0IGJpbmRlcl90cmFuc2FjdGlvbiAqdDsK
CXN0cnVjdCBiaW5kZXJfdHJhbnNhY3Rpb24gKnNlbmRfcmVwbHkgPSBOVUxMOwoJaW50IGFjdGl2ZV90
cmFuc2FjdGlvbnMgPSAwOwoKCXJiX2VyYXNlKCZ0aHJlYWQtPnJiX25vZGUsICZwcm9jLT50aHJlYWRz
KTsKCXQgPSB0aHJlYWQtPnRyYW5zYWN0aW9uX3N0YWNrOwoJaWYgKHQgJiYgdC0+dG9fdGhyZWFkID09
IHRocmVhZCkKCQlzZW5kX3JlcGx5ID0gdDsKCXdoaWxlICh0KSB7CgkJYWN0aXZlX3RyYW5zYWN0aW9u
cysrOwoJCWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfREVBRF9UUkFOU0FDVElPTiwKCQkJICAgICAi
cmVsZWFzZSAlZDolZCB0cmFuc2FjdGlvbiAlZCAlcywgc3RpbGwgYWN0aXZlXG4iLAoJCQkgICAgICBw
cm9jLT5waWQsIHRocmVhZC0+cGlkLAoJCQkgICAgIHQtPmRlYnVnX2lkLAoJCQkgICAgICh0LT50b190
aHJlYWQgPT0gdGhyZWFkKSA/ICJpbiIgOiAib3V0Iik7CgoJCWlmICh0LT50b190aHJlYWQgPT0gdGhy
ZWFkKSB7CgkJCXQtPnRvX3Byb2MgPSBOVUxMOwoJCQl0LT50b190aHJlYWQgPSBOVUxMOwoJCQlpZiAo
dC0+YnVmZmVyKSB7CgkJCQl0LT5idWZmZXItPnRyYW5zYWN0aW9uID0gTlVMTDsKCQkJCXQtPmJ1ZmZl
ciA9IE5VTEw7CgkJCX0KCQkJdCA9IHQtPnRvX3BhcmVudDsKCQl9IGVsc2UgaWYgKHQtPmZyb20gPT0g
dGhyZWFkKSB7CgkJCXQtPmZyb20gPSBOVUxMOwoJCQl0ID0gdC0+ZnJvbV9wYXJlbnQ7CgkJfSBlbHNl
CgkJCUJVRygpOwoJfQoJaWYgKHNlbmRfcmVwbHkpCgkJYmluZGVyX3NlbmRfZmFpbGVkX3JlcGx5KHNl
bmRfcmVwbHksIEJSX0RFQURfUkVQTFkpOwoJYmluZGVyX3JlbGVhc2Vfd29yaygmdGhyZWFkLT50b2Rv
KTsKCWtmcmVlKHRocmVhZCk7CgliaW5kZXJfc3RhdHNfZGVsZXRlZChCSU5ERVJfU1RBVF9USFJFQUQp
OwoJcmV0dXJuIGFjdGl2ZV90cmFuc2FjdGlvbnM7Cn0KCnN0YXRpYyB1bnNpZ25lZCBpbnQgYmluZGVy
X3BvbGwoc3RydWN0IGZpbGUgKmZpbHAsCgkJCQlzdHJ1Y3QgcG9sbF90YWJsZV9zdHJ1Y3QgKndhaXQp
CnsKCXN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYyA9IGZpbHAtPnByaXZhdGVfZGF0YTsKCXN0cnVjdCBi
aW5kZXJfdGhyZWFkICp0aHJlYWQgPSBOVUxMOwoJaW50IHdhaXRfZm9yX3Byb2Nfd29yazsKCgliaW5k
ZXJfbG9jayhfX2Z1bmNfXyk7CgoJdGhyZWFkID0gYmluZGVyX2dldF90aHJlYWQocHJvYyk7CgoJd2Fp
dF9mb3JfcHJvY193b3JrID0gdGhyZWFkLT50cmFuc2FjdGlvbl9zdGFjayA9PSBOVUxMICYmCgkJbGlz
dF9lbXB0eSgmdGhyZWFkLT50b2RvKSAmJiB0aHJlYWQtPnJldHVybl9lcnJvciA9PSBCUl9PSzsKCgli
aW5kZXJfdW5sb2NrKF9fZnVuY19fKTsKCglpZiAod2FpdF9mb3JfcHJvY193b3JrKSB7CgkJaWYgKGJp
bmRlcl9oYXNfcHJvY193b3JrKHByb2MsIHRocmVhZCkpCgkJCXJldHVybiBQT0xMSU47CgkJcG9sbF93
YWl0KGZpbHAsICZwcm9jLT53YWl0LCB3YWl0KTsKCQlpZiAoYmluZGVyX2hhc19wcm9jX3dvcmsocHJv
YywgdGhyZWFkKSkKCQkJcmV0dXJuIFBPTExJTjsKCX0gZWxzZSB7CgkJaWYgKGJpbmRlcl9oYXNfdGhy
ZWFkX3dvcmsodGhyZWFkKSkKCQkJcmV0dXJuIFBPTExJTjsKCQlwb2xsX3dhaXQoZmlscCwgJnRocmVh
ZC0+d2FpdCwgd2FpdCk7CgkJaWYgKGJpbmRlcl9oYXNfdGhyZWFkX3dvcmsodGhyZWFkKSkKCQkJcmV0
dXJuIFBPTExJTjsKCX0KCXJldHVybiAwOwp9CgpzdGF0aWMgaW50IGJpbmRlcl9pb2N0bF93cml0ZV9y
ZWFkKHN0cnVjdCBmaWxlICpmaWxwLAoJCQkJdW5zaWduZWQgaW50IGNtZCwgdW5zaWduZWQgbG9uZyBh
cmcsCgkJCQlzdHJ1Y3QgYmluZGVyX3RocmVhZCAqdGhyZWFkKQp7CglpbnQgcmV0ID0gMDsKCXN0cnVj
dCBiaW5kZXJfcHJvYyAqcHJvYyA9IGZpbHAtPnByaXZhdGVfZGF0YTsKCXVuc2lnbmVkIGludCBzaXpl
ID0gX0lPQ19TSVpFKGNtZCk7Cgl2b2lkIF9fdXNlciAqdWJ1ZiA9ICh2b2lkIF9fdXNlciAqKWFyZzsK
CXN0cnVjdCBiaW5kZXJfd3JpdGVfcmVhZCBid3I7CgoJaWYgKHNpemUgIT0gc2l6ZW9mKHN0cnVjdCBi
aW5kZXJfd3JpdGVfcmVhZCkpIHsKCQlyZXQgPSAtRUlOVkFMOwoJCWdvdG8gb3V0OwoJfQoJaWYgKGNv
cHlfZnJvbV91c2VyKCZid3IsIHVidWYsIHNpemVvZihid3IpKSkgewoJCXJldCA9IC1FRkFVTFQ7CgkJ
Z290byBvdXQ7Cgl9CgliaW5kZXJfZGVidWcoQklOREVSX0RFQlVHX1JFQURfV1JJVEUsCgkJICAgICAi
JWQ6JWQgd3JpdGUgJWxsZCBhdCAlMDE2bGx4LCByZWFkICVsbGQgYXQgJTAxNmxseFxuIiwKCQkgICAg
IHByb2MtPnBpZCwgdGhyZWFkLT5waWQsCgkJICAgICAodTY0KWJ3ci53cml0ZV9zaXplLCAodTY0KWJ3
ci53cml0ZV9idWZmZXIsCgkJICAgICAodTY0KWJ3ci5yZWFkX3NpemUsICh1NjQpYndyLnJlYWRfYnVm
ZmVyKTsKCglpZiAoYndyLndyaXRlX3NpemUgPiAwKSB7CgkJcmV0ID0gYmluZGVyX3RocmVhZF93cml0
ZShwcm9jLCB0aHJlYWQsCgkJCQkJICBid3Iud3JpdGVfYnVmZmVyLAoJCQkJCSAgYndyLndyaXRlX3Np
emUsCgkJCQkJICAmYndyLndyaXRlX2NvbnN1bWVkKTsKCQl0cmFjZV9iaW5kZXJfd3JpdGVfZG9uZShy
ZXQpOwoJCWlmIChyZXQgPCAwKSB7CgkJCWJ3ci5yZWFkX2NvbnN1bWVkID0gMDsKCQkJaWYgKGNvcHlf
dG9fdXNlcih1YnVmLCAmYndyLCBzaXplb2YoYndyKSkpCgkJCQlyZXQgPSAtRUZBVUxUOwoJCQlnb3Rv
IG91dDsKCQl9Cgl9CglpZiAoYndyLnJlYWRfc2l6ZSA+IDApIHsKCQlyZXQgPSBiaW5kZXJfdGhyZWFk
X3JlYWQocHJvYywgdGhyZWFkLCBid3IucmVhZF9idWZmZXIsCgkJCQkJIGJ3ci5yZWFkX3NpemUsCgkJ
CQkJICZid3IucmVhZF9jb25zdW1lZCwKCQkJCQkgZmlscC0+Zl9mbGFncyAmIE9fTk9OQkxPQ0spOwoJ
CXRyYWNlX2JpbmRlcl9yZWFkX2RvbmUocmV0KTsKCQlpZiAoIWxpc3RfZW1wdHkoJnByb2MtPnRvZG8p
KQoJCQl3YWtlX3VwX2ludGVycnVwdGlibGUoJnByb2MtPndhaXQpOwoJCWlmIChyZXQgPCAwKSB7CgkJ
CWlmIChjb3B5X3RvX3VzZXIodWJ1ZiwgJmJ3ciwgc2l6ZW9mKGJ3cikpKQoJCQkJcmV0ID0gLUVGQVVM
VDsKCQkJZ290byBvdXQ7CgkJfQoJfQoJYmluZGVyX2RlYnVnKEJJTkRFUl9ERUJVR19SRUFEX1dSSVRF
LAoJCSAgICAgIiVkOiVkIHdyb3RlICVsbGQgb2YgJWxsZCwgcmVhZCByZXR1cm4gJWxsZCBvZiAlbGxk
XG4iLAoJCSAgICAgcHJvYy0+cGlkLCB0aHJlYWQtPnBpZCwKCQkgICAgICh1NjQpYndyLndyaXRlX2Nv
bnN1bWVkLCAodTY0KWJ3ci53cml0ZV9zaXplLAoJCSAgICAgKHU2NClid3IucmVhZF9jb25zdW1lZCwg
KHU2NClid3IucmVhZF9zaXplKTsKCWlmIChjb3B5X3RvX3VzZXIodWJ1ZiwgJmJ3ciwgc2l6ZW9mKGJ3
cikpKSB7CgkJcmV0ID0gLUVGQVVMVDsKCQlnb3RvIG91dDsKCX0Kb3V0OgoJcmV0dXJuIHJldDsKfQoK
c3RhdGljIGludCBiaW5kZXJfaW9jdGxfc2V0X2N0eF9tZ3Ioc3RydWN0IGZpbGUgKmZpbHApCnsKCWlu
dCByZXQgPSAwOwoJc3RydWN0IGJpbmRlcl9wcm9jICpwcm9jID0gZmlscC0+cHJpdmF0ZV9kYXRhOwoJ
a3VpZF90IGN1cnJfZXVpZCA9IGN1cnJlbnRfZXVpZCgpOwoKCWlmIChiaW5kZXJfY29udGV4dF9tZ3Jf
bm9kZSAhPSBOVUxMKSB7CgkJcHJfZXJyKCJCSU5ERVJfU0VUX0NPTlRFWFRfTUdSIGFscmVhZHkgc2V0
XG4iKTsKCQlyZXQgPSAtRUJVU1k7CgkJZ290byBvdXQ7Cgl9CglyZXQgPSBzZWN1cml0eV9iaW5kZXJf
c2V0X2NvbnRleHRfbWdyKHByb2MtPnRzayk7CglpZiAocmV0IDwgMCkKCQlnb3RvIG91dDsKCWlmICh1
aWRfdmFsaWQoYmluZGVyX2NvbnRleHRfbWdyX3VpZCkpIHsKCQlpZiAoIXVpZF9lcShiaW5kZXJfY29u
dGV4dF9tZ3JfdWlkLCBjdXJyX2V1aWQpKSB7CgkJCXByX2VycigiQklOREVSX1NFVF9DT05URVhUX01H
UiBiYWQgdWlkICVkICE9ICVkXG4iLAoJCQkgICAgICAgZnJvbV9rdWlkKCZpbml0X3VzZXJfbnMsIGN1
cnJfZXVpZCksCgkJCSAgICAgICBmcm9tX2t1aWQoJmluaXRfdXNlcl9ucywKCQkJCQliaW5kZXJfY29u
dGV4dF9tZ3JfdWlkKSk7CgkJCXJldCA9IC1FUEVSTTsKCQkJZ290byBvdXQ7CgkJfQoJfSBlbHNlIHsK
CQliaW5kZXJfY29udGV4dF9tZ3JfdWlkID0gY3Vycl9ldWlkOwoJfQoJYmluZGVyX2NvbnRleHRfbWdy
X25vZGUgPSBiaW5kZXJfbmV3X25vZGUocHJvYywgMCwgMCk7CglpZiAoYmluZGVyX2NvbnRleHRfbWdy
X25vZGUgPT0gTlVMTCkgewoJCXJldCA9IC1FTk9NRU07CgkJZ290byBvdXQ7Cgl9CgliaW5kZXJfY29u
dGV4dF9tZ3Jfbm9kZS0+bG9jYWxfd2Vha19yZWZzKys7CgliaW5kZXJfY29udGV4dF9tZ3Jfbm9kZS0+
bG9jYWxfc3Ryb25nX3JlZnMrKzsKCWJpbmRlcl9jb250ZXh0X21ncl9ub2RlLT5oYXNfc3Ryb25nX3Jl
ZiA9IDE7CgliaW5kZXJfY29udGV4dF9tZ3Jfbm9kZS0+aGFzX3dlYWtfcmVmID0gMTsKb3V0OgoJcmV0
dXJuIHJldDsKfQoKc3RhdGljIGxvbmcgYmluZGVyX2lvY3RsKHN0cnVjdCBmaWxlICpmaWxwLCB1bnNp
Z25lZCBpbnQgY21kLCB1bnNpZ25lZCBsb25nIGFyZykKewoJaW50IHJldDsKCXN0cnVjdCBiaW5kZXJf
cHJvYyAqcHJvYyA9IGZpbHAtPnByaXZhdGVfZGF0YTsKCXN0cnVjdCBiaW5kZXJfdGhyZWFkICp0aHJl
YWQ7Cgl1bnNpZ25lZCBpbnQgc2l6ZSA9IF9JT0NfU0laRShjbWQpOwoJdm9pZCBfX3VzZXIgKnVidWYg
PSAodm9pZCBfX3VzZXIgKilhcmc7CgoJLypwcl9pbmZvKCJiaW5kZXJfaW9jdGw6ICVkOiVkICV4ICVs
eFxuIiwKCQkJcHJvYy0+cGlkLCBjdXJyZW50LT5waWQsIGNtZCwgYXJnKTsqLwoKCXRyYWNlX2JpbmRl
cl9pb2N0bChjbWQsIGFyZyk7CgoJcmV0ID0gd2FpdF9ldmVudF9pbnRlcnJ1cHRpYmxlKGJpbmRlcl91
c2VyX2Vycm9yX3dhaXQsIGJpbmRlcl9zdG9wX29uX3VzZXJfZXJyb3IgPCAyKTsKCWlmIChyZXQpCgkJ
Z290byBlcnJfdW5sb2NrZWQ7CgoJYmluZGVyX2xvY2soX19mdW5jX18pOwoJdGhyZWFkID0gYmluZGVy
X2dldF90aHJlYWQocHJvYyk7CglpZiAodGhyZWFkID09IE5VTEwpIHsKCQlyZXQgPSAtRU5PTUVNOwoJ
CWdvdG8gZXJyOwoJfQoKCXN3aXRjaCAoY21kKSB7CgljYXNlIEJJTkRFUl9XUklURV9SRUFEOgoJCXJl
dCA9IGJpbmRlcl9pb2N0bF93cml0ZV9yZWFkKGZpbHAsIGNtZCwgYXJnLCB0aHJlYWQpOwoJCWlmIChy
ZXQpCgkJCWdvdG8gZXJyOwoJCWJyZWFrOwoJY2FzZSBCSU5ERVJfU0VUX01BWF9USFJFQURTOgoJCWlm
IChjb3B5X2Zyb21fdXNlcigmcHJvYy0+bWF4X3RocmVhZHMsIHVidWYsIHNpemVvZihwcm9jLT5tYXhf
dGhyZWFkcykpKSB7CgkJCXJldCA9IC1FSU5WQUw7CgkJCWdvdG8gZXJyOwoJCX0KCQlicmVhazsKCWNh
c2UgQklOREVSX1NFVF9DT05URVhUX01HUjoKCQlyZXQgPSBiaW5kZXJfaW9jdGxfc2V0X2N0eF9tZ3Io
ZmlscCk7CgkJaWYgKHJldCkKCQkJZ290byBlcnI7CgkJYnJlYWs7CgljYXNlIEJJTkRFUl9USFJFQURf
RVhJVDoKCQliaW5kZXJfZGVidWcoQklOREVSX0RFQlVHX1RIUkVBRFMsICIlZDolZCBleGl0XG4iLAoJ
CQkgICAgIHByb2MtPnBpZCwgdGhyZWFkLT5waWQpOwoJCWJpbmRlcl9mcmVlX3RocmVhZChwcm9jLCB0
aHJlYWQpOwoJCXRocmVhZCA9IE5VTEw7CgkJYnJlYWs7CgljYXNlIEJJTkRFUl9WRVJTSU9OOiB7CgkJ
c3RydWN0IGJpbmRlcl92ZXJzaW9uIF9fdXNlciAqdmVyID0gdWJ1ZjsKCgkJaWYgKHNpemUgIT0gc2l6
ZW9mKHN0cnVjdCBiaW5kZXJfdmVyc2lvbikpIHsKCQkJcmV0ID0gLUVJTlZBTDsKCQkJZ290byBlcnI7
CgkJfQoJCWlmIChwdXRfdXNlcihCSU5ERVJfQ1VSUkVOVF9QUk9UT0NPTF9WRVJTSU9OLAoJCQkgICAg
ICZ2ZXItPnByb3RvY29sX3ZlcnNpb24pKSB7CgkJCXJldCA9IC1FSU5WQUw7CgkJCWdvdG8gZXJyOwoJ
CX0KCQlicmVhazsKCX0KCWRlZmF1bHQ6CgkJcmV0ID0gLUVJTlZBTDsKCQlnb3RvIGVycjsKCX0KCXJl
dCA9IDA7CmVycjoKCWlmICh0aHJlYWQpCgkJdGhyZWFkLT5sb29wZXIgJj0gfkJJTkRFUl9MT09QRVJf
U1RBVEVfTkVFRF9SRVRVUk47CgliaW5kZXJfdW5sb2NrKF9fZnVuY19fKTsKCXdhaXRfZXZlbnRfaW50
ZXJydXB0aWJsZShiaW5kZXJfdXNlcl9lcnJvcl93YWl0LCBiaW5kZXJfc3RvcF9vbl91c2VyX2Vycm9y
IDwgMik7CglpZiAocmV0ICYmIHJldCAhPSAtRVJFU1RBUlRTWVMpCgkJcHJfaW5mbygiJWQ6JWQgaW9j
dGwgJXggJWx4IHJldHVybmVkICVkXG4iLCBwcm9jLT5waWQsIGN1cnJlbnQtPnBpZCwgY21kLCBhcmcs
IHJldCk7CmVycl91bmxvY2tlZDoKCXRyYWNlX2JpbmRlcl9pb2N0bF9kb25lKHJldCk7CglyZXR1cm4g
cmV0Owp9CgpzdGF0aWMgdm9pZCBiaW5kZXJfdm1hX29wZW4oc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2
bWEpCnsKCXN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYyA9IHZtYS0+dm1fcHJpdmF0ZV9kYXRhOwoKCWJp
bmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfT1BFTl9DTE9TRSwKCQkgICAgICIlZCBvcGVuIHZtIGFyZWEg
JWx4LSVseCAoJWxkIEspIHZtYSAlbHggcGFnZXAgJWx4XG4iLAoJCSAgICAgcHJvYy0+cGlkLCB2bWEt
PnZtX3N0YXJ0LCB2bWEtPnZtX2VuZCwKCQkgICAgICh2bWEtPnZtX2VuZCAtIHZtYS0+dm1fc3RhcnQp
IC8gU1pfMUssIHZtYS0+dm1fZmxhZ3MsCgkJICAgICAodW5zaWduZWQgbG9uZylwZ3Byb3RfdmFsKHZt
YS0+dm1fcGFnZV9wcm90KSk7Cn0KCnN0YXRpYyB2b2lkIGJpbmRlcl92bWFfY2xvc2Uoc3RydWN0IHZt
X2FyZWFfc3RydWN0ICp2bWEpCnsKCXN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYyA9IHZtYS0+dm1fcHJp
dmF0ZV9kYXRhOwoKCWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfT1BFTl9DTE9TRSwKCQkgICAgICIl
ZCBjbG9zZSB2bSBhcmVhICVseC0lbHggKCVsZCBLKSB2bWEgJWx4IHBhZ2VwICVseFxuIiwKCQkgICAg
IHByb2MtPnBpZCwgdm1hLT52bV9zdGFydCwgdm1hLT52bV9lbmQsCgkJICAgICAodm1hLT52bV9lbmQg
LSB2bWEtPnZtX3N0YXJ0KSAvIFNaXzFLLCB2bWEtPnZtX2ZsYWdzLAoJCSAgICAgKHVuc2lnbmVkIGxv
bmcpcGdwcm90X3ZhbCh2bWEtPnZtX3BhZ2VfcHJvdCkpOwoJcHJvYy0+dm1hID0gTlVMTDsKCXByb2Mt
PnZtYV92bV9tbSA9IE5VTEw7CgliaW5kZXJfZGVmZXJfd29yayhwcm9jLCBCSU5ERVJfREVGRVJSRURf
UFVUX0ZJTEVTKTsKfQoKc3RhdGljIGludCBiaW5kZXJfdm1fZmF1bHQoc3RydWN0IHZtX2FyZWFfc3Ry
dWN0ICp2bWEsIHN0cnVjdCB2bV9mYXVsdCAqdm1mKQp7CglyZXR1cm4gVk1fRkFVTFRfU0lHQlVTOwp9
CgpzdGF0aWMgY29uc3Qgc3RydWN0IHZtX29wZXJhdGlvbnNfc3RydWN0IGJpbmRlcl92bV9vcHMgPSB7
Cgkub3BlbiA9IGJpbmRlcl92bWFfb3BlbiwKCS5jbG9zZSA9IGJpbmRlcl92bWFfY2xvc2UsCgkuZmF1
bHQgPSBiaW5kZXJfdm1fZmF1bHQsCn07CgpzdGF0aWMgaW50IGJpbmRlcl9tbWFwKHN0cnVjdCBmaWxl
ICpmaWxwLCBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSkKewoJaW50IHJldDsKCXN0cnVjdCB2bV9z
dHJ1Y3QgKmFyZWE7CglzdHJ1Y3QgYmluZGVyX3Byb2MgKnByb2MgPSBmaWxwLT5wcml2YXRlX2RhdGE7
Cgljb25zdCBjaGFyICpmYWlsdXJlX3N0cmluZzsKCXN0cnVjdCBiaW5kZXJfYnVmZmVyICpidWZmZXI7
CgoJaWYgKHByb2MtPnRzayAhPSBjdXJyZW50KQoJCXJldHVybiAtRUlOVkFMOwoKCWlmICgodm1hLT52
bV9lbmQgLSB2bWEtPnZtX3N0YXJ0KSA+IFNaXzRNKQoJCXZtYS0+dm1fZW5kID0gdm1hLT52bV9zdGFy
dCArIFNaXzRNOwoKCWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfT1BFTl9DTE9TRSwKCQkgICAgICJi
aW5kZXJfbW1hcDogJWQgJWx4LSVseCAoJWxkIEspIHZtYSAlbHggcGFnZXAgJWx4XG4iLAoJCSAgICAg
cHJvYy0+cGlkLCB2bWEtPnZtX3N0YXJ0LCB2bWEtPnZtX2VuZCwKCQkgICAgICh2bWEtPnZtX2VuZCAt
IHZtYS0+dm1fc3RhcnQpIC8gU1pfMUssIHZtYS0+dm1fZmxhZ3MsCgkJICAgICAodW5zaWduZWQgbG9u
ZylwZ3Byb3RfdmFsKHZtYS0+dm1fcGFnZV9wcm90KSk7CgoJaWYgKHZtYS0+dm1fZmxhZ3MgJiBGT1JC
SURERU5fTU1BUF9GTEFHUykgewoJCXJldCA9IC1FUEVSTTsKCQlmYWlsdXJlX3N0cmluZyA9ICJiYWQg
dm1fZmxhZ3MiOwoJCWdvdG8gZXJyX2JhZF9hcmc7Cgl9Cgl2bWEtPnZtX2ZsYWdzID0gKHZtYS0+dm1f
ZmxhZ3MgfCBWTV9ET05UQ09QWSkgJiB+Vk1fTUFZV1JJVEU7CgoJbXV0ZXhfbG9jaygmYmluZGVyX21t
YXBfbG9jayk7CglpZiAocHJvYy0+YnVmZmVyKSB7CgkJcmV0ID0gLUVCVVNZOwoJCWZhaWx1cmVfc3Ry
aW5nID0gImFscmVhZHkgbWFwcGVkIjsKCQlnb3RvIGVycl9hbHJlYWR5X21hcHBlZDsKCX0KCglhcmVh
ID0gZ2V0X3ZtX2FyZWEodm1hLT52bV9lbmQgLSB2bWEtPnZtX3N0YXJ0LCBWTV9JT1JFTUFQKTsKCWlm
IChhcmVhID09IE5VTEwpIHsKCQlyZXQgPSAtRU5PTUVNOwoJCWZhaWx1cmVfc3RyaW5nID0gImdldF92
bV9hcmVhIjsKCQlnb3RvIGVycl9nZXRfdm1fYXJlYV9mYWlsZWQ7Cgl9Cglwcm9jLT5idWZmZXIgPSBh
cmVhLT5hZGRyOwoJcHJvYy0+dXNlcl9idWZmZXJfb2Zmc2V0ID0gdm1hLT52bV9zdGFydCAtICh1aW50
cHRyX3QpcHJvYy0+YnVmZmVyOwoJbXV0ZXhfdW5sb2NrKCZiaW5kZXJfbW1hcF9sb2NrKTsKCiNpZmRl
ZiBDT05GSUdfQ1BVX0NBQ0hFX1ZJUFQKCWlmIChjYWNoZV9pc192aXB0X2FsaWFzaW5nKCkpIHsKCQl3
aGlsZSAoQ0FDSEVfQ09MT1VSKCh2bWEtPnZtX3N0YXJ0IF4gKHVpbnQzMl90KXByb2MtPmJ1ZmZlcikp
KSB7CgkJCXByX2luZm8oImJpbmRlcl9tbWFwOiAlZCAlbHgtJWx4IG1hcHMgJXAgYmFkIGFsaWdubWVu
dFxuIiwgcHJvYy0+cGlkLCB2bWEtPnZtX3N0YXJ0LCB2bWEtPnZtX2VuZCwgcHJvYy0+YnVmZmVyKTsK
CQkJdm1hLT52bV9zdGFydCArPSBQQUdFX1NJWkU7CgkJfQoJfQojZW5kaWYKCXByb2MtPnBhZ2VzID0g
a3phbGxvYyhzaXplb2YocHJvYy0+cGFnZXNbMF0pICogKCh2bWEtPnZtX2VuZCAtIHZtYS0+dm1fc3Rh
cnQpIC8gUEFHRV9TSVpFKSwgR0ZQX0tFUk5FTCk7CglpZiAocHJvYy0+cGFnZXMgPT0gTlVMTCkgewoJ
CXJldCA9IC1FTk9NRU07CgkJZmFpbHVyZV9zdHJpbmcgPSAiYWxsb2MgcGFnZSBhcnJheSI7CgkJZ290
byBlcnJfYWxsb2NfcGFnZXNfZmFpbGVkOwoJfQoJcHJvYy0+YnVmZmVyX3NpemUgPSB2bWEtPnZtX2Vu
ZCAtIHZtYS0+dm1fc3RhcnQ7CgoJdm1hLT52bV9vcHMgPSAmYmluZGVyX3ZtX29wczsKCXZtYS0+dm1f
cHJpdmF0ZV9kYXRhID0gcHJvYzsKCglpZiAoYmluZGVyX3VwZGF0ZV9wYWdlX3JhbmdlKHByb2MsIDEs
IHByb2MtPmJ1ZmZlciwgcHJvYy0+YnVmZmVyICsgUEFHRV9TSVpFLCB2bWEpKSB7CgkJcmV0ID0gLUVO
T01FTTsKCQlmYWlsdXJlX3N0cmluZyA9ICJhbGxvYyBzbWFsbCBidWYiOwoJCWdvdG8gZXJyX2FsbG9j
X3NtYWxsX2J1Zl9mYWlsZWQ7Cgl9CglidWZmZXIgPSBwcm9jLT5idWZmZXI7CglJTklUX0xJU1RfSEVB
RCgmcHJvYy0+YnVmZmVycyk7CglsaXN0X2FkZCgmYnVmZmVyLT5lbnRyeSwgJnByb2MtPmJ1ZmZlcnMp
OwoJYnVmZmVyLT5mcmVlID0gMTsKCWJpbmRlcl9pbnNlcnRfZnJlZV9idWZmZXIocHJvYywgYnVmZmVy
KTsKCXByb2MtPmZyZWVfYXN5bmNfc3BhY2UgPSBwcm9jLT5idWZmZXJfc2l6ZSAvIDI7CgliYXJyaWVy
KCk7Cglwcm9jLT5maWxlcyA9IGdldF9maWxlc19zdHJ1Y3QoY3VycmVudCk7Cglwcm9jLT52bWEgPSB2
bWE7Cglwcm9jLT52bWFfdm1fbW0gPSB2bWEtPnZtX21tOwoKCS8qcHJfaW5mbygiYmluZGVyX21tYXA6
ICVkICVseC0lbHggbWFwcyAlcFxuIiwKCQkgcHJvYy0+cGlkLCB2bWEtPnZtX3N0YXJ0LCB2bWEtPnZt
X2VuZCwgcHJvYy0+YnVmZmVyKTsqLwoJcmV0dXJuIDA7CgplcnJfYWxsb2Nfc21hbGxfYnVmX2ZhaWxl
ZDoKCWtmcmVlKHByb2MtPnBhZ2VzKTsKCXByb2MtPnBhZ2VzID0gTlVMTDsKZXJyX2FsbG9jX3BhZ2Vz
X2ZhaWxlZDoKCW11dGV4X2xvY2soJmJpbmRlcl9tbWFwX2xvY2spOwoJdmZyZWUocHJvYy0+YnVmZmVy
KTsKCXByb2MtPmJ1ZmZlciA9IE5VTEw7CmVycl9nZXRfdm1fYXJlYV9mYWlsZWQ6CmVycl9hbHJlYWR5
X21hcHBlZDoKCW11dGV4X3VubG9jaygmYmluZGVyX21tYXBfbG9jayk7CmVycl9iYWRfYXJnOgoJcHJf
ZXJyKCJiaW5kZXJfbW1hcDogJWQgJWx4LSVseCAlcyBmYWlsZWQgJWRcbiIsCgkgICAgICAgcHJvYy0+
cGlkLCB2bWEtPnZtX3N0YXJ0LCB2bWEtPnZtX2VuZCwgZmFpbHVyZV9zdHJpbmcsIHJldCk7CglyZXR1
cm4gcmV0Owp9CgpzdGF0aWMgaW50IGJpbmRlcl9vcGVuKHN0cnVjdCBpbm9kZSAqbm9kcCwgc3RydWN0
IGZpbGUgKmZpbHApCnsKCXN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYzsKCgliaW5kZXJfZGVidWcoQklO
REVSX0RFQlVHX09QRU5fQ0xPU0UsICJiaW5kZXJfb3BlbjogJWQ6JWRcbiIsCgkJICAgICBjdXJyZW50
LT5ncm91cF9sZWFkZXItPnBpZCwgY3VycmVudC0+cGlkKTsKCglwcm9jID0ga3phbGxvYyhzaXplb2Yo
KnByb2MpLCBHRlBfS0VSTkVMKTsKCWlmIChwcm9jID09IE5VTEwpCgkJcmV0dXJuIC1FTk9NRU07Cgln
ZXRfdGFza19zdHJ1Y3QoY3VycmVudCk7Cglwcm9jLT50c2sgPSBjdXJyZW50OwoJSU5JVF9MSVNUX0hF
QUQoJnByb2MtPnRvZG8pOwoJaW5pdF93YWl0cXVldWVfaGVhZCgmcHJvYy0+d2FpdCk7Cglwcm9jLT5k
ZWZhdWx0X3ByaW9yaXR5ID0gdGFza19uaWNlKGN1cnJlbnQpOwoKCWJpbmRlcl9sb2NrKF9fZnVuY19f
KTsKCgliaW5kZXJfc3RhdHNfY3JlYXRlZChCSU5ERVJfU1RBVF9QUk9DKTsKCWhsaXN0X2FkZF9oZWFk
KCZwcm9jLT5wcm9jX25vZGUsICZiaW5kZXJfcHJvY3MpOwoJcHJvYy0+cGlkID0gY3VycmVudC0+Z3Jv
dXBfbGVhZGVyLT5waWQ7CglJTklUX0xJU1RfSEVBRCgmcHJvYy0+ZGVsaXZlcmVkX2RlYXRoKTsKCWZp
bHAtPnByaXZhdGVfZGF0YSA9IHByb2M7CgoJYmluZGVyX3VubG9jayhfX2Z1bmNfXyk7CgoJaWYgKGJp
bmRlcl9kZWJ1Z2ZzX2Rpcl9lbnRyeV9wcm9jKSB7CgkJY2hhciBzdHJidWZbMTFdOwoKCQlzbnByaW50
ZihzdHJidWYsIHNpemVvZihzdHJidWYpLCAiJXUiLCBwcm9jLT5waWQpOwoJCXByb2MtPmRlYnVnZnNf
ZW50cnkgPSBkZWJ1Z2ZzX2NyZWF0ZV9maWxlKHN0cmJ1ZiwgU19JUlVHTywKCQkJYmluZGVyX2RlYnVn
ZnNfZGlyX2VudHJ5X3Byb2MsIHByb2MsICZiaW5kZXJfcHJvY19mb3BzKTsKCX0KCglyZXR1cm4gMDsK
fQoKc3RhdGljIGludCBiaW5kZXJfZmx1c2goc3RydWN0IGZpbGUgKmZpbHAsIGZsX293bmVyX3QgaWQp
CnsKCXN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYyA9IGZpbHAtPnByaXZhdGVfZGF0YTsKCgliaW5kZXJf
ZGVmZXJfd29yayhwcm9jLCBCSU5ERVJfREVGRVJSRURfRkxVU0gpOwoKCXJldHVybiAwOwp9CgpzdGF0
aWMgdm9pZCBiaW5kZXJfZGVmZXJyZWRfZmx1c2goc3RydWN0IGJpbmRlcl9wcm9jICpwcm9jKQp7Cglz
dHJ1Y3QgcmJfbm9kZSAqbjsKCWludCB3YWtlX2NvdW50ID0gMDsKCglmb3IgKG4gPSByYl9maXJzdCgm
cHJvYy0+dGhyZWFkcyk7IG4gIT0gTlVMTDsgbiA9IHJiX25leHQobikpIHsKCQlzdHJ1Y3QgYmluZGVy
X3RocmVhZCAqdGhyZWFkID0gcmJfZW50cnkobiwgc3RydWN0IGJpbmRlcl90aHJlYWQsIHJiX25vZGUp
OwoKCQl0aHJlYWQtPmxvb3BlciB8PSBCSU5ERVJfTE9PUEVSX1NUQVRFX05FRURfUkVUVVJOOwoJCWlm
ICh0aHJlYWQtPmxvb3BlciAmIEJJTkRFUl9MT09QRVJfU1RBVEVfV0FJVElORykgewoJCQl3YWtlX3Vw
X2ludGVycnVwdGlibGUoJnRocmVhZC0+d2FpdCk7CgkJCXdha2VfY291bnQrKzsKCQl9Cgl9Cgl3YWtl
X3VwX2ludGVycnVwdGlibGVfYWxsKCZwcm9jLT53YWl0KTsKCgliaW5kZXJfZGVidWcoQklOREVSX0RF
QlVHX09QRU5fQ0xPU0UsCgkJICAgICAiYmluZGVyX2ZsdXNoOiAlZCB3b2tlICVkIHRocmVhZHNcbiIs
IHByb2MtPnBpZCwKCQkgICAgIHdha2VfY291bnQpOwp9CgpzdGF0aWMgaW50IGJpbmRlcl9yZWxlYXNl
KHN0cnVjdCBpbm9kZSAqbm9kcCwgc3RydWN0IGZpbGUgKmZpbHApCnsKCXN0cnVjdCBiaW5kZXJfcHJv
YyAqcHJvYyA9IGZpbHAtPnByaXZhdGVfZGF0YTsKCglkZWJ1Z2ZzX3JlbW92ZShwcm9jLT5kZWJ1Z2Zz
X2VudHJ5KTsKCWJpbmRlcl9kZWZlcl93b3JrKHByb2MsIEJJTkRFUl9ERUZFUlJFRF9SRUxFQVNFKTsK
CglyZXR1cm4gMDsKfQoKc3RhdGljIGludCBiaW5kZXJfbm9kZV9yZWxlYXNlKHN0cnVjdCBiaW5kZXJf
bm9kZSAqbm9kZSwgaW50IHJlZnMpCnsKCXN0cnVjdCBiaW5kZXJfcmVmICpyZWY7CglpbnQgZGVhdGgg
PSAwOwoKCWxpc3RfZGVsX2luaXQoJm5vZGUtPndvcmsuZW50cnkpOwoJYmluZGVyX3JlbGVhc2Vfd29y
aygmbm9kZS0+YXN5bmNfdG9kbyk7CgoJaWYgKGhsaXN0X2VtcHR5KCZub2RlLT5yZWZzKSkgewoJCWtm
cmVlKG5vZGUpOwoJCWJpbmRlcl9zdGF0c19kZWxldGVkKEJJTkRFUl9TVEFUX05PREUpOwoKCQlyZXR1
cm4gcmVmczsKCX0KCglub2RlLT5wcm9jID0gTlVMTDsKCW5vZGUtPmxvY2FsX3N0cm9uZ19yZWZzID0g
MDsKCW5vZGUtPmxvY2FsX3dlYWtfcmVmcyA9IDA7CglobGlzdF9hZGRfaGVhZCgmbm9kZS0+ZGVhZF9u
b2RlLCAmYmluZGVyX2RlYWRfbm9kZXMpOwoKCWhsaXN0X2Zvcl9lYWNoX2VudHJ5KHJlZiwgJm5vZGUt
PnJlZnMsIG5vZGVfZW50cnkpIHsKCQlyZWZzKys7CgoJCWlmICghcmVmLT5kZWF0aCkKCQkJY29udGlu
dWU7CgoJCWRlYXRoKys7CgoJCWlmIChsaXN0X2VtcHR5KCZyZWYtPmRlYXRoLT53b3JrLmVudHJ5KSkg
ewoJCQlyZWYtPmRlYXRoLT53b3JrLnR5cGUgPSBCSU5ERVJfV09SS19ERUFEX0JJTkRFUjsKCQkJbGlz
dF9hZGRfdGFpbCgmcmVmLT5kZWF0aC0+d29yay5lbnRyeSwKCQkJCSAgICAgICZyZWYtPnByb2MtPnRv
ZG8pOwoJCQl3YWtlX3VwX2ludGVycnVwdGlibGUoJnJlZi0+cHJvYy0+d2FpdCk7CgkJfSBlbHNlCgkJ
CUJVRygpOwoJfQoKCWJpbmRlcl9kZWJ1ZyhCSU5ERVJfREVCVUdfREVBRF9CSU5ERVIsCgkJICAgICAi
bm9kZSAlZCBub3cgZGVhZCwgcmVmcyAlZCwgZGVhdGggJWRcbiIsCgkJICAgICBub2RlLT5kZWJ1Z19p
ZCwgcmVmcywgZGVhdGgpOwoKCXJldHVybiByZWZzOwp9CgpzdGF0aWMgdm9pZCBiaW5kZXJfZGVmZXJy
ZWRfcmVsZWFzZShzdHJ1Y3QgYmluZGVyX3Byb2MgKnByb2MpCnsKCXN0cnVjdCBiaW5kZXJfdHJhbnNh
Y3Rpb24gKnQ7CglzdHJ1Y3QgcmJfbm9kZSAqbjsKCWludCB0aHJlYWRzLCBub2RlcywgaW5jb21pbmdf
cmVmcywgb3V0Z29pbmdfcmVmcywgYnVmZmVycywKCQlhY3RpdmVfdHJhbnNhY3Rpb25zLCBwYWdlX2Nv
dW50OwoKCUJVR19PTihwcm9jLT52bWEpOwoJQlVHX09OKHByb2MtPmZpbGVzKTsKCglobGlzdF9kZWwo
JnByb2MtPnByb2Nfbm9kZSk7CgoJaWYgKGJpbmRlcl9jb250ZXh0X21ncl9ub2RlICYmIGJpbmRlcl9j
b250ZXh0X21ncl9ub2RlLT5wcm9jID09IHByb2MpIHsKCQliaW5kZXJfZGVidWcoQklOREVSX0RFQlVH
X0RFQURfQklOREVSLAoJCQkgICAgICIlczogJWQgY29udGV4dF9tZ3Jfbm9kZSBnb25lXG4iLAoJCQkg
ICAgIF9fZnVuY19fLCBwcm9jLT5waWQpOwoJCWJpbmRlcl9jb250ZXh0X21ncl9ub2RlID0gTlVMTDsK
CX0KCgl0aHJlYWRzID0gMDsKCWFjdGl2ZV90cmFuc2FjdGlvbnMgPSAwOwoJd2hpbGUgKChuID0gcmJf
Zmlyc3QoJnByb2MtPnRocmVhZHMpKSkgewoJCXN0cnVjdCBiaW5kZXJfdGhyZWFkICp0aHJlYWQ7CgoJ
CXRocmVhZCA9IHJiX2VudHJ5KG4sIHN0cnVjdCBiaW5kZXJfdGhyZWFkLCByYl9ub2RlKTsKCQl0aHJl
YWRzKys7CgkJYWN0aXZlX3RyYW5zYWN0aW9ucyArPSBiaW5kZXJfZnJlZV90aHJlYWQocHJvYywgdGhy
ZWFkKTsKCX0KCglub2RlcyA9IDA7CglpbmNvbWluZ19yZWZzID0gMDsKCXdoaWxlICgobiA9IHJiX2Zp
cnN0KCZwcm9jLT5ub2RlcykpKSB7CgkJc3RydWN0IGJpbmRlcl9ub2RlICpub2RlOwoKCQlub2RlID0g
cmJfZW50cnkobiwgc3RydWN0IGJpbmRlcl9ub2RlLCByYl9ub2RlKTsKCQlub2RlcysrOwoJCXJiX2Vy
YXNlKCZub2RlLT5yYl9ub2RlLCAmcHJvYy0+bm9kZXMpOwoJCWluY29taW5nX3JlZnMgPSBiaW5kZXJf
bm9kZV9yZWxlYXNlKG5vZGUsIGluY29taW5nX3JlZnMpOwoJfQoKCW91dGdvaW5nX3JlZnMgPSAwOwoJ
d2hpbGUgKChuID0gcmJfZmlyc3QoJnByb2MtPnJlZnNfYnlfZGVzYykpKSB7CgkJc3RydWN0IGJpbmRl
cl9yZWYgKnJlZjsKCgkJcmVmID0gcmJfZW50cnkobiwgc3RydWN0IGJpbmRlcl9yZWYsIHJiX25vZGVf
ZGVzYyk7CgkJb3V0Z29pbmdfcmVmcysrOwoJCWJpbmRlcl9kZWxldGVfcmVmKHJlZik7Cgl9CgoJYmlu
ZGVyX3JlbGVhc2Vfd29yaygmcHJvYy0+dG9kbyk7CgliaW5kZXJfcmVsZWFzZV93b3JrKCZwcm9jLT5k
ZWxpdmVyZWRfZGVhdGgpOwoKCWJ1ZmZlcnMgPSAwOwoJd2hpbGUgKChuID0gcmJfZmlyc3QoJnByb2Mt
PmFsbG9jYXRlZF9idWZmZXJzKSkpIHsKCQlzdHJ1Y3QgYmluZGVyX2J1ZmZlciAqYnVmZmVyOwoKCQli
dWZmZXIgPSByYl9lbnRyeShuLCBzdHJ1Y3QgYmluZGVyX2J1ZmZlciwgcmJfbm9kZSk7CgoJCXQgPSBi
dWZmZXItPnRyYW5zYWN0aW9uOwoJCWlmICh0KSB7CgkJCXQtPmJ1ZmZlciA9IE5VTEw7CgkJCWJ1ZmZl
ci0+dHJhbnNhY3Rpb24gPSBOVUxMOwoJCQlwcl9lcnIoInJlbGVhc2UgcHJvYyAlZCwgdHJhbnNhY3Rp
b24gJWQsIG5vdCBmcmVlZFxuIiwKCQkJICAgICAgIHByb2MtPnBpZCwgdC0+ZGVidWdfaWQpOwoJCQkv
KkJVRygpOyovCgkJfQoKCQliaW5kZXJfZnJlZV9idWYocHJvYywgYnVmZmVyKTsKCQlidWZmZXJzKys7
Cgl9CgoJYmluZGVyX3N0YXRzX2RlbGV0ZWQoQklOREVSX1NUQVRfUFJPQyk7CgoJcGFnZV9jb3VudCA9
IDA7CglpZiAocHJvYy0+cGFnZXMpIHsKCQlpbnQgaTsKCgkJZm9yIChpID0gMDsgaSA8IHByb2MtPmJ1
ZmZlcl9zaXplIC8gUEFHRV9TSVpFOyBpKyspIHsKCQkJdm9pZCAqcGFnZV9hZGRyOwoKCQkJaWYgKCFw
cm9jLT5wYWdlc1tpXSkKCQkJCWNvbnRpbnVlOwoKCQkJcGFnZV9hZGRyID0gcHJvYy0+YnVmZmVyICsg
aSAqIFBBR0VfU0laRTsKCQkJYmluZGVyX2RlYnVnKEJJTkRFUl9ERUJVR19CVUZGRVJfQUxMT0MsCgkJ
CQkgICAgICIlczogJWQ6IHBhZ2UgJWQgYXQgJXAgbm90IGZyZWVkXG4iLAoJCQkJICAgICBfX2Z1bmNf
XywgcHJvYy0+cGlkLCBpLCBwYWdlX2FkZHIpOwoJCQl1bm1hcF9rZXJuZWxfcmFuZ2UoKHVuc2lnbmVk
IGxvbmcpcGFnZV9hZGRyLCBQQUdFX1NJWkUpOwoJCQlfX2ZyZWVfcGFnZShwcm9jLT5wYWdlc1tpXSk7
CgkJCXBhZ2VfY291bnQrKzsKCQl9CgkJa2ZyZWUocHJvYy0+cGFnZXMpOwoJCXZmcmVlKHByb2MtPmJ1
ZmZlcik7Cgl9CgoJcHV0X3Rhc2tfc3RydWN0KHByb2MtPnRzayk7CgoJYmluZGVyX2RlYnVnKEJJTkRF
Ul9ERUJVR19PUEVOX0NMT1NFLAoJCSAgICAgIiVzOiAlZCB0aHJlYWRzICVkLCBub2RlcyAlZCAocmVm
ICVkKSwgcmVmcyAlZCwgYWN0aXZlIHRyYW5zYWN0aW9ucyAlZCwgYnVmZmVycyAlZCwgcGFnZXMgJWRc
biIsCgkJICAgICBfX2Z1bmNfXywgcHJvYy0+cGlkLCB0aHJlYWRzLCBub2RlcywgaW5jb21pbmdfcmVm
cywKCQkgICAgIG91dGdvaW5nX3JlZnMsIGFjdGl2ZV90cmFuc2FjdGlvbnMsIGJ1ZmZlcnMsIHBhZ2Vf
Y291bnQpOwoKCWtmcmVlKHByb2MpOwp9CgpzdGF0aWMgdm9pZCBiaW5kZXJfZGVmZXJyZWRfZnVuYyhz
dHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCnsKCXN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYzsKCXN0cnVj
dCBmaWxlc19zdHJ1Y3QgKmZpbGVzOwoKCWludCBkZWZlcjsKCglkbyB7CgkJYmluZGVyX2xvY2soX19m
dW5jX18pOwoJCW11dGV4X2xvY2soJmJpbmRlcl9kZWZlcnJlZF9sb2NrKTsKCQlpZiAoIWhsaXN0X2Vt
cHR5KCZiaW5kZXJfZGVmZXJyZWRfbGlzdCkpIHsKCQkJcHJvYyA9IGhsaXN0X2VudHJ5KGJpbmRlcl9k
ZWZlcnJlZF9saXN0LmZpcnN0LAoJCQkJCXN0cnVjdCBiaW5kZXJfcHJvYywgZGVmZXJyZWRfd29ya19u
b2RlKTsKCQkJaGxpc3RfZGVsX2luaXQoJnByb2MtPmRlZmVycmVkX3dvcmtfbm9kZSk7CgkJCWRlZmVy
ID0gcHJvYy0+ZGVmZXJyZWRfd29yazsKCQkJcHJvYy0+ZGVmZXJyZWRfd29yayA9IDA7CgkJfSBlbHNl
IHsKCQkJcHJvYyA9IE5VTEw7CgkJCWRlZmVyID0gMDsKCQl9CgkJbXV0ZXhfdW5sb2NrKCZiaW5kZXJf
ZGVmZXJyZWRfbG9jayk7CgoJCWZpbGVzID0gTlVMTDsKCQlpZiAoZGVmZXIgJiBCSU5ERVJfREVGRVJS
RURfUFVUX0ZJTEVTKSB7CgkJCWZpbGVzID0gcHJvYy0+ZmlsZXM7CgkJCWlmIChmaWxlcykKCQkJCXBy
b2MtPmZpbGVzID0gTlVMTDsKCQl9CgoJCWlmIChkZWZlciAmIEJJTkRFUl9ERUZFUlJFRF9GTFVTSCkK
CQkJYmluZGVyX2RlZmVycmVkX2ZsdXNoKHByb2MpOwoKCQlpZiAoZGVmZXIgJiBCSU5ERVJfREVGRVJS
RURfUkVMRUFTRSkKCQkJYmluZGVyX2RlZmVycmVkX3JlbGVhc2UocHJvYyk7IC8qIGZyZWVzIHByb2Mg
Ki8KCgkJYmluZGVyX3VubG9jayhfX2Z1bmNfXyk7CgkJaWYgKGZpbGVzKQoJCQlwdXRfZmlsZXNfc3Ry
dWN0KGZpbGVzKTsKCX0gd2hpbGUgKHByb2MpOwp9CnN0YXRpYyBERUNMQVJFX1dPUksoYmluZGVyX2Rl
ZmVycmVkX3dvcmssIGJpbmRlcl9kZWZlcnJlZF9mdW5jKTsKCnN0YXRpYyB2b2lkCmJpbmRlcl9kZWZl
cl93b3JrKHN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYywgZW51bSBiaW5kZXJfZGVmZXJyZWRfc3RhdGUg
ZGVmZXIpCnsKCW11dGV4X2xvY2soJmJpbmRlcl9kZWZlcnJlZF9sb2NrKTsKCXByb2MtPmRlZmVycmVk
X3dvcmsgfD0gZGVmZXI7CglpZiAoaGxpc3RfdW5oYXNoZWQoJnByb2MtPmRlZmVycmVkX3dvcmtfbm9k
ZSkpIHsKCQlobGlzdF9hZGRfaGVhZCgmcHJvYy0+ZGVmZXJyZWRfd29ya19ub2RlLAoJCQkJJmJpbmRl
cl9kZWZlcnJlZF9saXN0KTsKCQlxdWV1ZV93b3JrKGJpbmRlcl9kZWZlcnJlZF93b3JrcXVldWUsICZi
aW5kZXJfZGVmZXJyZWRfd29yayk7Cgl9CgltdXRleF91bmxvY2soJmJpbmRlcl9kZWZlcnJlZF9sb2Nr
KTsKfQoKc3RhdGljIHZvaWQgcHJpbnRfYmluZGVyX3RyYW5zYWN0aW9uKHN0cnVjdCBzZXFfZmlsZSAq
bSwgY29uc3QgY2hhciAqcHJlZml4LAoJCQkJICAgICBzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uICp0
KQp7CglzZXFfcHJpbnRmKG0sCgkJICAgIiVzICVkOiAlcCBmcm9tICVkOiVkIHRvICVkOiVkIGNvZGUg
JXggZmxhZ3MgJXggcHJpICVsZCByJWQiLAoJCSAgIHByZWZpeCwgdC0+ZGVidWdfaWQsIHQsCgkJICAg
dC0+ZnJvbSA/IHQtPmZyb20tPnByb2MtPnBpZCA6IDAsCgkJICAgdC0+ZnJvbSA/IHQtPmZyb20tPnBp
ZCA6IDAsCgkJICAgdC0+dG9fcHJvYyA/IHQtPnRvX3Byb2MtPnBpZCA6IDAsCgkJICAgdC0+dG9fdGhy
ZWFkID8gdC0+dG9fdGhyZWFkLT5waWQgOiAwLAoJCSAgIHQtPmNvZGUsIHQtPmZsYWdzLCB0LT5wcmlv
cml0eSwgdC0+bmVlZF9yZXBseSk7CglpZiAodC0+YnVmZmVyID09IE5VTEwpIHsKCQlzZXFfcHV0cyht
LCAiIGJ1ZmZlciBmcmVlXG4iKTsKCQlyZXR1cm47Cgl9CglpZiAodC0+YnVmZmVyLT50YXJnZXRfbm9k
ZSkKCQlzZXFfcHJpbnRmKG0sICIgbm9kZSAlZCIsCgkJCSAgIHQtPmJ1ZmZlci0+dGFyZ2V0X25vZGUt
PmRlYnVnX2lkKTsKCXNlcV9wcmludGYobSwgIiBzaXplICV6ZDolemQgZGF0YSAlcFxuIiwKCQkgICB0
LT5idWZmZXItPmRhdGFfc2l6ZSwgdC0+YnVmZmVyLT5vZmZzZXRzX3NpemUsCgkJICAgdC0+YnVmZmVy
LT5kYXRhKTsKfQoKc3RhdGljIHZvaWQgcHJpbnRfYmluZGVyX2J1ZmZlcihzdHJ1Y3Qgc2VxX2ZpbGUg
Km0sIGNvbnN0IGNoYXIgKnByZWZpeCwKCQkJCXN0cnVjdCBiaW5kZXJfYnVmZmVyICpidWZmZXIpCnsK
CXNlcV9wcmludGYobSwgIiVzICVkOiAlcCBzaXplICV6ZDolemQgJXNcbiIsCgkJICAgcHJlZml4LCBi
dWZmZXItPmRlYnVnX2lkLCBidWZmZXItPmRhdGEsCgkJICAgYnVmZmVyLT5kYXRhX3NpemUsIGJ1ZmZl
ci0+b2Zmc2V0c19zaXplLAoJCSAgIGJ1ZmZlci0+dHJhbnNhY3Rpb24gPyAiYWN0aXZlIiA6ICJkZWxp
dmVyZWQiKTsKfQoKc3RhdGljIHZvaWQgcHJpbnRfYmluZGVyX3dvcmsoc3RydWN0IHNlcV9maWxlICpt
LCBjb25zdCBjaGFyICpwcmVmaXgsCgkJCSAgICAgIGNvbnN0IGNoYXIgKnRyYW5zYWN0aW9uX3ByZWZp
eCwKCQkJICAgICAgc3RydWN0IGJpbmRlcl93b3JrICp3KQp7CglzdHJ1Y3QgYmluZGVyX25vZGUgKm5v
ZGU7CglzdHJ1Y3QgYmluZGVyX3RyYW5zYWN0aW9uICp0OwoKCXN3aXRjaCAody0+dHlwZSkgewoJY2Fz
ZSBCSU5ERVJfV09SS19UUkFOU0FDVElPTjoKCQl0ID0gY29udGFpbmVyX29mKHcsIHN0cnVjdCBiaW5k
ZXJfdHJhbnNhY3Rpb24sIHdvcmspOwoJCXByaW50X2JpbmRlcl90cmFuc2FjdGlvbihtLCB0cmFuc2Fj
dGlvbl9wcmVmaXgsIHQpOwoJCWJyZWFrOwoJY2FzZSBCSU5ERVJfV09SS19UUkFOU0FDVElPTl9DT01Q
TEVURToKCQlzZXFfcHJpbnRmKG0sICIlc3RyYW5zYWN0aW9uIGNvbXBsZXRlXG4iLCBwcmVmaXgpOwoJ
CWJyZWFrOwoJY2FzZSBCSU5ERVJfV09SS19OT0RFOgoJCW5vZGUgPSBjb250YWluZXJfb2Yodywgc3Ry
dWN0IGJpbmRlcl9ub2RlLCB3b3JrKTsKCQlzZXFfcHJpbnRmKG0sICIlc25vZGUgd29yayAlZDogdSUw
MTZsbHggYyUwMTZsbHhcbiIsCgkJCSAgIHByZWZpeCwgbm9kZS0+ZGVidWdfaWQsCgkJCSAgICh1NjQp
bm9kZS0+cHRyLCAodTY0KW5vZGUtPmNvb2tpZSk7CgkJYnJlYWs7CgljYXNlIEJJTkRFUl9XT1JLX0RF
QURfQklOREVSOgoJCXNlcV9wcmludGYobSwgIiVzaGFzIGRlYWQgYmluZGVyXG4iLCBwcmVmaXgpOwoJ
CWJyZWFrOwoJY2FzZSBCSU5ERVJfV09SS19ERUFEX0JJTkRFUl9BTkRfQ0xFQVI6CgkJc2VxX3ByaW50
ZihtLCAiJXNoYXMgY2xlYXJlZCBkZWFkIGJpbmRlclxuIiwgcHJlZml4KTsKCQlicmVhazsKCWNhc2Ug
QklOREVSX1dPUktfQ0xFQVJfREVBVEhfTk9USUZJQ0FUSU9OOgoJCXNlcV9wcmludGYobSwgIiVzaGFz
IGNsZWFyZWQgZGVhdGggbm90aWZpY2F0aW9uXG4iLCBwcmVmaXgpOwoJCWJyZWFrOwoJZGVmYXVsdDoK
CQlzZXFfcHJpbnRmKG0sICIlc3Vua25vd24gd29yazogdHlwZSAlZFxuIiwgcHJlZml4LCB3LT50eXBl
KTsKCQlicmVhazsKCX0KfQoKc3RhdGljIHZvaWQgcHJpbnRfYmluZGVyX3RocmVhZChzdHJ1Y3Qgc2Vx
X2ZpbGUgKm0sCgkJCQlzdHJ1Y3QgYmluZGVyX3RocmVhZCAqdGhyZWFkLAoJCQkJaW50IHByaW50X2Fs
d2F5cykKewoJc3RydWN0IGJpbmRlcl90cmFuc2FjdGlvbiAqdDsKCXN0cnVjdCBiaW5kZXJfd29yayAq
dzsKCXNpemVfdCBzdGFydF9wb3MgPSBtLT5jb3VudDsKCXNpemVfdCBoZWFkZXJfcG9zOwoKCXNlcV9w
cmludGYobSwgIiAgdGhyZWFkICVkOiBsICUwMnhcbiIsIHRocmVhZC0+cGlkLCB0aHJlYWQtPmxvb3Bl
cik7CgloZWFkZXJfcG9zID0gbS0+Y291bnQ7Cgl0ID0gdGhyZWFkLT50cmFuc2FjdGlvbl9zdGFjazsK
CXdoaWxlICh0KSB7CgkJaWYgKHQtPmZyb20gPT0gdGhyZWFkKSB7CgkJCXByaW50X2JpbmRlcl90cmFu
c2FjdGlvbihtLAoJCQkJCQkgIiAgICBvdXRnb2luZyB0cmFuc2FjdGlvbiIsIHQpOwoJCQl0ID0gdC0+
ZnJvbV9wYXJlbnQ7CgkJfSBlbHNlIGlmICh0LT50b190aHJlYWQgPT0gdGhyZWFkKSB7CgkJCXByaW50
X2JpbmRlcl90cmFuc2FjdGlvbihtLAoJCQkJCQkgIiAgICBpbmNvbWluZyB0cmFuc2FjdGlvbiIsIHQp
OwoJCQl0ID0gdC0+dG9fcGFyZW50OwoJCX0gZWxzZSB7CgkJCXByaW50X2JpbmRlcl90cmFuc2FjdGlv
bihtLCAiICAgIGJhZCB0cmFuc2FjdGlvbiIsIHQpOwoJCQl0ID0gTlVMTDsKCQl9Cgl9CglsaXN0X2Zv
cl9lYWNoX2VudHJ5KHcsICZ0aHJlYWQtPnRvZG8sIGVudHJ5KSB7CgkJcHJpbnRfYmluZGVyX3dvcmso
bSwgIiAgICAiLCAiICAgIHBlbmRpbmcgdHJhbnNhY3Rpb24iLCB3KTsKCX0KCWlmICghcHJpbnRfYWx3
YXlzICYmIG0tPmNvdW50ID09IGhlYWRlcl9wb3MpCgkJbS0+Y291bnQgPSBzdGFydF9wb3M7Cn0KCnN0
YXRpYyB2b2lkIHByaW50X2JpbmRlcl9ub2RlKHN0cnVjdCBzZXFfZmlsZSAqbSwgc3RydWN0IGJpbmRl
cl9ub2RlICpub2RlKQp7CglzdHJ1Y3QgYmluZGVyX3JlZiAqcmVmOwoJc3RydWN0IGJpbmRlcl93b3Jr
ICp3OwoJaW50IGNvdW50OwoKCWNvdW50ID0gMDsKCWhsaXN0X2Zvcl9lYWNoX2VudHJ5KHJlZiwgJm5v
ZGUtPnJlZnMsIG5vZGVfZW50cnkpCgkJY291bnQrKzsKCglzZXFfcHJpbnRmKG0sICIgIG5vZGUgJWQ6
IHUlMDE2bGx4IGMlMDE2bGx4IGhzICVkIGh3ICVkIGxzICVkIGx3ICVkIGlzICVkIGl3ICVkIiwKCQkg
ICBub2RlLT5kZWJ1Z19pZCwgKHU2NClub2RlLT5wdHIsICh1NjQpbm9kZS0+Y29va2llLAoJCSAgIG5v
ZGUtPmhhc19zdHJvbmdfcmVmLCBub2RlLT5oYXNfd2Vha19yZWYsCgkJICAgbm9kZS0+bG9jYWxfc3Ry
b25nX3JlZnMsIG5vZGUtPmxvY2FsX3dlYWtfcmVmcywKCQkgICBub2RlLT5pbnRlcm5hbF9zdHJvbmdf
cmVmcywgY291bnQpOwoJaWYgKGNvdW50KSB7CgkJc2VxX3B1dHMobSwgIiBwcm9jIik7CgkJaGxpc3Rf
Zm9yX2VhY2hfZW50cnkocmVmLCAmbm9kZS0+cmVmcywgbm9kZV9lbnRyeSkKCQkJc2VxX3ByaW50Ziht
LCAiICVkIiwgcmVmLT5wcm9jLT5waWQpOwoJfQoJc2VxX3B1dHMobSwgIlxuIik7CglsaXN0X2Zvcl9l
YWNoX2VudHJ5KHcsICZub2RlLT5hc3luY190b2RvLCBlbnRyeSkKCQlwcmludF9iaW5kZXJfd29yayht
LCAiICAgICIsCgkJCQkgICIgICAgcGVuZGluZyBhc3luYyB0cmFuc2FjdGlvbiIsIHcpOwp9CgpzdGF0
aWMgdm9pZCBwcmludF9iaW5kZXJfcmVmKHN0cnVjdCBzZXFfZmlsZSAqbSwgc3RydWN0IGJpbmRlcl9y
ZWYgKnJlZikKewoJc2VxX3ByaW50ZihtLCAiICByZWYgJWQ6IGRlc2MgJWQgJXNub2RlICVkIHMgJWQg
dyAlZCBkICVwXG4iLAoJCSAgIHJlZi0+ZGVidWdfaWQsIHJlZi0+ZGVzYywgcmVmLT5ub2RlLT5wcm9j
ID8gIiIgOiAiZGVhZCAiLAoJCSAgIHJlZi0+bm9kZS0+ZGVidWdfaWQsIHJlZi0+c3Ryb25nLCByZWYt
PndlYWssIHJlZi0+ZGVhdGgpOwp9CgpzdGF0aWMgdm9pZCBwcmludF9iaW5kZXJfcHJvYyhzdHJ1Y3Qg
c2VxX2ZpbGUgKm0sCgkJCSAgICAgIHN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYywgaW50IHByaW50X2Fs
bCkKewoJc3RydWN0IGJpbmRlcl93b3JrICp3OwoJc3RydWN0IHJiX25vZGUgKm47CglzaXplX3Qgc3Rh
cnRfcG9zID0gbS0+Y291bnQ7CglzaXplX3QgaGVhZGVyX3BvczsKCglzZXFfcHJpbnRmKG0sICJwcm9j
ICVkXG4iLCBwcm9jLT5waWQpOwoJaGVhZGVyX3BvcyA9IG0tPmNvdW50OwoKCWZvciAobiA9IHJiX2Zp
cnN0KCZwcm9jLT50aHJlYWRzKTsgbiAhPSBOVUxMOyBuID0gcmJfbmV4dChuKSkKCQlwcmludF9iaW5k
ZXJfdGhyZWFkKG0sIHJiX2VudHJ5KG4sIHN0cnVjdCBiaW5kZXJfdGhyZWFkLAoJCQkJCQlyYl9ub2Rl
KSwgcHJpbnRfYWxsKTsKCWZvciAobiA9IHJiX2ZpcnN0KCZwcm9jLT5ub2Rlcyk7IG4gIT0gTlVMTDsg
biA9IHJiX25leHQobikpIHsKCQlzdHJ1Y3QgYmluZGVyX25vZGUgKm5vZGUgPSByYl9lbnRyeShuLCBz
dHJ1Y3QgYmluZGVyX25vZGUsCgkJCQkJCSAgICByYl9ub2RlKTsKCQlpZiAocHJpbnRfYWxsIHx8IG5v
ZGUtPmhhc19hc3luY190cmFuc2FjdGlvbikKCQkJcHJpbnRfYmluZGVyX25vZGUobSwgbm9kZSk7Cgl9
CglpZiAocHJpbnRfYWxsKSB7CgkJZm9yIChuID0gcmJfZmlyc3QoJnByb2MtPnJlZnNfYnlfZGVzYyk7
CgkJICAgICBuICE9IE5VTEw7CgkJICAgICBuID0gcmJfbmV4dChuKSkKCQkJcHJpbnRfYmluZGVyX3Jl
ZihtLCByYl9lbnRyeShuLCBzdHJ1Y3QgYmluZGVyX3JlZiwKCQkJCQkJICAgICByYl9ub2RlX2Rlc2Mp
KTsKCX0KCWZvciAobiA9IHJiX2ZpcnN0KCZwcm9jLT5hbGxvY2F0ZWRfYnVmZmVycyk7IG4gIT0gTlVM
TDsgbiA9IHJiX25leHQobikpCgkJcHJpbnRfYmluZGVyX2J1ZmZlcihtLCAiICBidWZmZXIiLAoJCQkJ
ICAgIHJiX2VudHJ5KG4sIHN0cnVjdCBiaW5kZXJfYnVmZmVyLCByYl9ub2RlKSk7CglsaXN0X2Zvcl9l
YWNoX2VudHJ5KHcsICZwcm9jLT50b2RvLCBlbnRyeSkKCQlwcmludF9iaW5kZXJfd29yayhtLCAiICAi
LCAiICBwZW5kaW5nIHRyYW5zYWN0aW9uIiwgdyk7CglsaXN0X2Zvcl9lYWNoX2VudHJ5KHcsICZwcm9j
LT5kZWxpdmVyZWRfZGVhdGgsIGVudHJ5KSB7CgkJc2VxX3B1dHMobSwgIiAgaGFzIGRlbGl2ZXJlZCBk
ZWFkIGJpbmRlclxuIik7CgkJYnJlYWs7Cgl9CglpZiAoIXByaW50X2FsbCAmJiBtLT5jb3VudCA9PSBo
ZWFkZXJfcG9zKQoJCW0tPmNvdW50ID0gc3RhcnRfcG9zOwp9CgpzdGF0aWMgY29uc3QgY2hhciAqIGNv
bnN0IGJpbmRlcl9yZXR1cm5fc3RyaW5nc1tdID0gewoJIkJSX0VSUk9SIiwKCSJCUl9PSyIsCgkiQlJf
VFJBTlNBQ1RJT04iLAoJIkJSX1JFUExZIiwKCSJCUl9BQ1FVSVJFX1JFU1VMVCIsCgkiQlJfREVBRF9S
RVBMWSIsCgkiQlJfVFJBTlNBQ1RJT05fQ09NUExFVEUiLAoJIkJSX0lOQ1JFRlMiLAoJIkJSX0FDUVVJ
UkUiLAoJIkJSX1JFTEVBU0UiLAoJIkJSX0RFQ1JFRlMiLAoJIkJSX0FUVEVNUFRfQUNRVUlSRSIsCgki
QlJfTk9PUCIsCgkiQlJfU1BBV05fTE9PUEVSIiwKCSJCUl9GSU5JU0hFRCIsCgkiQlJfREVBRF9CSU5E
RVIiLAoJIkJSX0NMRUFSX0RFQVRIX05PVElGSUNBVElPTl9ET05FIiwKCSJCUl9GQUlMRURfUkVQTFki
Cn07CgpzdGF0aWMgY29uc3QgY2hhciAqIGNvbnN0IGJpbmRlcl9jb21tYW5kX3N0cmluZ3NbXSA9IHsK
CSJCQ19UUkFOU0FDVElPTiIsCgkiQkNfUkVQTFkiLAoJIkJDX0FDUVVJUkVfUkVTVUxUIiwKCSJCQ19G
UkVFX0JVRkZFUiIsCgkiQkNfSU5DUkVGUyIsCgkiQkNfQUNRVUlSRSIsCgkiQkNfUkVMRUFTRSIsCgki
QkNfREVDUkVGUyIsCgkiQkNfSU5DUkVGU19ET05FIiwKCSJCQ19BQ1FVSVJFX0RPTkUiLAoJIkJDX0FU
VEVNUFRfQUNRVUlSRSIsCgkiQkNfUkVHSVNURVJfTE9PUEVSIiwKCSJCQ19FTlRFUl9MT09QRVIiLAoJ
IkJDX0VYSVRfTE9PUEVSIiwKCSJCQ19SRVFVRVNUX0RFQVRIX05PVElGSUNBVElPTiIsCgkiQkNfQ0xF
QVJfREVBVEhfTk9USUZJQ0FUSU9OIiwKCSJCQ19ERUFEX0JJTkRFUl9ET05FIgp9OwoKc3RhdGljIGNv
bnN0IGNoYXIgKiBjb25zdCBiaW5kZXJfb2Jqc3RhdF9zdHJpbmdzW10gPSB7CgkicHJvYyIsCgkidGhy
ZWFkIiwKCSJub2RlIiwKCSJyZWYiLAoJImRlYXRoIiwKCSJ0cmFuc2FjdGlvbiIsCgkidHJhbnNhY3Rp
b25fY29tcGxldGUiCn07CgpzdGF0aWMgdm9pZCBwcmludF9iaW5kZXJfc3RhdHMoc3RydWN0IHNlcV9m
aWxlICptLCBjb25zdCBjaGFyICpwcmVmaXgsCgkJCSAgICAgICBzdHJ1Y3QgYmluZGVyX3N0YXRzICpz
dGF0cykKewoJaW50IGk7CgoJQlVJTERfQlVHX09OKEFSUkFZX1NJWkUoc3RhdHMtPmJjKSAhPQoJCSAg
ICAgQVJSQVlfU0laRShiaW5kZXJfY29tbWFuZF9zdHJpbmdzKSk7Cglmb3IgKGkgPSAwOyBpIDwgQVJS
QVlfU0laRShzdGF0cy0+YmMpOyBpKyspIHsKCQlpZiAoc3RhdHMtPmJjW2ldKQoJCQlzZXFfcHJpbnRm
KG0sICIlcyVzOiAlZFxuIiwgcHJlZml4LAoJCQkJICAgYmluZGVyX2NvbW1hbmRfc3RyaW5nc1tpXSwg
c3RhdHMtPmJjW2ldKTsKCX0KCglCVUlMRF9CVUdfT04oQVJSQVlfU0laRShzdGF0cy0+YnIpICE9CgkJ
ICAgICBBUlJBWV9TSVpFKGJpbmRlcl9yZXR1cm5fc3RyaW5ncykpOwoJZm9yIChpID0gMDsgaSA8IEFS
UkFZX1NJWkUoc3RhdHMtPmJyKTsgaSsrKSB7CgkJaWYgKHN0YXRzLT5icltpXSkKCQkJc2VxX3ByaW50
ZihtLCAiJXMlczogJWRcbiIsIHByZWZpeCwKCQkJCSAgIGJpbmRlcl9yZXR1cm5fc3RyaW5nc1tpXSwg
c3RhdHMtPmJyW2ldKTsKCX0KCglCVUlMRF9CVUdfT04oQVJSQVlfU0laRShzdGF0cy0+b2JqX2NyZWF0
ZWQpICE9CgkJICAgICBBUlJBWV9TSVpFKGJpbmRlcl9vYmpzdGF0X3N0cmluZ3MpKTsKCUJVSUxEX0JV
R19PTihBUlJBWV9TSVpFKHN0YXRzLT5vYmpfY3JlYXRlZCkgIT0KCQkgICAgIEFSUkFZX1NJWkUoc3Rh
dHMtPm9ial9kZWxldGVkKSk7Cglmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShzdGF0cy0+b2JqX2Ny
ZWF0ZWQpOyBpKyspIHsKCQlpZiAoc3RhdHMtPm9ial9jcmVhdGVkW2ldIHx8IHN0YXRzLT5vYmpfZGVs
ZXRlZFtpXSkKCQkJc2VxX3ByaW50ZihtLCAiJXMlczogYWN0aXZlICVkIHRvdGFsICVkXG4iLCBwcmVm
aXgsCgkJCQliaW5kZXJfb2Jqc3RhdF9zdHJpbmdzW2ldLAoJCQkJc3RhdHMtPm9ial9jcmVhdGVkW2ld
IC0gc3RhdHMtPm9ial9kZWxldGVkW2ldLAoJCQkJc3RhdHMtPm9ial9jcmVhdGVkW2ldKTsKCX0KfQoK
c3RhdGljIHZvaWQgcHJpbnRfYmluZGVyX3Byb2Nfc3RhdHMoc3RydWN0IHNlcV9maWxlICptLAoJCQkJ
ICAgIHN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYykKewoJc3RydWN0IGJpbmRlcl93b3JrICp3OwoJc3Ry
dWN0IHJiX25vZGUgKm47CglpbnQgY291bnQsIHN0cm9uZywgd2VhazsKCglzZXFfcHJpbnRmKG0sICJw
cm9jICVkXG4iLCBwcm9jLT5waWQpOwoJY291bnQgPSAwOwoJZm9yIChuID0gcmJfZmlyc3QoJnByb2Mt
PnRocmVhZHMpOyBuICE9IE5VTEw7IG4gPSByYl9uZXh0KG4pKQoJCWNvdW50Kys7CglzZXFfcHJpbnRm
KG0sICIgIHRocmVhZHM6ICVkXG4iLCBjb3VudCk7CglzZXFfcHJpbnRmKG0sICIgIHJlcXVlc3RlZCB0
aHJlYWRzOiAlZCslZC8lZFxuIgoJCQkiICByZWFkeSB0aHJlYWRzICVkXG4iCgkJCSIgIGZyZWUgYXN5
bmMgc3BhY2UgJXpkXG4iLCBwcm9jLT5yZXF1ZXN0ZWRfdGhyZWFkcywKCQkJcHJvYy0+cmVxdWVzdGVk
X3RocmVhZHNfc3RhcnRlZCwgcHJvYy0+bWF4X3RocmVhZHMsCgkJCXByb2MtPnJlYWR5X3RocmVhZHMs
IHByb2MtPmZyZWVfYXN5bmNfc3BhY2UpOwoJY291bnQgPSAwOwoJZm9yIChuID0gcmJfZmlyc3QoJnBy
b2MtPm5vZGVzKTsgbiAhPSBOVUxMOyBuID0gcmJfbmV4dChuKSkKCQljb3VudCsrOwoJc2VxX3ByaW50
ZihtLCAiICBub2RlczogJWRcbiIsIGNvdW50KTsKCWNvdW50ID0gMDsKCXN0cm9uZyA9IDA7Cgl3ZWFr
ID0gMDsKCWZvciAobiA9IHJiX2ZpcnN0KCZwcm9jLT5yZWZzX2J5X2Rlc2MpOyBuICE9IE5VTEw7IG4g
PSByYl9uZXh0KG4pKSB7CgkJc3RydWN0IGJpbmRlcl9yZWYgKnJlZiA9IHJiX2VudHJ5KG4sIHN0cnVj
dCBiaW5kZXJfcmVmLAoJCQkJCQkgIHJiX25vZGVfZGVzYyk7CgkJY291bnQrKzsKCQlzdHJvbmcgKz0g
cmVmLT5zdHJvbmc7CgkJd2VhayArPSByZWYtPndlYWs7Cgl9CglzZXFfcHJpbnRmKG0sICIgIHJlZnM6
ICVkIHMgJWQgdyAlZFxuIiwgY291bnQsIHN0cm9uZywgd2Vhayk7CgoJY291bnQgPSAwOwoJZm9yIChu
ID0gcmJfZmlyc3QoJnByb2MtPmFsbG9jYXRlZF9idWZmZXJzKTsgbiAhPSBOVUxMOyBuID0gcmJfbmV4
dChuKSkKCQljb3VudCsrOwoJc2VxX3ByaW50ZihtLCAiICBidWZmZXJzOiAlZFxuIiwgY291bnQpOwoK
CWNvdW50ID0gMDsKCWxpc3RfZm9yX2VhY2hfZW50cnkodywgJnByb2MtPnRvZG8sIGVudHJ5KSB7CgkJ
c3dpdGNoICh3LT50eXBlKSB7CgkJY2FzZSBCSU5ERVJfV09SS19UUkFOU0FDVElPTjoKCQkJY291bnQr
KzsKCQkJYnJlYWs7CgkJZGVmYXVsdDoKCQkJYnJlYWs7CgkJfQoJfQoJc2VxX3ByaW50ZihtLCAiICBw
ZW5kaW5nIHRyYW5zYWN0aW9uczogJWRcbiIsIGNvdW50KTsKCglwcmludF9iaW5kZXJfc3RhdHMobSwg
IiAgIiwgJnByb2MtPnN0YXRzKTsKfQoKCnN0YXRpYyBpbnQgYmluZGVyX3N0YXRlX3Nob3coc3RydWN0
IHNlcV9maWxlICptLCB2b2lkICp1bnVzZWQpCnsKCXN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYzsKCXN0
cnVjdCBiaW5kZXJfbm9kZSAqbm9kZTsKCWludCBkb19sb2NrID0gIWJpbmRlcl9kZWJ1Z19ub19sb2Nr
OwoKCWlmIChkb19sb2NrKQoJCWJpbmRlcl9sb2NrKF9fZnVuY19fKTsKCglzZXFfcHV0cyhtLCAiYmlu
ZGVyIHN0YXRlOlxuIik7CgoJaWYgKCFobGlzdF9lbXB0eSgmYmluZGVyX2RlYWRfbm9kZXMpKQoJCXNl
cV9wdXRzKG0sICJkZWFkIG5vZGVzOlxuIik7CglobGlzdF9mb3JfZWFjaF9lbnRyeShub2RlLCAmYmlu
ZGVyX2RlYWRfbm9kZXMsIGRlYWRfbm9kZSkKCQlwcmludF9iaW5kZXJfbm9kZShtLCBub2RlKTsKCglo
bGlzdF9mb3JfZWFjaF9lbnRyeShwcm9jLCAmYmluZGVyX3Byb2NzLCBwcm9jX25vZGUpCgkJcHJpbnRf
YmluZGVyX3Byb2MobSwgcHJvYywgMSk7CglpZiAoZG9fbG9jaykKCQliaW5kZXJfdW5sb2NrKF9fZnVu
Y19fKTsKCXJldHVybiAwOwp9CgpzdGF0aWMgaW50IGJpbmRlcl9zdGF0c19zaG93KHN0cnVjdCBzZXFf
ZmlsZSAqbSwgdm9pZCAqdW51c2VkKQp7CglzdHJ1Y3QgYmluZGVyX3Byb2MgKnByb2M7CglpbnQgZG9f
bG9jayA9ICFiaW5kZXJfZGVidWdfbm9fbG9jazsKCglpZiAoZG9fbG9jaykKCQliaW5kZXJfbG9jayhf
X2Z1bmNfXyk7CgoJc2VxX3B1dHMobSwgImJpbmRlciBzdGF0czpcbiIpOwoKCXByaW50X2JpbmRlcl9z
dGF0cyhtLCAiIiwgJmJpbmRlcl9zdGF0cyk7CgoJaGxpc3RfZm9yX2VhY2hfZW50cnkocHJvYywgJmJp
bmRlcl9wcm9jcywgcHJvY19ub2RlKQoJCXByaW50X2JpbmRlcl9wcm9jX3N0YXRzKG0sIHByb2MpOwoJ
aWYgKGRvX2xvY2spCgkJYmluZGVyX3VubG9jayhfX2Z1bmNfXyk7CglyZXR1cm4gMDsKfQoKc3RhdGlj
IGludCBiaW5kZXJfdHJhbnNhY3Rpb25zX3Nob3coc3RydWN0IHNlcV9maWxlICptLCB2b2lkICp1bnVz
ZWQpCnsKCXN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYzsKCWludCBkb19sb2NrID0gIWJpbmRlcl9kZWJ1
Z19ub19sb2NrOwoKCWlmIChkb19sb2NrKQoJCWJpbmRlcl9sb2NrKF9fZnVuY19fKTsKCglzZXFfcHV0
cyhtLCAiYmluZGVyIHRyYW5zYWN0aW9uczpcbiIpOwoJaGxpc3RfZm9yX2VhY2hfZW50cnkocHJvYywg
JmJpbmRlcl9wcm9jcywgcHJvY19ub2RlKQoJCXByaW50X2JpbmRlcl9wcm9jKG0sIHByb2MsIDApOwoJ
aWYgKGRvX2xvY2spCgkJYmluZGVyX3VubG9jayhfX2Z1bmNfXyk7CglyZXR1cm4gMDsKfQoKc3RhdGlj
IGludCBiaW5kZXJfcHJvY19zaG93KHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqdW51c2VkKQp7Cglz
dHJ1Y3QgYmluZGVyX3Byb2MgKml0cjsKCXN0cnVjdCBiaW5kZXJfcHJvYyAqcHJvYyA9IG0tPnByaXZh
dGU7CglpbnQgZG9fbG9jayA9ICFiaW5kZXJfZGVidWdfbm9fbG9jazsKCWJvb2wgdmFsaWRfcHJvYyA9
IGZhbHNlOwoKCWlmIChkb19sb2NrKQoJCWJpbmRlcl9sb2NrKF9fZnVuY19fKTsKCglobGlzdF9mb3Jf
ZWFjaF9lbnRyeShpdHIsICZiaW5kZXJfcHJvY3MsIHByb2Nfbm9kZSkgewoJCWlmIChpdHIgPT0gcHJv
YykgewoJCQl2YWxpZF9wcm9jID0gdHJ1ZTsKCQkJYnJlYWs7CgkJfQoJfQoJaWYgKHZhbGlkX3Byb2Mp
IHsKCQlzZXFfcHV0cyhtLCAiYmluZGVyIHByb2Mgc3RhdGU6XG4iKTsKCQlwcmludF9iaW5kZXJfcHJv
YyhtLCBwcm9jLCAxKTsKCX0KCWlmIChkb19sb2NrKQoJCWJpbmRlcl91bmxvY2soX19mdW5jX18pOwoJ
cmV0dXJuIDA7Cn0KCnN0YXRpYyB2b2lkIHByaW50X2JpbmRlcl90cmFuc2FjdGlvbl9sb2dfZW50cnko
c3RydWN0IHNlcV9maWxlICptLAoJCQkJCXN0cnVjdCBiaW5kZXJfdHJhbnNhY3Rpb25fbG9nX2VudHJ5
ICplKQp7CglzZXFfcHJpbnRmKG0sCgkJICAgIiVkOiAlcyBmcm9tICVkOiVkIHRvICVkOiVkIG5vZGUg
JWQgaGFuZGxlICVkIHNpemUgJWQ6JWRcbiIsCgkJICAgZS0+ZGVidWdfaWQsIChlLT5jYWxsX3R5cGUg
PT0gMikgPyAicmVwbHkiIDoKCQkgICAoKGUtPmNhbGxfdHlwZSA9PSAxKSA/ICJhc3luYyIgOiAiY2Fs
bCAiKSwgZS0+ZnJvbV9wcm9jLAoJCSAgIGUtPmZyb21fdGhyZWFkLCBlLT50b19wcm9jLCBlLT50b190
aHJlYWQsIGUtPnRvX25vZGUsCgkJICAgZS0+dGFyZ2V0X2hhbmRsZSwgZS0+ZGF0YV9zaXplLCBlLT5v
ZmZzZXRzX3NpemUpOwp9CgpzdGF0aWMgaW50IGJpbmRlcl90cmFuc2FjdGlvbl9sb2dfc2hvdyhzdHJ1
Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKnVudXNlZCkKewoJc3RydWN0IGJpbmRlcl90cmFuc2FjdGlvbl9s
b2cgKmxvZyA9IG0tPnByaXZhdGU7CglpbnQgaTsKCglpZiAobG9nLT5mdWxsKSB7CgkJZm9yIChpID0g
bG9nLT5uZXh0OyBpIDwgQVJSQVlfU0laRShsb2ctPmVudHJ5KTsgaSsrKQoJCQlwcmludF9iaW5kZXJf
dHJhbnNhY3Rpb25fbG9nX2VudHJ5KG0sICZsb2ctPmVudHJ5W2ldKTsKCX0KCWZvciAoaSA9IDA7IGkg
PCBsb2ctPm5leHQ7IGkrKykKCQlwcmludF9iaW5kZXJfdHJhbnNhY3Rpb25fbG9nX2VudHJ5KG0sICZs
b2ctPmVudHJ5W2ldKTsKCXJldHVybiAwOwp9CgpzdGF0aWMgY29uc3Qgc3RydWN0IGZpbGVfb3BlcmF0
aW9ucyBiaW5kZXJfZm9wcyA9IHsKCS5vd25lciA9IFRISVNfTU9EVUxFLAoJLnBvbGwgPSBiaW5kZXJf
cG9sbCwKCS51bmxvY2tlZF9pb2N0bCA9IGJpbmRlcl9pb2N0bCwKCS5jb21wYXRfaW9jdGwgPSBiaW5k
ZXJfaW9jdGwsCgkubW1hcCA9IGJpbmRlcl9tbWFwLAoJLm9wZW4gPSBiaW5kZXJfb3BlbiwKCS5mbHVz
aCA9IGJpbmRlcl9mbHVzaCwKCS5yZWxlYXNlID0gYmluZGVyX3JlbGVhc2UsCn07CgpzdGF0aWMgc3Ry
dWN0IG1pc2NkZXZpY2UgYmluZGVyX21pc2NkZXYgPSB7CgkubWlub3IgPSBNSVNDX0RZTkFNSUNfTUlO
T1IsCgkubmFtZSA9ICJiaW5kZXIiLAoJLmZvcHMgPSAmYmluZGVyX2ZvcHMKfTsKCkJJTkRFUl9ERUJV
R19FTlRSWShzdGF0ZSk7CkJJTkRFUl9ERUJVR19FTlRSWShzdGF0cyk7CkJJTkRFUl9ERUJVR19FTlRS
WSh0cmFuc2FjdGlvbnMpOwpCSU5ERVJfREVCVUdfRU5UUlkodHJhbnNhY3Rpb25fbG9nKTsKCnN0YXRp
YyBpbnQgX19pbml0IGJpbmRlcl9pbml0KHZvaWQpCnsKCWludCByZXQ7CgoJYmluZGVyX2RlZmVycmVk
X3dvcmtxdWV1ZSA9IGNyZWF0ZV9zaW5nbGV0aHJlYWRfd29ya3F1ZXVlKCJiaW5kZXIiKTsKCWlmICgh
YmluZGVyX2RlZmVycmVkX3dvcmtxdWV1ZSkKCQlyZXR1cm4gLUVOT01FTTsKCgliaW5kZXJfZGVidWdm
c19kaXJfZW50cnlfcm9vdCA9IGRlYnVnZnNfY3JlYXRlX2RpcigiYmluZGVyIiwgTlVMTCk7CglpZiAo
YmluZGVyX2RlYnVnZnNfZGlyX2VudHJ5X3Jvb3QpCgkJYmluZGVyX2RlYnVnZnNfZGlyX2VudHJ5X3By
b2MgPSBkZWJ1Z2ZzX2NyZWF0ZV9kaXIoInByb2MiLAoJCQkJCQkgYmluZGVyX2RlYnVnZnNfZGlyX2Vu
dHJ5X3Jvb3QpOwoJcmV0ID0gbWlzY19yZWdpc3RlcigmYmluZGVyX21pc2NkZXYpOwoJaWYgKGJpbmRl
cl9kZWJ1Z2ZzX2Rpcl9lbnRyeV9yb290KSB7CgkJZGVidWdmc19jcmVhdGVfZmlsZSgic3RhdGUiLAoJ
CQkJICAgIFNfSVJVR08sCgkJCQkgICAgYmluZGVyX2RlYnVnZnNfZGlyX2VudHJ5X3Jvb3QsCgkJCQkg
ICAgTlVMTCwKCQkJCSAgICAmYmluZGVyX3N0YXRlX2ZvcHMpOwoJCWRlYnVnZnNfY3JlYXRlX2ZpbGUo
InN0YXRzIiwKCQkJCSAgICBTX0lSVUdPLAoJCQkJICAgIGJpbmRlcl9kZWJ1Z2ZzX2Rpcl9lbnRyeV9y
b290LAoJCQkJICAgIE5VTEwsCgkJCQkgICAgJmJpbmRlcl9zdGF0c19mb3BzKTsKCQlkZWJ1Z2ZzX2Ny
ZWF0ZV9maWxlKCJ0cmFuc2FjdGlvbnMiLAoJCQkJICAgIFNfSVJVR08sCgkJCQkgICAgYmluZGVyX2Rl
YnVnZnNfZGlyX2VudHJ5X3Jvb3QsCgkJCQkgICAgTlVMTCwKCQkJCSAgICAmYmluZGVyX3RyYW5zYWN0
aW9uc19mb3BzKTsKCQlkZWJ1Z2ZzX2NyZWF0ZV9maWxlKCJ0cmFuc2FjdGlvbl9sb2ciLAoJCQkJICAg
IFNfSVJVR08sCgkJCQkgICAgYmluZGVyX2RlYnVnZnNfZGlyX2VudHJ5X3Jvb3QsCgkJCQkgICAgJmJp
bmRlcl90cmFuc2FjdGlvbl9sb2csCgkJCQkgICAgJmJpbmRlcl90cmFuc2FjdGlvbl9sb2dfZm9wcyk7
CgkJZGVidWdmc19jcmVhdGVfZmlsZSgiZmFpbGVkX3RyYW5zYWN0aW9uX2xvZyIsCgkJCQkgICAgU19J
UlVHTywKCQkJCSAgICBiaW5kZXJfZGVidWdmc19kaXJfZW50cnlfcm9vdCwKCQkJCSAgICAmYmluZGVy
X3RyYW5zYWN0aW9uX2xvZ19mYWlsZWQsCgkJCQkgICAgJmJpbmRlcl90cmFuc2FjdGlvbl9sb2dfZm9w
cyk7Cgl9CglyZXR1cm4gcmV0Owp9CgpkZXZpY2VfaW5pdGNhbGwoYmluZGVyX2luaXQpOwoKI2RlZmlu
ZSBDUkVBVEVfVFJBQ0VfUE9JTlRTCiNpbmNsdWRlICJiaW5kZXJfdHJhY2UuaCIKCk1PRFVMRV9MSUNF
TlNFKCJHUEwgdjIiKTsK</data><mime>application/octet-stream</mime><width>0</width><height>0</height><duration>0</duration><resource-attributes><file-name>binder.c</file-name></resource-attributes></resource></note>
</en-export>
