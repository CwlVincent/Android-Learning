<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export3.dtd">
<en-export export-date="20180111T111706Z" application="Evernote" version="Evernote Mac 6.12.2 (455489)">
<note><title>Android系统匿名共享内存Ashmem(Anonymous Shared Memory)简要介绍和学习计划</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">
<en-note><div>    在Android系统中，提供了独特的匿名共享内存子系统Ashmem(Anonymous Shared Memory),它以驱动程序的形式实现在内核空间中。它有两个特点，一是能够辅助内存管理系统来有效地管理不再使用的内存块，二是它通过Binder进程间通信机制来实现进程间的内存共享。本文中，我们将通过实例来简要介绍Android系统的匿名共享内存的使用方法，使得我们对Android系统的匿名共享内存机制有一个感性的认识，进一步学习它的源代码实现打下基础。    </div><div>    Android系统的匿名共享内存子系统的主体是以驱动程序的形式实现在内核空间的，同时，在系统运行时库层和应用程序架构层提供了访问接口，其中，在系统运行时库层提供了C/C++调用接口，而在应用程序架构层提供了Java调用接口。这里，我们将直接通过应用程序框架层提供的Java调用接口来说明匿名共享内存子系统Ashmen的使用方法，毕竟我们在Android开发应用程序时，是基于Java语言的，而实际上，应用程序框架层的Java调用接口是通过JNI方法来调用系统运行时库层的C/C++调用接口，最后进入到内核空间的Ashmem驱动程序去的。</div><div>    我们在这里举的例子是一个名为Ashmem的应用程序，它包含了一个Server端和一个Client端实现，其中，Server端是以Service的形式实现的，在这里Service里面，创建一个匿名共享内存文件，而Client是一个Activity，这个Activity通过Binder进程间通信机制获得前面这个Service创建的匿名共享内存文件的句柄，从而实现共享。在Android应用程序框架层，提供了一个MemoryFile接口来封装了匿名共享内存文件的创建和使用，它实现在frameworks/base/core/java/android/os/MemoryFile.java文件中。下面，我们就来看看Server端是如何通过MemoryFile类来创建匿名共享内存文件的以及Client是如何获得这个匿名共享内存的句柄的。</div><div>    在MemoryFile类中，提供了两种创建匿名共享内存的方法，我们通过MemoryFile类的构造函数来看看这个两种使用方法:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">public class MemoryFile</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">{</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    /**</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    * Allocates a new ashmem region. The region is initially not purgable.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    *</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    * @param name optional name for the file (can be null).</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    * @param length of the memory file in bytes.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    * @throws IOException if the memory file could not be created.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    */</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    public MemoryFile(String name, int length) throws IOException {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        mLength = length;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        mFD = native_open(name, length);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        mAddress = native_mmap(mFD, length, PROT_READ | PROT_WRITE);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        mOwnsRegion = true;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    /**</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    * Creates a reference to an existing memory file. Changes to the original file</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    * will be available through this reference.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    * Calls to {@link #allowPurging(boolean)} on the returned MemoryFile will fail.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    *</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    * @param fd File descriptor for an existing memory file, as returned by</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    *        {@link #getFileDescriptor()}. This file descriptor will be closed</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    *        by {@link #close()}.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    * @param length Length of the memory file in bytes.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    * @param mode File mode. Currently only &quot;r&quot; for read-only access is supported.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    * @throws NullPointerException if &lt;code&gt;fd&lt;/code&gt; is null.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    * @throws IOException If &lt;code&gt;fd&lt;/code&gt; does not refer to an existing memory file,</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    *         or if the file mode of the existing memory file is more restrictive</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    *         than &lt;code&gt;mode&lt;/code&gt;.</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    *</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    * @hide</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    */</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    public MemoryFile(FileDescriptor fd, int length, String mode) throws IOException {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (fd == null) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            throw new NullPointerException(&quot;File descriptor is null.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if (!isMemoryFile(fd)) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            throw new IllegalArgumentException(&quot;Not a memory file.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        mLength = length;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        mFD = fd;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        mAddress = native_mmap(mFD, length, modeToProt(mode));</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        mOwnsRegion = false;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    ......</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    从注释中，我们可以看出这两个构造函数的使用方法，这里就不在详述了。两个构造函数的主要区别是第一个参数，第一种构造方法是以指定的字符串调用JNI方法native_open来创建一个匿名共享内存文件，从而得到一个文件描述符，接着就以这个文件描述符为参数调用JNI方法native_mmap把这个匿名共享内存文件映射在进程空间中，然后通过这个映射后得到的地址空间来直接访问内存数据了；第二种构造方法是以指定的文件描述符来直接调用JNI方法native_mmap把这个匿名共享内存文件映射在进程空间中，然后进行访问，而这个文件描述符就必须要是一个匿名共享内存文件的文件描述符，这是通过一个内部函数isMemoryFile来验证的，而这个内部函数isMemoryFile也是通过JNI方法调用来进一步验证的。前面所提到的这些JNI方法、系统运行库层调用以及Ashmem驱动程序的具体实现，在接下来的两篇文件中，我们将会着重介绍，这里我们只关注MemoryFile这个类型的使用方法。</div><div>    前面我们说到，我们在这里举的例子包含了一个Server端和一个Client端实现，其中，Server端就是通过前面一个构造函数来创建一个匿名共享内存文件，接着，Client端通过Binder进程间通信机制来向Server请求这个匿名共享文件的文件描述符，有了这个文件描述符之后，就可以通过后面一个构造函数来共享这个内存文件了。</div><div>    因为涉及到Binder进程间通信，我们首先定义好Binder进程间通信接口。Binder进程间通信机制的相关介绍，请参考前面一篇文章Android进程间通信(IPC)机制Binder简要介绍和学习计划，这里就不详细介绍了，直接进入主题。</div><div>    首先在源代码工程的packages/experimental目录下创建一个应用程序工程目录Ashmem。关于如何获得Android源代码工程，请参考在Ubuntu上下载、编译和安装Android最新源代码一文；关于如何在Android源代码工程中创建一个应用程序工程，请参考在Ubuntu上为Android系统内置Java应用程序测试Application Frameworks层的硬件服务一文。这里，这个工程名称就是Ashmem了，它定义了一个路径为shy.luo.ashmem的package，这个例子的源代码主要就是实现在这里了。下面，将会逐一介绍这个package里面的文件。</div><div>    这里要用到的Binder进程间通信接口定义在src/shy/luo/ashmem/IMemoryService.java文件中:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">package shy.luo.ashmem;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.util.Log;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.os.IInterface;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.os.Binder;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.os.IBinder;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.os.Parcel;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.os.ParcelFileDescriptor;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.os.RemoteException;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">public interface IMemoryService extends IInterface {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    public static abstract class Stub extends Binder implements IMemoryService {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        private static final String DESCRIPTOR = &quot;shy.luo.ashmem.IMemoryService&quot;;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        public Stub() {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            attachInterface(this, DESCRIPTOR);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        public static IMemoryService asInterface(IBinder obj) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (obj == null) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return null;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            IInterface iin = (IInterface)obj.queryLocalInterface(DESCRIPTOR);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if (iin != null &amp;&amp; iin instanceof IMemoryService) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return (IMemoryService)iin;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return new IMemoryService.Stub.Proxy(obj);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        public IBinder asBinder() {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return this;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        @Override </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws android.os.RemoteException {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            switch (code) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            case INTERFACE_TRANSACTION: {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                reply.writeString(DESCRIPTOR);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return true;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            case TRANSACTION_getFileDescriptor: {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                data.enforceInterface(DESCRIPTOR);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                ParcelFileDescriptor result = this.getFileDescriptor();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                reply.writeNoException();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                if (result != null) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    reply.writeInt(1);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    result.writeToParcel(reply, 0);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    reply.writeInt(0);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return true;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            case TRANSACTION_setValue: {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                data.enforceInterface(DESCRIPTOR);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                int val = data.readInt();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                setValue(val);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                reply.writeNoException();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return true;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return super.onTransact(code, data, reply, flags);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        private static class Proxy implements IMemoryService {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            private IBinder mRemote;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            Proxy(IBinder remote) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                mRemote = remote;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            public IBinder asBinder() {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return mRemote;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            public String getInterfaceDescriptor() {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return DESCRIPTOR;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            public ParcelFileDescriptor getFileDescriptor() throws RemoteException {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                Parcel data = Parcel.obtain();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                Parcel reply = Parcel.obtain();</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                ParcelFileDescriptor result;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                try {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    data.writeInterfaceToken(DESCRIPTOR);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    mRemote.transact(Stub.TRANSACTION_getFileDescriptor, data, reply, 0);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    reply.readException();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    if (0 != reply.readInt()) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        result = ParcelFileDescriptor.CREATOR.createFromParcel(reply);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        result = null;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                } finally {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    reply.recycle();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    data.recycle();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return result;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            public void setValue(int val) throws RemoteException {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                Parcel data = Parcel.obtain();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                Parcel reply = Parcel.obtain();</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                try {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    data.writeInterfaceToken(DESCRIPTOR);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    data.writeInt(val);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    mRemote.transact(Stub.TRANSACTION_setValue, data, reply, 0);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    reply.readException();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                } finally {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    reply.recycle();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    data.recycle();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        static final int TRANSACTION_getFileDescriptor = IBinder.FIRST_CALL_TRANSACTION + 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        static final int TRANSACTION_setValue = IBinder.FIRST_CALL_TRANSACTION + 1;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    public ParcelFileDescriptor getFileDescriptor() throws RemoteException;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    public void setValue(int val) throws RemoteException;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这里主要是定义了IMemoryService接口，它里面有两个调用接口：</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    public ParcelFileDescriptor getFileDescriptor() throws RemoteException;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    public void setValue(int val) throws RemoteException;</span></div></div><div>    同时，还分别定义了用于Server端实现的IMemoryService.Stub基类和用于Client端使用的代理IMemoryService.Stub.Proxy类。关于Binder进程间通信机制在应用程序框架层的Java接口定义，请参考前面Android系统进程间通信Binder机制在应用程序框架层的Java接口源代码分析一文。</div><div>    有了Binder进程间通信接口之后，接下来就是要在Server端实现一个本地服务了。这里，Server端实现的本地服务名为MemoryService，实现在src/shy/luo/ashmem/MemoryService.java文件中:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">package shy.luo.ashmem;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import java.io.FileDescriptor;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import java.io.IOException;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.os.Parcel;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.os.MemoryFile;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.os.ParcelFileDescriptor;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.util.Log;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">public class MemoryService extends IMemoryService.Stub {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    private final static String LOG_TAG = &quot;shy.luo.ashmem.MemoryService&quot;;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    private MemoryFile file = null;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    public MemoryService() {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        try {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        file = new MemoryFile(&quot;Ashmem&quot;, 4);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        setValue(0);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                catch(IOException ex) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        Log.i(LOG_TAG, &quot;Failed to create memory file.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        ex.printStackTrace();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    public ParcelFileDescriptor getFileDescriptor() {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        Log.i(LOG_TAG, &quot;Get File Descriptor.&quot;);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ParcelFileDescriptor pfd = null;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        try {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            pfd = file.getParcelFileDescriptor();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } catch(IOException ex) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            Log.i(LOG_TAG, &quot;Failed to get file descriptor.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ex.printStackTrace();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return pfd;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    public void setValue(int val) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if(file == null) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        byte[] buffer = new byte[4];   </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        buffer[0] = (byte)((val &gt;&gt;&gt; 24) &amp; 0xFF);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        buffer[1] = (byte)((val &gt;&gt;&gt; 16) &amp; 0xFF);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        buffer[2] = (byte)((val &gt;&gt;&gt; 8) &amp; 0xFF); </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        buffer[3] = (byte)(val &amp; 0xFF);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        try {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            file.writeBytes(buffer, 0, 0, 4);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            Log.i(LOG_TAG, &quot;Set value &quot; + val + &quot; to memory file. &quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        catch(IOException ex) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            Log.i(LOG_TAG, &quot;Failed to write bytes to memory file.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ex.printStackTrace();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    注意，这里的MemoryService类实现了IMemoryService.Stub类，表示这是一个Binder服务的本地实现。这构造函数中，通过指定文件名和文件大小来创建了一个匿名共享内存文件，即创建MemoryFile的一个实例，并保存在类成员变量file中。这个匿名共享内存文件名为”Ashmem”,大小为4个字节，刚好容纳一个整数，我们这里举的例子就是要说明如果创建一个匿名共享内存来在两个进程间实现共享一个整数了。当然，在实际应用中，可以根据需要创建合适大小的共享内存来共享有意义的数据。</div><div>    这里还实现了IMemoryService.Stub的两个接口getFileDescriptor和setVal，一个用来获取匿名共享内存文件的文件描述符，一个用来往匿名共享文件中写入一个整数，其中，接口getFileDescriptor的返回值是一个ParcelFileDescriptor。在Java中，是用FileDesrciptor类来表示一个文件描述符的，而ParcelFileDesrciptor是用来序列化FileDescriptor的，以便在进程间调用时传输。</div><div>    定义好本地服务后，就要定义一个Server来启动这个服务了。这里定义的Server实现在src/shy/luo/ashmem/Server.java文件中:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">package shy.luo.ashmem;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.app.Service;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.content.Intent;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.os.IBinder;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.util.Log;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.os.ServiceManager;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">public class Server extends Service {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    private final static String LOG_TAG = &quot;shy.luo.ashmem.Server&quot;;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    private MemoryService memoryService = null;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    @Override</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    public IBinder onBind(Intent intent) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        return null;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    @Override</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    public void onCreate() {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    Log.i(LOG_TAG, &quot;Create Memory Service...&quot;);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    memoryService = new MemoryService();</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        try {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ServiceManager.addService(&quot;AnonymousSharedMemory&quot;, memoryService);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            Log.i(LOG_TAG, &quot;Succeed to add memory service.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } catch (RuntimeException ex) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            Log.i(LOG_TAG, &quot;Failed to add Memory Service.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            ex.printStackTrace();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    @Override</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    public void onStart(Intent intent, int startId) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        Log.i(LOG_TAG, &quot;Start Memory Service.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    @Override</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    public void onDestroy() {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    Log.i(LOG_TAG, &quot;Destroy Memory Service.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    这个Server继承了Android系统应用程序框架层提供的Service类，当它被启动时，运行在一个独立的进程中，当这个Server被启动时，它的onCreate函数就会被调用，然后它就通过ServiceManager的addService接口来添加MemoryService了:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    memoryService = new MemoryService();</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    try {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ServiceManager.addService(&quot;AnonymousSharedMemory&quot;, memoryService);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        Log.i(LOG_TAG, &quot;Succeed to add memory service.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    } catch (RuntimeException ex) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        Log.i(LOG_TAG, &quot;Failed to add Memory Service.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        ex.printStackTrace();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    }</span></div></div><div>    这样，当这个Server成功启动了，Client就可以通过ServiceManager的getService接口来获取这个MemoryService了。</div><div>    接着，我们就来看Client端的实现。Client端是一个Activity，实现在src/shy/luo/ashmem/Client.java文件中:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">package shy.luo.ashmem;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import java.io.FileDescriptor;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import java.io.IOException;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import shy.luo.ashmem.R;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.app.Activity;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.content.Intent;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.os.Bundle;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.os.MemoryFile;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.os.ParcelFileDescriptor;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.os.ServiceManager;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.os.RemoteException;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.util.Log;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.view.View;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.view.View.OnClickListener;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.widget.Button;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">import android.widget.EditText;</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">public class Client extends Activity implements OnClickListener {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    private final static String LOG_TAG = &quot;shy.luo.ashmem.Client&quot;;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    IMemoryService memoryService = null;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    MemoryFile memoryFile = null;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    private EditText valueText = null;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    private Button readButton = null;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    private Button writeButton = null;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    private Button clearButton = null;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        @Override</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        public void onCreate(Bundle savedInstanceState) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            super.onCreate(savedInstanceState);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            setContentView(R.layout.main);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        IMemoryService ms = getMemoryService();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        if(ms == null) {        </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                startService(new Intent(&quot;shy.luo.ashmem.server&quot;));</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        } else {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            Log.i(LOG_TAG, &quot;Memory Service has started.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            valueText = (EditText)findViewById(R.id.edit_value);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            readButton = (Button)findViewById(R.id.button_read);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            writeButton = (Button)findViewById(R.id.button_write);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            clearButton = (Button)findViewById(R.id.button_clear);</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        readButton.setOnClickListener(this);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            writeButton.setOnClickListener(this);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            clearButton.setOnClickListener(this);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            Log.i(LOG_TAG, &quot;Client Activity Created.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        @Override</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        public void onResume() {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        super.onResume();</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        Log.i(LOG_TAG, &quot;Client Activity Resumed.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        @Override</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        public void onPause() {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        super.onPause();</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        Log.i(LOG_TAG, &quot;Client Activity Paused.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        @Override</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        public void onClick(View v) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if(v.equals(readButton)) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                int val = 0;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                MemoryFile mf = getMemoryFile();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                if(mf != null) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                try {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        byte[] buffer = new byte[4];</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        mf.readBytes(buffer, 0, 0, 4);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        val = (buffer[0] &lt;&lt; 24) | ((buffer[1] &amp; 0xFF) &lt;&lt; 16) | ((buffer[2] &amp; 0xFF) &lt;&lt; 8) | (buffer[3] &amp; 0xFF);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                } catch(IOException ex) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    Log.i(LOG_TAG, &quot;Failed to read bytes from memory file.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    ex.printStackTrace();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                }    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                String text = String.valueOf(val);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                valueText.setText(text);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            } else if(v.equals(writeButton)) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                String text = valueText.getText().toString();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                int val = Integer.parseInt(text);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                IMemoryService ms = getMemoryService();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                if(ms != null) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                try {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        ms.setValue(val);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                } catch(RemoteException ex) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    Log.i(LOG_TAG, &quot;Failed to set value to memory service.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    ex.printStackTrace();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            } else if(v.equals(clearButton)) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                String text = &quot;&quot;;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                valueText.setText(text);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        private IMemoryService getMemoryService() {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if(memoryService != null) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return memoryService;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            memoryService = IMemoryService.Stub.asInterface(</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                            ServiceManager.getService(&quot;AnonymousSharedMemory&quot;));</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        Log.i(LOG_TAG, memoryService != null ? &quot;Succeed to get memeory service.&quot; : &quot;Failed to get memory service.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return memoryService;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        private MemoryFile getMemoryFile() {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if(memoryFile != null) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                return memoryFile;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            IMemoryService ms = getMemoryService();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            if(ms != null) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            try {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    ParcelFileDescriptor pfd = ms.getFileDescriptor();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                if(pfd == null) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    Log.i(LOG_TAG, &quot;Failed to get memory file descriptor.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    return null;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                }</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                try {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    FileDescriptor fd = pfd.getFileDescriptor();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    if(fd == null) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        Log.i(LOG_TAG, &quot;Failed to get memeory file descriptor.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        return null;                      </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    }    </span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                        memoryFile = new MemoryFile(fd, 4, &quot;r&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                } catch(IOException ex) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    Log.i(LOG_TAG, &quot;Failed to create memory file.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                    ex.printStackTrace();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                } catch(RemoteException ex) {</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                Log.i(LOG_TAG, &quot;Failed to get file descriptor from memory service.&quot;);</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                ex.printStackTrace();</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            return memoryFile;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        }</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">}</span></div></div><div>    Client端的界面主要包含了三个按钮Read、Write和Clear，以及一个用于显示内容的文本框。</div><div>    这个Activity在onCreate时，会通过startService接口来启动我们前面定义的Server进程。调用startService时，需要指定要启动的服务的名称，这里就是”shy.luo.ashmem.server”关联起来的。关于调用startService函数来启动自定义服务的过程，可以参考Android系统在新进程中启动自定义服务过程(startService)的原理分析一文。</div><div>    内部函数getMemoryService用来获取IMemoryService。如果是第一次调用该函数，则会通过ServiceManager的getService接口来获得这个IMemoryService接口，然后保存在类成员变量memoryService中，以后再调用这个函数时，就可以直接返回memoryService了。</div><div>    内部函数getMemoryFile用来从MemoryService中获得匿名共享内存文件的描述符。同样，如果是第一次调用该函数，则会通过IMemoryService的getFileDescriptor接口来获得MemoryService中的匿名共享内存文件的描述符，然后用这个文件描述符来创建一个MemoryFile实例，并保持在类成员变量memoryFile中，以后再调用这个函数时，就可以直接返回memoryFile了。</div><div>    有了memoryService和memoryFile后，我们就可以在Client端访问Server端创建的匿名共享内存了。点击Read按钮时，就通过memoryFile的readBytes接口把共享内存中的整数读出来，并显示在文本框中；点击Write按钮时，就通过memoryService这个代理类的setVal接口来调用MemoryService的本地实现类的setVal服务，从而把文本框中的数值写到Server端创建的匿名共享内存中去；点击Clear按钮是，就会清空文本框的内容。这样，我们就可以通过Read和Write按钮来验证我们是否在Client和Server两个进程中实现内存共享了。   </div><div>    现在，我们再来看看Client界面的配置文件，它定义在res/layout/main.xml文件中:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">&lt;LinearLayout xmlns:android=&quot;</span><span style="background-color: rgb(251, 250, 248); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">http://schemas.android.com/apk/res/android&quot;</span><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">;;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    android:orientation=&quot;vertical&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    android:layout_width=&quot;fill_parent&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    android:layout_height=&quot;fill_parent&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    &gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    &lt;LinearLayout</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        android:layout_width=&quot;fill_parent&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        android:layout_height=&quot;wrap_content&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        android:orientation=&quot;vertical&quot; </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        android:gravity=&quot;center&quot;&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        &lt;TextView </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:layout_width=&quot;wrap_content&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">               android:layout_height=&quot;wrap_content&quot; </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:text=&quot;@string/value&quot;&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        &lt;/TextView&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        &lt;EditText </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">             android:layout_width=&quot;fill_parent&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:layout_height=&quot;wrap_content&quot; </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:id=&quot;@+id/edit_value&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:hint=&quot;@string/hint&quot;&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        &lt;/EditText&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    &lt;/LinearLayout&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">     &lt;LinearLayout</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        android:layout_width=&quot;fill_parent&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        android:layout_height=&quot;wrap_content&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        android:orientation=&quot;horizontal&quot; </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        android:gravity=&quot;center&quot;&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        &lt;Button </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:id=&quot;@+id/button_read&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:layout_width=&quot;wrap_content&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:layout_height=&quot;wrap_content&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:text=&quot;@string/read&quot;&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        &lt;/Button&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        &lt;Button </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:id=&quot;@+id/button_write&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:layout_width=&quot;wrap_content&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:layout_height=&quot;wrap_content&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:text=&quot;@string/write&quot;&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        &lt;/Button&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        &lt;Button </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:id=&quot;@+id/button_clear&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:layout_width=&quot;wrap_content&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:layout_height=&quot;wrap_content&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:text=&quot;@string/clear&quot;&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        &lt;/Button&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    &lt;/LinearLayout&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">&lt;/LinearLayout&gt;</span></div></div><div>    相关的字符串定义在res/values/strings.xml文件中:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">&lt;resources&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    &lt;string name=&quot;app_name&quot;&gt;Ashmem&lt;/string&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    &lt;string name=&quot;value&quot;&gt;Value&lt;/string&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    &lt;string name=&quot;hint&quot;&gt;Please input a value...&lt;/string&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    &lt;string name=&quot;read&quot;&gt;Read&lt;/string&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    &lt;string name=&quot;write&quot;&gt;Write&lt;/string&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    &lt;string name=&quot;clear&quot;&gt;Clear&lt;/string&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">&lt;/resources&gt;</span></div></div><div>    这样，界面的相关配置文件就介绍完了。</div><div>    我们还要再看看程序描述文件AndroidMainfest.xml的相关配置，它位于Ashmem目录下:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">&lt;manifest xmlns:android=&quot;</span><span style="background-color: rgb(251, 250, 248); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">http://schemas.android.com/apk/res/android&quot;</span><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">;;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">      package=&quot;shy.luo.ashmem&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">      android:sharedUserId=&quot;android.uid.system&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">      android:versionCode=&quot;1&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">      android:versionName=&quot;1.0&quot;&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    &lt;application android:icon=&quot;@drawable/icon&quot; android:label=&quot;@string/app_name&quot;&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        &lt;activity android:name=&quot;.Client&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                  android:label=&quot;@string/app_name&quot;&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            &lt;intent-filter&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            &lt;/intent-filter&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        &lt;/activity&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        &lt;service </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:enabled=&quot;true&quot; </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:name=&quot;.Server&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            android:process=&quot;.Server&quot; &gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            &lt;intent-filter&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                &lt;action android:name=&quot;shy.luo.ashmem.server&quot;/&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">                &lt;category android:name=&quot;android.intent.category.DEFAULT&quot;/&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">            &lt;/intent-filter&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        &lt;/service&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    &lt;/application&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">&lt;/manifest&gt;</span></div></div><div>    这里我们看到，下面的配置项把服务名称”shy.luo.ashmem.server”和本地服务类Server关联了起来：</div><div> </div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">   &lt;service </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    android:enabled=&quot;true&quot; </span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    android:name=&quot;.Server&quot;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    android:process=&quot;.Server&quot; &gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    &lt;intent-filter&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">             &lt;action android:name=&quot;shy.luo.ashmem.server&quot;/&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">             &lt;category android:name=&quot;android.intent.category.DEFAULT&quot;/&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">        &lt;/intent-filter&gt;</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    &lt;/service&gt;</span></div></div><div><br/></div><div>    这样，我们就可以通过startService(new Intent(“shy.luo.ashmem.server”))来启动这个Server了。不过，在Android中，启动服务是需要权限的，所以，下面这一行配置获取了启动服务需要的相应权限:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">    android:sharedUserId=&quot;android.uid.system&quot;</span></div></div><div><br/></div><div>    最后，我们来看工程的编译脚本文件Android.mk,它位于Ashmem目录下:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">LOCAL_PATH:= $(call my-dir)</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">include $(CLEAR_VARS)</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">LOCAL_MODULE_TAGS := optional</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">LOCAL_SRC_FILES += $(call all-subdir-java-files)</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">LOCAL_PACKAGE_NAME := Ashmem</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">LOCAL_CERTIFICATE := platform</span></div><div><br/></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">include $(BUILD_PACKAGE)</span></div></div><div>    这里又有一个关键的地方:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">LOCAL_CERTIFICATE := platform</span></div></div><div>    因为我们需要在程序中启动Service，所以要配置这一行，并且要把源代码工程放在Android源代码平台进行编译。</div><div>    这样，整个例子的源代码实现就介绍完了，接下来就要编译了。有关如何单独编译Android源代码工程模块，以及如何打包system.img,请参考如何单独编译Android源代码中的模块一文。</div><div>    执行以下命令进行编译和打包:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">USER-NAME@MACHINE-NAME:~/Android$ mmm packages/experimental/Ashmem</span></div><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">USER-NAME@MACHINE-NAME:~/Android$ make snod</span></div></div><div>    这样，打包好的Android系统镜像文件system.img就包含我们前面创建的Ashmem应用程序了。</div><div>    再接下来，就是运行模拟器来运行我们的例子了。关于如何在Android源代码工程中运行模拟器，请参考在Ubuntu上下载、编译和安装Android最新源代码一文。</div><div>    执行以下命令启动模拟器:</div><div style="box-sizing: border-box; padding: 8px; font-size: 12px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);"><div><span style="background-color: rgb(251, 250, 248); color: rgb(51, 51, 51); font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px;">USER-NAME@MACHINE-NAME:~/Android$ emulator</span></div></div><div>    模拟器启动起，就可以在HomeScreen上看到Ashmem应用程序图标了:</div><div><en-media hash="32f3af1742e6f03a1501ff3c188ad3b8" type="image/png"/><br/></div><div><br/></div><div>    点击Ashmem图标，启动Ashmem应用程序，界面如下:</div><div><en-media hash="83a1c1669f3997e94ddfbf3f879129ab" type="image/png"/><br/></div><div><br/></div><div>    这样，我们就可以验证程序的功能了，看看是否实现了在两个进程中通过使用Android系统的匿名共享内存机制来共享内存数据的功能。</div><div>    通过这个例子的学习，相信读者对Android系统匿名共享内存子系统Ashmem有了一个大概的认识，但是，这种认识还是停留在表面上，我们在文件开始时就提到，Android系统匿名共享内存子系统Ashmem两个特点，一是能够辅助内存管理系统有效管理不再使用的内存块，二是它通过Binder进程间通信机制来实现进程间的内存共享。第二个特点我们在上面的例子中看到了，但是似乎还不够深入，我们知道，在Linux系统中，文件描述符其实是一个整数，它是用来索引进程保存在内核空间的打开文件数据结构的，而且，这个文件描述符只是在进程内有效，也就是说，在不同进程中，相同的文件描述符的值，代表的可能是不同的打开文件，既然是这样，把Server进程中的文件描述符传给Client进程，似乎就没有用了，但是不用担心，在传输过程中，Binder驱动程序会帮我们处理好一切，保证Client进程拿到的文件描述符是在本进程中有效的，并且它指向就是Sever进程创建的匿名共享内存文件。至于第一个特点，我们也准备在后续学习Android系统匿名共享内存子系统Ashmem时，再详细介绍。</div><div>    因此，为了深入了解Android系统匿名共享内存子系统Ashmem，在接下来的两篇文章中，围绕上面提到的两个特点，分别学习:</div><div>1.<a href="http://blog.csdn.net/luoshengyang/article/details/6664554">Android系统匿名共享内存子系统Ashmem时如何够辅助内存管理系统来有效地管理不再使用的内存块？</a></div><div>2.<a href="http://blog.csdn.net/luoshengyang/article/details/6666491">Android系统匿名共享内存子系统Ashmem时如何通过Binder进程间通信机制来实现进程间的内存共享的？</a></div><div>    学习完这两篇文章后，相信大家对Android系统匿名共享内存子系统Ashmem就会有一个更深刻的认识了，敬请关注。</div></en-note>
]]></content><created>20180101T094304Z</created><updated>20180102T083043Z</updated><note-attributes><latitude>22.5365894003108</latitude><longitude>114.0505413045195</longitude><altitude>11.28391075134277</altitude><author>雅字杀手</author><source>desktop.mac</source><reminder-order>0</reminder-order></note-attributes><resource><data encoding="base64">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
35hm7G6cZVxhfN2EaOJokmay3aTDFDW1M00xLTe9aoaa2ZvxzLabdU4iTHKaxJ9UMemWOdXc0zzXvMa8
x4JhEWyRb9Fg8XKy/uT4yesnX5j81dLOMt1yr+U9KyWrqVb5Vk1Wr61NrdnW5dbXbWg2fjZLbBptXtma
2XJtd9jetqPbTbNbYddq98XewV5oX2vf76DvkOCwzeGWo7JjmONqx4tOBCcvpyVOzU4fne2dc5wPO//l
Yu6S5rLf5dkUoyncKXun9LrqurJcd7t2uzHdEtx2uXW767iz3CvcH3noeXA89nk89TTxTPU84PnSy9JL
6HXM6723s/ci7xYfzMffp8in3VfJN8q3zPehn65fsl+N36C/nf8C/5YAQkBQwPqAW4GagezA6sDBqQ5T
F009G0QNiggqC3oUbBosDG6ahk6bOm3jtPshBiH8kIZQEBoYujH0QZhRWFbYb9OJ08Oml09/Em4VvjD8
QgQ9Yk7E/oh3kV6RayPvRRlHiaJao+WjZ0ZXR7+P8YnZENMdOzl2UeyVOPU4XlxjPCk+On5f/NAM3xmb
Z/TNtJtZOPPmLKNZ82Zdmq0+O332iTnyc1hzjiQQEmIS9id8ZoWyKlhDiYGJ2xIH2d7sLewXHA/OJk4/
15W7gfs0yTVpQ9KzZNfkjcn9Ke4pJSkDPG9eGe9VakDqztT3aaFplWkj6THpdRnkjISM43wlfhr/bKZW
5rzMToGZoFDQneWctTlrUBgk3JeNZM/KbsxRhludNpGx6CdRT65bbnnuh7nRc4/MU5zHn9c233T+qvlP
8/zyflmAL2AvaF2os3DZwp5Fnot2L0YWJy5uXaK3pGBJ31L/pVXLKMvSlv2eb5m/If/t8pjlTQWaBUsL
en/y/6mmUK5QWHhrhcuKnSvxlbyV7atsVm1d9bWIU3S52LK4pPjzavbqyz9b/Vz688iapDXta+3X7lhH
XMdfd3O9+/qqDYob8jb0bpy2sX4Tc1PRpreb52y+VGJbsnMLZYtoS3dpcGnjVv2t67Z+Lkspu1HuVV63
TWPbqm3vt3O2d+3w2FG7U3Nn8c5Pu3i7bu/2311fYVhRsoe4J3fPk73Rey/84vhL9T71fcX7vlTyK7ur
wqvOVjtUV+/X2L+2Bq0R1fQfmHmg46DPwcZa89rddYy64kPgkOjQ818Tfr15OOhw6xHHI7VHDY5uO0Y/
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
/7JxUq7OJaDJ4J3LX7WLgAiIgAiIQCIBjAqMDUKY3veThp9+6il30EEHuT387tC1JoyLefPmhYnfzMkg
XApPBqtRrVq1qtbiMz2v9mXClJhJ/ZeIRRebkIAMjSbsFIkkAiIgAiIgAhAg6oAN21jeFAOAPQYGvPGG
Gz1mTDBCsiyNaiQZAWcX8TcXLQrGC9dZXYqJ33379g3GTL09GSaLHdW+8kvbGiv133t197QZax3zIyBD
Iz+WKkkEREAEREAEcifAMp9MEO/tN3Zb570beDjYQZzEnIqBfj4H99n4DcODCdc8g2LKPAuWy13j51zY
PAyeYzM+vCUsYcvqUhgg9ZqTQX2lktqn/mvm97PUu6t75QnI0CjPSDlEQAREQAREoFMJsG8G8zUwDnb3
Ho4N3nhgwjbGQ9SAKCUkzzPJnA9eku3eW8J8DJawzXt1qVJyJN1T+5KodLym/uvIQ2etQUCGRmv0k6QU
AREQARHYxQlgDOCdYCI1IU/sEL5t2za3wXsk8Eps9h6MrX7CONfI0+b35OjlPRx4QgiN6l/wimzcsCGE
oFAWeZslqX3qP97VZn0/m+XnpNXkkKHRaj0meUVABERABHZpAhgHNpeCUKl+3ogY4g0PNvsjbAojg9Fv
FHfyEprEilUYFkz2JqSqmZPap/5r5vdTslVGQIZGZbyUWwREQAREQASahgBGAx/mbXTFpPa1dq929f5r
7d5pjPT12wGoMfKrFhEQAREQAREQAREQAREQgSYkIEOjCTtFIomACIiACIiACIiACIhAqxPovr3VWyD5
RUAEREAEREAEREAEREAEmo6APBpN1yUSSAREQAREQAREQAREQARan4AMjdbvQ7VABERABERABERABERA
BJqOgAyNpusSCSQCIiACIiACIiACIiACrU9Ahkbr96FaIAIiIAIiIAIiIAIiIAJNR0CGRtN1iQQSAREQ
AREQAREQAREQgdYnIEOj9ftQLRABERABERABERABERCBpiMgQ6PpukQCiYAIiIAIiIAIiIAIiEDrE5Ch
0fp9qBaIgAiIgAiIgAiIgAiIQNMRkKHRdF0igURABERABERABERABESg9QnI0Gj9PlQLREAEREAEREAE
REAERKDpCMjQaLoukUAiIAIiIAIiIAIiIAIi0PoEZGi0fh+qBSIgAiIgAiIgAiIgAiLQdARkaDRdl0gg
ERABERABERABERABEWh9AjI0Wr8P1QIREAEREAEREAEREAERaDoC3Xfs2NF0QkkgERABERABERABERAB
ERCB1iYgj0Zr95+kFwEREAEREAEREAEREIGmJCBDoym7RUKJgAiIgAiIgAiIgAiIQGsTkKHR2v0n6UVA
BERABERABERABESgKQnI0GjKbpFQIiACIiACIiACIiACItDaBDQZvLX7T9KLgAiIgAiIgAiIgAiIQFMS
6N6tW7emFExCiYAIiIAIiIAIiIAIiIAItC4BhU61bt9JchEQAREQAREQAREQARFoWgIyNJq2aySYCIiA
CIiACIiACIiACLQuARkardt3klwEREAEREAEREAEREAEmpaAJoM3bddIMBEQAREQAREQAREQARFoXQLy
aLRu30lyERABERABERABERABEWhaAjI0mrZrJJgIiIAIiIAIiIAIiIAItC6B7ju6ydZo3e6T5CIgAiIg
AiIgAiIgAiLQnARkZTRnv0gqERABERABERABERABEWhpApoM3tLdJ+FFQAREQAREQAREQAREoDkJyKPR
nP0iqURABERABERABERABESgpQl079atW0s3QMKLgAiIgAiIgAiIgAiIgAg0HwF5NJqvTySRCIiACIiA
CIiACIiACLQ8Ac3RaPkuVANEQAREQAREQAREQAREoPkIyKPRfH0iiURABERABERABERABESg5QnI0Gj5
LlQDREAEREAEREAEREAERKD5CMjQaL4+kUQiIAIiIAIiIAIiIAIi0PIEZGi0fBeqASIgAiIgAiIgAiIg
AiLQfARkaDRfn0giERABERABERABERABEWh5At3dDu2j0fK9qAaIgAiIgAiIgAiIgAiIQJMR0PK2TdYh
EkcEREAEREAEREAEREAEugKB7q7bjq7QDrVBBERABERABERABERABESgiQhojkYTdYZEEQEREAEREAER
EAEREIGuQkCGRlfpSbVDBERABERABERABERABJqIgAyNJuoMiSICIiACIiACIiACIiACXYWADI2u0pNq
hwiIgAiIgAiIgAiIgAg0EQEZGk3UGRJFBERABERABERABERABLoKARkaXaUn1Q4REAEREAEREAEREAER
aCIC2kejiTpDooiACIiACIiACIiACIhAVyHQXbtodJWuVDtEQAREQAREQAREQAREoHkIKHSqefpCkoiA
CIiACIiACIiACIhAlyEgQ6PLdKUaIgIiIAIiIAIiIAIiIALNQ0CGRvP0hSQRAREQAREQAREQAREQgS5D
QIZGl+lKNUQEREAEREAEREAEREAEmoeADI3m6QtJIgIiIAIiIAIiIAIiIAJdhoAMjS7TlWqICIiACIiA
CIiACIiACDQPAe2j0Tx9IUlEQAREQAREQAREQAREoMsQkEejy3SlGiICIiACIiACIiACIiACzUNAhkbz
9IUkEQEREAEREAEREAEREIEuQ0CGRpfpSjVEBERABERABERABERABJqHgAyN5ukLSSICIiACIiACIiAC
IiACXYZA925dpilqiAiIgAiIgAiIgAiIgAiIQLMQkEejWXpCcoiACIiACIiACIiACIhAFyLQtqMLNUZN
EQEREAERaCyBd999t7EVqjYREAEREIG6EBg+fHju5cqjkTtSFSgCIiACIiACIiACIiACrUVg3LhxuQvc
lnuJKlAEREAERGCXI/CP3/qW27p1q9u+fXunt/1/f/3rQQbJVLorxKk0H7srTkai9FGcSvOxu83MyWTM
89i2Y4eCp/IEqrJEQAREYFcksGXLFrdu3Tr3wQcfNE3zJVO2rhAnccpGIFsuvU+tyymb5JXlkqFRGS/l
FgEREAERSCCAJ2Pz5s1u06ZNCXc755Jkysa9EZzWr1/v2traXK9evTIJ1QiZMgkSySSZIjBKfG0EpxUr
VriePXu63XffvYQkH95qhEwf1pbtWzPKlE3yynK1deumBW4rQ6bcIiACIiACcQLmHbdj/H6e54yYrl69
2vXp08f169cvtWiTxY6pGTPeQDFAYaZ+vpN22223IAdKT5ZkstgxyzNZ8xiXYcOGhUcw/NauXevsPK0c
k8WOaflqub5hwwZ32GGHuW3btrksCwiYLHastu41a9YEBug6KKXx94X73BswYEDZKkwWO5Z9oIoM9Bnv
2JAhQzI9bbLYMdNDZTJt3Lgx/HzRV7Dp37+/GzhwYJmnPrxtstjxwzv5feNdP/vsswOr2bNnly3YZLFj
2QdqzGA/e7xzab8bTBY71lhl6uO84/y+GjRoUGqeet6QR6OedFW2CIiACOwiBPhjyR+zev/RBCcKEIrh
ySef7N5++233xhtvJFLOUyYUdj4oqh/5yEfc0KFDg5FBm5cvX+6WLFkS5OrevfQaK3nKFG80CiJynXji
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
</data><mime>image/png</mime><width>794</width><height>565</height><duration>0</duration><resource-attributes/></resource><resource><data encoding="base64">iVBORw0KGgoAAAANSUhEUgAAAxkAAAI1CAYAAAC6+jcGAAAMF2lDQ1BJQ0MgUHJvZmlsZQAASImVlwdY
U8kWx+eWFEJCC0RASuhNkF6ld0FAOtgISYBQQggEFTuyqODaRQQrugKi4FoAWVTEriwC9rogoqKsiwUb
Km+SALruK987fHPvjzNnzvxn7tybGQDkbVkCQTqqAEAGP0cY7u/FjI2LZ5IeAQT+yQB54MxiZws8w8KC
AbSx+9/t3U0YC+2auTjXP+v/qylyuNlsAJAwyImcbHYG5KMA4OpsgTAHAEIH9OvNzRGI+S1kZSEUCACR
LOZkKWuIOVHKlpKYyHBvyD4AkKksljAZADlxfmYuOxnmkRNAtuRzeHzIuyC7sVNYHMjdkCdlZGRClqdC
Nk78Lk/y33ImjudksZLHWToWiZF9eNmCdNb8/3M6/rdlpIvG+tCFhZoiDAgXjxnOW1VaZpCYoXakmZ8Y
EgpZCfJFHkcSL+a7KaKAqNH4AXa2N5wzwAAABRyWTxBkOJcoQ5QW5TnK1iyhpC2MR0N4OYGRo5wozAwf
zY/m8tNDgkfzrEzhBo7xDm62b8RYTBLPLxAyXGno0byUyBipTvRsLi86BLIc5I7stIig0bYP81K8Q8Zi
hKJwsWZ9yG+ThH7h0hhMNSN7bFyYBZsl6UsVskdOSmSAtC0Wy82ODR7TwOH6+Eo1YBwuP2pUGwZXl1f4
aNtCQXrYaDy2g5vuHy6dZ+xQdm7EWNuuHLjApPOAPUplTQ2T6sfeCXLCIqXacBwEA2/gA5hABEsiyASp
gNc+0DAA/5PW+AEWEIJkwAXmo56xFjGSGj68RoA88CckLsgeb+clqeWCXOj/Mu6VXs1BkqQ2V9IiDTyB
nIGr4264Cx4Mrx6wWOOOuNNYO6b8WK9EX6IPMYDoRzQZ18GGqtNhEQLev/EFwTsXjk6shT82hm/5CE8I
nYRHhBuEbsIdEA0eS7KMRs3h5Qt/UM4E00A3zOY3OrpEmLN/LAY3hKrtcC/cFeqH2nEGrg7McVs4Ek/c
HY7NDnq/Vyga1/ZtLn/sT6z6+/GM+uVM5exGVSSOPxnv8agfs3h/N0cceA/6MRJbiR3BLmCnsUtYM9YA
mNgprBFrw06IeXwlPJashLHewiXa0mAe3liMZY1lv+Xnf/TOGlUglDxvkMOdlyN+IbwzBfOFvOSUHKYn
/CJzmYF8tsUkprWllSMA4u+79PPxhiH5biOMy998WS0AOBVBZ/I3H0sPgONPAKC/++bTew1fr3UAnOhg
i4S5Uh8uvhAABf5qKAM1oAX0gDEckzWwBy7AA/iCqSAURII4MBvOegrIgKrngoVgGSgExWAd2AzKwE6w
B1SBg+AwaADN4DQ4D66ADnAD3INrow+8AIPgHRhGEISE0BA6ooZoIwaIGWKNOCJuiC8SjIQjcUgCkozw
ERGyEFmOFCMbkDJkN1KN/IocR04jl5BO5A7Sg/Qjr5FPKIZSUWVUEzVEJ6OOqCcahEais9BkNAvNQwvQ
NWgpWoEeQOvR0+gV9Abajb5AhzCAyWIMTAczxxwxbywUi8eSMCG2GCvCSrAKrBZrgs/6GtaNDWAfcSJO
x5m4OVyfAXgUzsaz8MX4arwMr8Lr8bP4NbwHH8S/EmgEDYIZwZkQSIglJBPmEgoJJYR9hGOEc/Dd6SO8
IxKJDKIR0QG+m3HEVOIC4mridmIdsYXYSewlDpFIJDWSGcmVFEpikXJIhaStpAOkU6QuUh/pA1mWrE22
JvuR48l8cj65hLyffJLcRX5KHpZRkDGQcZYJleHIzJdZK7NXpknmqkyfzDBFkWJEcaVEUlIpyyillFrK
Ocp9yhtZWVldWSfZ6bI82aWypbKHZC/K9sh+pCpRTane1JlUEXUNtZLaQr1DfUOj0QxpHrR4Wg5tDa2a
dob2kPZBji5nIRcox5FbIlcuVy/XJfdSXkbeQN5TfrZ8nnyJ/BH5q/IDCjIKhgreCiyFxQrlCscVbikM
KdIVrRRDFTMUVyvuV7yk+EyJpGSo5KvEUSpQ2qN0RqmXjtH16N50Nn05fS/9HL1PmahspByonKpcrHxQ
uV15UEVJxVYlWmWeSrnKCZVuBsYwZAQy0hlrGYcZNxmfJmhO8JzAnbBqQu2ErgnvVSeqeqhyVYtU61Rv
qH5SY6r5qqWprVdrUHugjqubqk9Xn6u+Q/2c+sBE5YkuE9kTiyYennhXA9Uw1QjXWKCxR6NNY0hTS9Nf
U6C5VfOM5oAWQ8tDK1Vrk9ZJrX5turabNk97k/Yp7edMFaYnM51ZyjzLHNTR0AnQEens1mnXGdY10o3S
zdet032gR9Fz1EvS26TXqjeor60/TX+hfo3+XQMZA0eDFIMtBhcM3hsaGcYYrjBsMHxmpGoUaJRnVGN0
35hm7G6cZVxhfN2EaOJokmay3aTDFDW1M00xLTe9aoaa2ZvxzLabdU4iTHKaxJ9UMemWOdXc0zzXvMa8
x4JhEWyRb9Fg8XKy/uT4yesnX5j81dLOMt1yr+U9KyWrqVb5Vk1Wr61NrdnW5dbXbWg2fjZLbBptXtma
2XJtd9jetqPbTbNbYddq98XewV5oX2vf76DvkOCwzeGWo7JjmONqx4tOBCcvpyVOzU4fne2dc5wPO//l
Yu6S5rLf5dkUoyncKXun9LrqurJcd7t2uzHdEtx2uXW767iz3CvcH3noeXA89nk89TTxTPU84PnSy9JL
6HXM6723s/ci7xYfzMffp8in3VfJN8q3zPehn65fsl+N36C/nf8C/5YAQkBQwPqAW4GagezA6sDBqQ5T
F009G0QNiggqC3oUbBosDG6ahk6bOm3jtPshBiH8kIZQEBoYujH0QZhRWFbYb9OJ08Oml09/Em4VvjD8
QgQ9Yk7E/oh3kV6RayPvRRlHiaJao+WjZ0ZXR7+P8YnZENMdOzl2UeyVOPU4XlxjPCk+On5f/NAM3xmb
Z/TNtJtZOPPmLKNZ82Zdmq0+O332iTnyc1hzjiQQEmIS9id8ZoWyKlhDiYGJ2xIH2d7sLewXHA/OJk4/
15W7gfs0yTVpQ9KzZNfkjcn9Ke4pJSkDPG9eGe9VakDqztT3aaFplWkj6THpdRnkjISM43wlfhr/bKZW
5rzMToGZoFDQneWctTlrUBgk3JeNZM/KbsxRhludNpGx6CdRT65bbnnuh7nRc4/MU5zHn9c233T+qvlP
8/zyflmAL2AvaF2os3DZwp5Fnot2L0YWJy5uXaK3pGBJ31L/pVXLKMvSlv2eb5m/If/t8pjlTQWaBUsL
en/y/6mmUK5QWHhrhcuKnSvxlbyV7atsVm1d9bWIU3S52LK4pPjzavbqyz9b/Vz688iapDXta+3X7lhH
XMdfd3O9+/qqDYob8jb0bpy2sX4Tc1PRpreb52y+VGJbsnMLZYtoS3dpcGnjVv2t67Z+Lkspu1HuVV63
TWPbqm3vt3O2d+3w2FG7U3Nn8c5Pu3i7bu/2311fYVhRsoe4J3fPk73Rey/84vhL9T71fcX7vlTyK7ur
wqvOVjtUV+/X2L+2Bq0R1fQfmHmg46DPwcZa89rddYy64kPgkOjQ818Tfr15OOhw6xHHI7VHDY5uO0Y/
VlSP1M+vH2xIaehujGvsPD71eGuTS9Ox3yx+q2zWaS4/oXJi7UnKyYKTI6fyTg21CFoGTief7m2d03rv
TOyZ62enn20/F3Tu4nm/82cueF44ddH1YvMl50vHLztebrhif6W+za7t2O92vx9rt2+vv+pwtbHDqaOp
c0rnyS73rtPXfK6dvx54/cqNkBudN6Nu3r4181b3bc7tZ3fS77y6m3t3+N7S+4T7RQ8UHpQ81HhY8YfJ
H3Xd9t0nenx62h5FPLrXy+598Tj78ee+gie0JyVPtZ9WP7N+1tzv19/xfMbzvheCF8MDhX8q/rntpfHL
o395/NU2GDvY90r4auT16jdqbyrf2r5tHQobevgu493w+6IPah+qPjp+vPAp5tPT4bmfSZ9Lv5h8afoa
9PX+SMbIiIAlZEm2AhgsaFISAK8rAaDFwb0DPMdR5KTnL4kh0jOjhMB/YukZTWL2AFR6ABC1FIBguEfZ
AYsBZCq8i7ffkR4AtbEZL6OWnWRjLc1FhacYwoeRkTeaAJCaAPgiHBkZ3j4y8mUvFHsHgJYs6blPbES4
x99lIqb2Ngr40f4FAxRsZs6IoUgAAEAASURBVHgB7L0NYFxVmTf+JE3amTYtMyWFBFrtAEVSWiAFxEb5
iosfVVxpdfdPq+6yxY+14P5fy7rvSl/31bfsvivg7qtUd1+trh/FD7bgipRVNIhoiqIJCNtUWjuFFibQ
lpmStDNN0uT9/Z57z+RmyMfkeyZ5Tjs5c+8959zz/O65yfM7z/OcU/KOMy7sET+VlJToN+al2bPexRL/
2JXhWX5njeA5r3TwXLdeL+0p7b8c2s2tHzwe6HvpkPf1+4c+9vT0CPsfbMv1E71yX/V6Twn6izOl3X5/
cexSsH5ue8QreL0UBXjc0+Pa93BgWzzv8HTHlMdLfcvxnNeO117ufd11ry767T8ndz7Yp+B3lNQqQ7Xn
2g32wZ1zed923dleiXjG1RfpxdM7P8Ov0Pe8619ueb9woD13xsvdffrrk44DYM9UEgAqWLb3uXjPgaOB
10vFAzZYVtvx29NG2a5/PMM9dnchcI2nXDl3P3ccvMbvEhh/eowfTg7W4XeXvPO9xzw/wx/frpyr445d
3ex98J4OlFi3xH9+3r167z9Q/0t9HNgrrc/3AUKzXyVOeF7zn4d7H7VsANsyvx13n+x1tJH97t+D/e8t
1/vc2OfSUk++Hr9jrm6fvlBO/96uX67NbDnUd2V4jck79vrTe+zO945vlnN96c6Rq7eeV55lXXmvfZbA
c/X7143xQZnc83TtsoxfBN/YVu9zde24sv4jYRUU8zsUeE9deV4OfucxU99zvb+/eI1tu/vw2L3PJSUz
9Lyry5zlgsfB8r39d7j0/3uDeLIN93o7fL220EoAK55z93PXc8+5X99uXLrj3Hq5x64dd//e6739D8or
7r1Dx73zeEN8TPrrW7Yf/uve275f2n+O7Ldrj3kWGHc///dLCd5Ipmyf3O8dvxyfl5e8/vN5DNo/v189
vYPQr987Dv0TA2S95dx9nIzaR7+/rnJJSe87wHOurLveO378M/74c9d7/057Zxwe7jpaVGxkhn8fh59f
gPW9fnrvT3ac6YPqlaW3vZxzfnsOr2z/9TzvedKTqdQbF+IPLA9mtuWes//+op4be7yn61/fdr330zvn
y+c66PeHbWTrBJ45fpP68p50NTR347IXbw+Xk4HfJ8EKqm/5Y4TPNTu6/Pe0R7z2KWdvP3jg/33mmA4k
DANPbnSkh38bsi26+v4d/PGdre3/LfLGf/YsWg6Wd70L3BB6AfvFevzg8Xi/Y066si736/j3LUVZPqng
ndgO/96wnd6H11tf2w/8zWSLpT3e9eBp1xdtD9e9/vnyd3t3dH0W/5j6OZMbMyXuC891829MmdcvHPNe
Jajn2mU9Ju233w4b4nWOgzK92s+PE8si/ZydDqeCLz8fiP/S9iu698B6Lw33uLemfTMEDIEAAnyVcl+n
wGX7aggYAoaAIWAIGAKFhcCXVq/3OuQzzhJnyeAxmcfJ86NaYNGiRYXVc+uNIWAIGAKGgCFgCBgChoAh
YAgUJAIHDhzQfv3LdR/ERCEsXkGS0b1svpxyynS1YBTk87JOGQKGgCFgCBgChoAhYAgYAkWDwNGjKfmX
d3+4l2ScXD5f5s6dVzQCWEcNAUPAEDAEDAFDwBAwBAwBQ6DwEGhre6VvTAYDPCwZAoaAIWAIGAKGgCFg
CBgChoAhMBoENPCbVoxQaLaczEbEj6ZJq2sIGAKGgCFgCBgChoAhYAgYAuOBAFdzYhx1R+cJeeVoO1aB
ylnpC9d1oSp/Baqh+sC2SnXVRK5J58Vosz5XYCmbMUMq5s2V8rLyoZrpc528Iru6VG4H+5S0A0PAEDAE
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
Y/inTZ1ayG8wszMpiIAIiIAIDHwC8+fPz/U5UaglA02Qz5w5c/yUYMzxzRu7MsxQA/9W6wpEQATamQBv
sfgt5DcSC0YRCkY789O1iYAIiIAIhE2gUCXDLp2ZBPiwyqqCCIiACIhA+xAYPXp0nxW62+fKdCUiIAIi
IAKtEChFyWhFQOUVAREQAREIm4CGwoZ9fySdCIiACPQHgfznwuuPq1CdIiACIiACIiACIiACIiACwRAY
UuQ6GcFcpQQRAREQAREQAREQAREQAREojYAsGaWhVkUiIAIiIAIiIAIiIAIiMDgISMkYHPdZVykCIiAC
IiACIiACIiACpRGQklEaalUkAiIgAiIgAiIgAiIgAoODgJSMwXGfdZUiIAIiIAIiIAIiIAIiUBoBOX6X
hloViYAIiIAIiIAIiIAIiMDgICBLxuC4z7pKERABERABERABERABESiNwJCOjo7SKlNFIiACIiACIiAC
IiACIiAC7U9ASkb732NdoQiIgAiIgAiIgAiIgAiUSmDIvj/2l1qhKhMBERABERABERABERABEWhvAvLJ
aO/7q6sTAREQAREQAREQAREQgdIJaHap0pGrQhEQAREQAREQAREQARFobwKyZLT3/dXViYAIiIAIiIAI
iIAIiEDpBKRklI5cFYqACIiACIiACIiACIhAexPQcKn2vr+6OhEQAREQAREQAREQAREonYCmsC0duSoU
AREQAREQAREQAREQgfYmIEtGe99fXZ0IiIAIiIAIiIAIiIAIlE6gY+7YWX/8eux/Sq9YFYqACIiACIiA
CIiACIiACLQngf8CBQZ+ardaRCoAAAAASUVORK5CYII=</data><mime>image/png</mime><width>793</width><height>565</height><duration>0</duration><resource-attributes/></resource></note>
</en-export>
